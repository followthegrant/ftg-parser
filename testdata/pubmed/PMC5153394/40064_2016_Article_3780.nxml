<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Springerplus</journal-id><journal-id journal-id-type="iso-abbrev">Springerplus</journal-id><journal-title-group><journal-title>SpringerPlus</journal-title></journal-title-group><issn pub-type="epub">2193-1801</issn><publisher><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Cham</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">28028490</article-id><article-id pub-id-type="pmc">5153394</article-id><article-id pub-id-type="publisher-id">3780</article-id><article-id pub-id-type="doi">10.1186/s40064-016-3780-2</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research</subject></subj-group></article-categories><title-group><article-title>Discussion on software aging management of nuclear power plant safety digital control system</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes"><name><surname>Liang</surname><given-names>Huihui</given-names></name><address><email>lianghuihui@cgnpc.com.cn</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Gu</surname><given-names>Pengfei</given-names></name><address><email>gupengfei@cgnpc.com.cn</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Tang</surname><given-names>Jianzhong</given-names></name><address><email>tangjianzhong@cgnpc.com.cn</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Chen</surname><given-names>Weihua</given-names></name><address><email>chenweihua@cgnpc.com.cn</email></address><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Gao</surname><given-names>Feng</given-names></name><address><email>gaofeng@cgnpc.com.cn</email></address><xref ref-type="aff" rid="Aff1"/></contrib><aff id="Aff1">State Key Laboratory of Nuclear Power Safety Monitoring Technology and Equipment, China Nuclear Power Design CO., LTD, Shenzhen, China </aff></contrib-group><pub-date pub-type="epub"><day>12</day><month>12</month><year>2016</year></pub-date><pub-date pub-type="pmc-release"><day>12</day><month>12</month><year>2016</year></pub-date><pub-date pub-type="collection"><year>2016</year></pub-date><volume>5</volume><issue>1</issue><elocation-id>2092</elocation-id><history><date date-type="received"><day>8</day><month>6</month><year>2016</year></date><date date-type="accepted"><day>1</day><month>12</month><year>2016</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2016</copyright-statement><license license-type="OpenAccess"><license-p>
<bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made.</license-p></license></permissions><abstract id="Abs1"><p>
Managing the aging of digital control systems ensures that nuclear power plant systems are in adequate safety margins during their life cycles. Software is a core component in the execution of control logic and differs between digital and analog control systems. The hardware aging management for the digital control system is similar to that for the analog system, which has matured over decades of study. However, software aging management is still in the exploratory stage. Software aging evaluation is critical given the higher reliability and safety requirements of nuclear power plants. To ensure effective inputs for reliability assessment, this paper provides the required software aging information during the life cycle. Moreover, the software aging management scheme for safety digital control system is proposed on the basis of collected aging information.</p></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Safety digital control system</kwd><kwd>Software aging factors</kwd><kwd>Software aging management</kwd></kwd-group><funding-group><award-group><funding-source><institution>National Science and Technology Major Project</institution></funding-source><award-id>2014ZX06004002-004</award-id><principal-award-recipient><name><surname>Chen</surname><given-names>Weihua</given-names></name></principal-award-recipient></award-group></funding-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2016</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>Background</title><p>The reactor status and power generation of a nuclear power plant are controlled by a digital control system. The digital control system can implement protective measures to maintain nuclear power plant safety in emergencies, as well as provides accurate information to the operator. The performance of the digital control system is directly related to the safety and economic operation of nuclear power plants. A variety of protective measures are taken by the digital system of a nuclear power plant. Software aging management enhances economic benefits and ensures the safe operation of nuclear power plants. Given that the aging management of the digital control system is a relatively new topic, no significant research on nuclear power plants has been established.</p><p>The aging management of nuclear power plant includes the following: (a) selecting safety systems, structures, and components; (b) understanding the aging process and identifying aging mechanisms; and (c) preventing and delaying the aging process. Aging management for digital control systems of nuclear power plants ensures that the systems are operating in an adequate safety margin throughout their life cycles (Simola <xref ref-type="bibr" rid="CR7">1999</xref>). IAEA NS-G-2.12 (<xref ref-type="bibr" rid="CR6">2009</xref>) provides guidance for the aging management of nuclear power plants, as well as a reference for the aging management of critical systems, structures, and components. Researchers currently focus more on equipment aging management for nuclear power plants (John and Philippa <xref ref-type="bibr" rid="CR5">2006</xref>; Yang et&#x000a0;al. <xref ref-type="bibr" rid="CR9">2012</xref>; Zeng&#x000a0;et&#x000a0;al. <xref ref-type="bibr" rid="CR10">2013</xref>). Software aging management is crucial because software is the core difference between digital and analog systems. Consequently, a perfect aging management program should be constructed and aging management measures should be implemented as early as possible for nuclear power plants.</p><p>The concept of software aging is that software performance decreases and the rates of crashes or undesired hang-ups increase after a long period of continuous operation (Thein&#x000a0;et&#x000a0;al. <xref ref-type="bibr" rid="CR8">2008</xref>). The typical causes of software degradation include memory bloating and leaking, unreleased file-locks, data corruption, storage space fragmentation, and accumulated round-off errors (Garg and Van Moorsel <xref ref-type="bibr" rid="CR2">1998</xref>). The master-slave serve switch failure occurs because of unreleased file-locks. A recent study showed that software aging exists in long-running digital control systems, which degrades system performance and causes hang-up failures. Computer system failures occur because of software factors instead of hardware failure (Gray and Siewiorek <xref ref-type="bibr" rid="CR3">1991</xref>). The key steps in aging management are the evaluation and prediction of software aging. A paper discussing the synergy between nuclear security and safety has provided an evaluation methodology for nuclear system and a reference for software aging assessment (Cipollaro and Lomonaco <xref ref-type="bibr" rid="CR1">2016</xref>).</p><p>The aging management of digital control system software for nuclear power plants is analyzed on the basis of the characteristics of the safety digital control system. This paper is structured as follows: section one introduces the background. Section two analyzes the characteristics of software for the digital control systems of nuclear power plants. Section three provides information on software aging management, which should be collected during system lifetime to provide effective inputs for managing software aging. Section four proposes a schema for software aging management. Section five presents the conclusions.</p></sec><sec id="Sec2"><title>The characteristics of safety digital control system</title><p>In contrast with the analog system, the digital control system can overcome physical limitations in hardware by the introduction of a software system, as well as handle complex logic and calculation functions. This fail-safe and fault-tolerant technology can be conveniently and effectively executed. The safety digital control system of nuclear power plants possesses a considerable amount of digital information. It can effectively perform power station real-time state supervision, diagnostic, calibration and performance assessment.</p><p>The design principles of the digital control system include single failure criterion, independence, common cause failure criteria, and capability for testing and calibration. In-depth defensive features and defense should be designed for the safety software system. To prevent software instability, limit checks, logic check for error input date, and assigned default values should also be included. Therefore, the digital control system software is vast and complex. The source codes of the digital control system can reach hundreds of thousands lines. However, design flaws or insufficient requirements, which may result in software failures, are unavoidable during software development. Failures of the digital system software are difficult to intuitively check, classify, and correct, which may affect performance. In addition, influence (e.g. the compatibility) is difficult to evaluate during software revisions and updates.</p><p>The software aging failure mechanism is completely different from that of hardware. Hardware failures can be found or resolved by online software monitoring, diagnosis, correction, hardware redundancy, and other methods. Software failures do not occur at random, unlike hardware failures. Software errors and defects cannot be completely discovered through exhaustive testing. Software aging management for the digital control system is necessary to ensure the long-term, reliable, and safe operation of nuclear power plants. Based on IEEE standard 7-4.3.2 (<xref ref-type="bibr" rid="CR4">2010</xref>), a computer system consists of the following life phases: conceptual design, detailed design, implementation, testing, installment, site acceptance testing, operation, maintenance, and retirement. As shown in 
Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>, this paper divides the software life cycle into design, implementation, test, operation and maintenance. Different types of software failures may arise from any software life phase. Software aging management should be executed from the design phase to fully gather information on software aging.<fig id="Fig1"><label>Fig. 1</label><caption><p>Life cycle of software</p></caption><graphic xlink:href="40064_2016_3780_Fig1_HTML" id="MO1"/></fig>
</p></sec><sec id="Sec3"><title>Software aging management information</title><p>Hardware aging management for nuclear power plants has been verified for decades, and its relevant regulations and standards have also matured. Software aging management is a core, but difficult, point of the digital control system. Testing and review technology can reduce software defects, but cannot guarantee that the software system is faultless.</p><p>Hardware often requires repair or replacement when failure occurs; then, associated software should be redesigned or upgraded. Redesigning and upgrading may introduce new design defects, which may cause new failures. Information for software aging management should be collected throughout the phases of software design and maintenance. Both quantitative and qualitative data should be recorded and stored to ensure software lifetime, which will provide the input for predicting and evaluating software aging. A reliable software aging management strategy should be designed in combination with the recorded aging information. The relevant information for using in the software management process is listed on Table&#x000a0;<xref rid="Tab1" ref-type="table">1</xref>. Safety and security design are necessary for the digital control system and are the first safeguard against software aging management. In the implementation phase, the developmental methods and instruments are related to software fault style and aging mechanism (e.g., the different compile language corresponds to the different failure risk). Software weakness can be identified by verification and validation technology in the implementation phase. Subsequently, to evaluate the aging phenomenon, users can use information rooted in software verification and validation. Software aging information mainly comes from the system and human feedback in the operation and maintenance phase.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Software aging management information</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Phase</th><th align="left">Software aging management related information</th><th align="left">Collection method</th></tr></thead><tbody><tr><td align="left" rowspan="6"> Design</td><td align="left">Performance requirements (precision, response time, etc.)</td><td align="left" rowspan="6"> Review and analysis</td></tr><tr><td align="left">Fault-avoidance technology</td></tr><tr><td align="left">Self-diagnosis technology</td></tr><tr><td align="left">Self-supervision technology</td></tr><tr><td align="left">Safety and security technology</td></tr><tr><td align="left">System stability and reliability outside factors, e.g. environment</td></tr><tr><td align="left" rowspan="6"> Implementation</td><td align="left">Design deviation</td><td align="left">Traceability analysis</td></tr><tr><td align="left">Software configuration</td><td align="left">Feedback and evaluation</td></tr><tr><td align="left">Assumptions and boundary</td><td align="left"/></tr><tr><td align="left">Data and structure specification</td><td align="left"/></tr><tr><td align="left">Input and output specification</td><td align="left"/></tr><tr><td align="left">Weak spot of the software development</td><td align="left"/></tr><tr><td align="left" rowspan="7"> Test</td><td align="left">Large date volume test</td><td align="left">Software validation and verification</td></tr><tr><td align="left">Carrying capacity</td><td align="left">Testing</td></tr><tr><td align="left">Concurrency capacity</td><td align="left"/></tr><tr><td align="left">Fatigue strength</td><td align="left"/></tr><tr><td align="left">Fault-tolerant ability</td><td align="left"/></tr><tr><td align="left">Network quality (clock recovery, network timing and packet loss, etc.)</td><td align="left"/></tr><tr><td align="left">Abnormal problems</td><td align="left"/></tr><tr><td align="left" rowspan="4"> Operation</td><td align="left">Accumulation of round-off errors</td><td align="left">Feedback and statistics</td></tr><tr><td align="left">Aging-related bugs</td><td align="left">Evaluation</td></tr><tr><td align="left">Resource exhaustion, e.g. CPU, disk memory and network, etc</td><td align="left"/></tr><tr><td align="left">Unplanned failures</td><td align="left"/></tr><tr><td align="left" rowspan="2">Maintain</td><td align="left">Maintain records</td><td align="left">Power plant feedback</td></tr><tr><td align="left">Upgrade records</td><td align="left">Evaluation</td></tr></tbody></table></table-wrap>
</p></sec><sec id="Sec4"><title>Software aging management scheme</title><p>Figure&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref> shows the software aging management scheme combined with software aging information that is collected throughout the software design and maintenance phases. 
In Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref>, the solid lines represent the software aging analysis process and the dotted lines represent the outcomes and ease measures.<list list-type="order"><list-item><p>Aging process<list list-type="bullet"><list-item><label/><p>Information collection and classification</p><p>The information that includes failures and defects should be classified as time-based or requirement-based. Then, the qualitative and quantitative aging factors are obtained.</p></list-item><list-item><label/><p>Prediction and evaluation model for aging.</p><p>The method of aging prediction and evaluation can select statistical techniques, machine learning, and Markov decision.</p></list-item><list-item><label/><p>Aging risk.</p><p>Aging risks will be exposed through the above aging prediction and evaluation model. Then, aging management strategies will be designed.</p></list-item></list>
</p></list-item><list-item><p>The steps of software aging management<list list-type="bullet"><list-item><label/><p>Aging risks are derived to update aging management requirements.</p></list-item><list-item><label/><p>Aging risks will decrease when aging management requirements are satisfied by aging management strategies. However, aging risks will affect the stability and reliability of the software if these requirements are unsatisfied. Therefore, aging management strategies can defend against software failures or design defects.</p></list-item><list-item><label/><p>Software failures or design defects affect software stability and reliability, and may result in safety incidents. Therefore, failures and defects can be avoided by providing sufficient aging information.</p></list-item><list-item><label/><p>Residual aging risks are uncontrollable by aging management strategies and may lead to safety incidents. To improve the stability and reliability of the safety digital control system, software attributes become more complex. Although stability and reliability goals promote software development, these factors increase software aging factors.</p></list-item></list>
</p></list-item></list>
<fig id="Fig2"><label>Fig. 2</label><caption><p>Software aging management schema for nuclear power plant safety digital control system</p></caption><graphic xlink:href="40064_2016_3780_Fig2_HTML" id="MO2"/></fig>
</p><p>Aging management of digital control system software for nuclear power plants improves the software aging process by the following measures:<list list-type="order"><list-item><p>Design phase<list list-type="bullet"><list-item><label/><p>Fault-avoidance technology,</p></list-item><list-item><label/><p>Fault-tolerant technology,</p></list-item><list-item><label/><p>Self-detection and self-diagnosis,</p></list-item><list-item><label/><p>Safety and security design.</p></list-item></list>
</p></list-item><list-item><p>Implementation and test phase<list list-type="bullet"><list-item><label/><p>Reliability as the core quality objective,</p></list-item><list-item><label/><p>Determining a quality metric (requirements analysis, design, testing, and acceptance) of every phase,</p></list-item><list-item><label/><p>Analyzing the risks and consequences caused by common software failures,</p></list-item><list-item><label/><p>Software validation and verification.</p></list-item></list>
</p></list-item><list-item><p>Operation phase<list list-type="bullet"><list-item><label/><p>Executing online tests by combining reliability operations with maintenance,</p></list-item><list-item><label/><p>Relevant and documented operational feedback for support software,</p></list-item><list-item><label/><p>Monitoring and feedback of software system performance parameters.</p></list-item></list>
</p></list-item><list-item><p>Maintenance phase<list list-type="bullet"><list-item><label/><p>Periodic testing and maintenance for software,</p></list-item><list-item><label/><p>Running maintenance of hardware and software,</p></list-item><list-item><label/><p>Assessing software upgrades.</p></list-item></list>
</p></list-item></list>
</p></sec><sec id="Sec5"><title>Conclusions</title><p>Researchers should focus on the aging management of the structures, components, and systems of the nuclear power plant digital control system. Aging management of the digital control system software is a weakness. This paper analyzes the aging mechanism and process of the safety digital control system software. Then, software aging information is collected throughout the design to maintenance phases. This paper describes the key aging points in different life phases. Finally, to improve the reliability of digital control systems, the aging management schema is proposed, which includes the aging process and management measures. Future research should focus on rejuvenation strategies for aging safety digital control systems of nuclear power plants.</p></sec></body><back><ack><title>Authors' contributions</title><p>HH, PF, carried out software aging management method for safety digital control system and drafted and reviewed the manuscript. JZ, WH participated in the software aging management collection and reviewed the manuscript. FG analyzed the nuclear power plant safety digital control system aging management machine and reviewed the manuscript. All authors read and approved the final manuscript.</p><sec id="FPar1"><title>Acknowledgements</title><p>This project was financially supported by a reliability research of reactor protection system which is based on digital microprocessor and electrical equipment National Science and Technology major project. The Award No. is 2014ZX06004002-004. Also, we would like to thank Dr. Bai for her assistance in the English language revision of the manuscript.</p></sec><sec id="FPar2"><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></sec><sec id="FPar3"><title>Funding</title><p>Thanks for the National Science and Technology major project (Award No: 2014ZX06004002-004). The project researches on the reliability of digital reactor protection system and electrical equipment based on microprocessor.</p></sec></ack><ref-list id="Bib1"><title>References</title><ref id="CR1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cipollaro</surname><given-names>A</given-names></name><name><surname>Lomonaco</surname><given-names>G</given-names></name></person-group><article-title>Contributing to the nuclear 3S&#x02019;s via a methodology aiming at enhancing the synergies between nuclear security and safety</article-title><source>Prog Nucl Energy</source><year>2016</year><volume>86</volume><fpage>31</fpage><lpage>39</lpage><pub-id pub-id-type="doi">10.1016/j.pnucene.2015.09.013</pub-id></element-citation></ref><ref id="CR2"><mixed-citation publication-type="other">Garg S, Van Moorsel A (1998) A methodology for detection and estimation of software aging. In: The ninth international symposium on software reliability engineering. IEEE, pp 283&#x02013;292</mixed-citation></ref><ref id="CR3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gray</surname><given-names>J</given-names></name><name><surname>Siewiorek</surname><given-names>DP</given-names></name></person-group><article-title>High-availability computer systems</article-title><source>IEEE Comput Syst</source><year>1991</year><volume>24</volume><fpage>39</fpage><lpage>48</lpage><pub-id pub-id-type="doi">10.1109/2.84898</pub-id></element-citation></ref><ref id="CR4"><mixed-citation publication-type="other">IEEE Std 7 4.3.2 (2010) IEEE standard criteria for digital computers in safety systems of nuclear power generating station. IEEE Power and Energy Society. Institute of Electrical and Electronics Engineers, pp 22-25</mixed-citation></ref><ref id="CR5"><mixed-citation publication-type="other">John W, Philippa M (2006) Plant ageing management of equipment containing hazardous fluids or pressure. Health and Safety Executive Research Report 509:21&#x02013;40</mixed-citation></ref><ref id="CR6"><mixed-citation publication-type="other">IAEA Safety Guide No.NS-G-2.12 (2009) Aging management for nuclear power plants. International atomic energy agency safety standards for protecting people and the environment, pp 3-10</mixed-citation></ref><ref id="CR7"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Simola</surname><given-names>K</given-names></name></person-group><source>Reliability methods in nuclear power plant ageing management</source><year>1999</year><publisher-loc>Espoo</publisher-loc><publisher-name>Vtt Publications</publisher-name></element-citation></ref><ref id="CR8"><mixed-citation publication-type="other">Thein T, Chi SD, Park JS (2008) Proactive fault management with virtualization for software aging. Software engineering, artificial intelligence, networking and parallel/distributed computing. Springer, Berlin, pp 408&#x02013;413</mixed-citation></ref><ref id="CR9"><mixed-citation publication-type="other">Yang C, Shi H, Liu T (2012) Aging and life assessment of large and medium-sized power transformers in nuclear power plants. In: Second international conference on intelligent system design and engineering application, pp 768&#x02013;772</mixed-citation></ref><ref id="CR10"><mixed-citation publication-type="other">Zeng Y, Liu J, Huang W (2013) An accelerated aging analysis method based on local data for components and materials in nuclear power plants. In: International conference on mechanical and automation engineering, pp 219&#x02013;223</mixed-citation></ref></ref-list></back></article>
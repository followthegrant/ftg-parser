<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id><journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id><journal-id journal-id-type="publisher-id">bioinformatics</journal-id><journal-id journal-id-type="hwp">bioinfo</journal-id><journal-title-group><journal-title>Bioinformatics</journal-title></journal-title-group><issn pub-type="ppub">1367-4803</issn><issn pub-type="epub">1367-4811</issn><publisher><publisher-name>Oxford University Press</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">22689785</article-id><article-id pub-id-type="pmc">3371855</article-id><article-id pub-id-type="doi">10.1093/bioinformatics/bts223</article-id><article-id pub-id-type="publisher-id">bts223</article-id><article-categories><subj-group subj-group-type="heading"><subject>Ismb 2012 Proceedings Papers Committee July 15 to July 19, 2012, Long Beach, Ca, Usa</subject></subj-group><subj-group><subject>Original Papers</subject><subj-group><subject>Protein Structure and Function</subject></subj-group></subj-group></article-categories><title-group><article-title>Minimum message length inference of secondary structure from protein coordinate data</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Konagurthu</surname><given-names>Arun S.</given-names></name><xref ref-type="aff" rid="AFF1"><sup>1</sup></xref><xref ref-type="corresp" rid="COR1"><sup>*</sup></xref></contrib><contrib contrib-type="author"><name><surname>Lesk</surname><given-names>Arthur M.</given-names></name><xref ref-type="aff" rid="AFF1"><sup>2</sup></xref></contrib><contrib contrib-type="author"><name><surname>Allison</surname><given-names>Lloyd</given-names></name><xref ref-type="aff" rid="AFF1"><sup>1</sup></xref><xref ref-type="corresp" rid="COR1"><sup>*</sup></xref></contrib></contrib-group><aff id="AFF1"><sup>1</sup>Clayton School of Information Technology, Monash University, Clayton VIC 3800, Australia and <sup>2</sup>Department of Biochemistry and Molecular Biology and The Huck Institute for Genomics, Proteomics and Bioinformatics, The Pennsylvania State University, University Park, PA 16802, USA</aff><author-notes><corresp id="COR1">* To whom correspondence should be addressed.</corresp></author-notes><pub-date pub-type="ppub"><day>15</day><month>6</month><year>2012</year></pub-date><pub-date pub-type="epub"><day>9</day><month>6</month><year>2012</year></pub-date><pub-date pub-type="pmc-release"><day>9</day><month>6</month><year>2012</year></pub-date><!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. --><volume>28</volume><issue>12</issue><fpage>i97</fpage><lpage>i105</lpage><permissions><copyright-statement>&#x000a9; The Author(s) 2012. Published by Oxford University Press.</copyright-statement><copyright-year>2012</copyright-year><license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/3.0"><license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/3.0">http://creativecommons.org/licenses/by-nc/3.0</ext-link>), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract><p><bold>Motivation:</bold> Secondary structure underpins the folding pattern and architecture of most proteins. Accurate assignment of the secondary structure elements is therefore an important problem. Although many approximate solutions of the secondary structure assignment problem exist, the statement of the problem has resisted a consistent and mathematically rigorous definition. A variety of comparative studies have highlighted major disagreements in the way the available methods define and assign secondary structure to coordinate data.</p><p><bold>Results:</bold> We report a new method to infer secondary structure based on the Bayesian method of minimum message length inference. It treats assignments of secondary structure as hypotheses that explain the given coordinate data. The method seeks to maximize the joint probability of a hypothesis and the data. There is a natural null hypothesis and any assignment that cannot better it is unacceptable. We developed a program <monospace>SST</monospace> based on this approach and compared it with popular programs, such as <sc>DSSP</sc> and <monospace>STRIDE</monospace> among others. Our evaluation suggests that <monospace>SST</monospace> gives reliable assignments even on low-resolution structures.</p><p><bold>Availability:</bold>
<ext-link ext-link-type="uri" xlink:href="http://www.csse.monash.edu.au/~karun/sst">http://www.csse.monash.edu.au/~karun/sst</ext-link></p><p><bold>Contact:</bold>
<email>arun.konagurthu@monash.edu</email> (or <email>lloyd.allison@monash.edu</email>)</p></abstract><counts><page-count count="9"/></counts></article-meta></front><body><sec id="SEC1"><title>1 INTRODUCTION</title><p>Periodic hydrogen-bonding patterns in globular proteins give rise to elements of secondary structure&#x02014;helices and sheets. The &#x003b1;-helix and &#x003b2;-sheets were among the first structural motifs predicted from first principles of stereochemistry by <xref ref-type="bibr" rid="B21">Pauling and Corey (1951</xref>). We now know these specific motifs are almost ubiquitous across the corpus of known structures. Eventually, other repetitive motifs were also identified, and the alphabet of secondary structures was expanded to include 3<sub>10</sub>-helix, &#x003c0;-helix, &#x003b2;-turn, &#x003b3;-turn, &#x003a9;-turn and &#x003b2;-bulges, among other minor elements. In what follows, we use the term secondary structure to include both the classical helices and sheets, and other common substructural elements.</p><p>Accurate assignment of secondary structure of proteins from coordinate data is an important and a challenging problem (<xref ref-type="bibr" rid="B1">Andersen and Rost, 2009</xref>). Secondary structure underpins the architectural organization in proteins. It simplifies the complex atom-level description of proteins and is therefore the key to generation of schematic diagrams of their three dimensional (3D) folding patterns (<xref ref-type="bibr" rid="B17">Lesk and Hardman, 1982</xref>; <xref ref-type="bibr" rid="B22">Richardson, 1981</xref>). They are central in training methods geared for predicting secondary structure from amino acid sequence (<xref ref-type="bibr" rid="B1">Andersen and Rost, 2009</xref>). They form a linchpin to efficient methods for structural comparison and analysis (<xref ref-type="bibr" rid="B10">Kamat and Lesk, 2007</xref>; <xref ref-type="bibr" rid="B14">Konagurthu <italic>et al</italic>., 2008</xref>).</p><p>Over the last 30 years, many programs were developed to address the problem of assigning secondary structure to protein coordinate data. A broad classification can be made of the assignment strategies: (i) methods that use distance and angle profiles of local fragments; (ii) methods that detect hydrogen bonds between backbone atoms; (iii) methods that use 3D geometry of local fragments; and (iv) methods that approximate the backbone trace with a set of straight lines.</p><p>The following reviews some of the major earlier contributions to the literature of this problem. <xref ref-type="bibr" rid="B18">Levitt and Greer (1977</xref>) were the first to generate an automatic method for secondary structure assignment, based on distance and dihedral angle profiles of C<sub>&#x003b1;</sub> atoms over a sliding window of four residues. P-SEA (<xref ref-type="bibr" rid="B16">Labesse <italic>et al</italic>., 1997</xref>) is another method in this category which assigns secondary structural states using a short C<sub>&#x003b1;</sub> distance mask and two C<sub>&#x003b1;</sub> dihedral angle criteria. PROSS (<xref ref-type="bibr" rid="B28">Srinivasan and Rose, 1999</xref>) proposes an assignment based solely on backbone dihedral angles. Xtlsstr (<xref ref-type="bibr" rid="B12">King and Johnson, 1999</xref>) calculates backbone dihedral angles and distances and assigns secondary structural types that would be consistent with interactions of amide-amide groups observed from circular dichroism of a protein in ultraviolet range (<xref ref-type="bibr" rid="B1">Andersen and Rost, 2009</xref>). More recently, PALSSE (<xref ref-type="bibr" rid="B19">Majumdar <italic>et al</italic>., 2005</xref>) was designed to delineate protein structure into helices and strands, mainly using distance and torsion angle constraints to identify core elements which are later extended to longer segments. KAKSI (<xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>., 2005</xref>) is based on C<sub>&#x003b1;</sub> distances and backbone dihedral angles and designed primarily to show concordance with the manual assignments found in the protein data bank (PDB).</p><p>The most popular method in this space is &#x02018;Dictionary of Secondary Structure of Proteins&#x02019; (DSSP) developed by <xref ref-type="bibr" rid="B9">Kabsch and Sander (1983</xref>). DSSP is based on detecting hydrogen bonds between nitrogen and carbonyl groups along the protein polypeptide chain using a Coulomb approximation of the hydrogen-bond energy function (<xref ref-type="bibr" rid="B1">Andersen and Rost, 2009</xref>). Many now consider this method a standard for secondary structural assignment (<xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>., 2005</xref>). Since DSSP was published, several methods have been designed that rely on computing the hydrogen-bond energy between backbone atoms. STRIDE (<xref ref-type="bibr" rid="B8">Frishman and Argos, 1995</xref>) is among the successful variants of DSSP which uses a modified hydrogen-bond energy function as well as backbone dihedral angles to compute its assignment. SECSTR (<xref ref-type="bibr" rid="B7">Fodje and Al-Karadaghi, 2002</xref>) is another variant which improves the detection and assignment of &#x003c0;-helices which both DSSP and STRIDE have difficulty characterizing (<xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>., 2005</xref>).</p><p>There are other methods which assign secondary structure using 3D features in a protein structure. <xref ref-type="bibr" rid="B23">Richards and Kundrot (1988</xref>) describe a method, DEFINE-S, to assign secondary structure using local geometry of ideal secondary structures. The P-CURVE (<xref ref-type="bibr" rid="B27">Sklenar <italic>et al</italic>., 1989</xref>) algorithm uses an helicoidal axis approach derived from a series of peptide planes to assign secondary structure. The VoTAP (<xref ref-type="bibr" rid="B6">Dupuis <italic>et al</italic>., 2004</xref>) algorithm relies on Voronoi tessellation of a residue contact map and then matching the contact map profiles to a consensus assignment of secondary structures by methods like DSSP and STRIDE.</p><p>In the last category are indirect methods, such as STICK (<xref ref-type="bibr" rid="B29">Taylor, 2001</xref>) and PMML (<xref ref-type="bibr" rid="B15">Konagurthu <italic>et al</italic>., 2011</xref>) which work by approximating the C<sub>&#x003b1;</sub> spatial trace using a set of lines. These methods seek the best approximation of the protein backbone using piecewise lines. Only as a post-process to this approximation, each line segment is indirectly attributed a secondary structural type based on criteria such as the average rise and pitch of the C<sub>&#x003b1;</sub> atoms within the segment. These approaches solve a related yet different problem, namely &#x02018;the best line approximation of the protein chain&#x02019;.</p><p>Consistent with this large number of proposed methods, assignment of secondary structure has been recognized to be an &#x02018;inexact process&#x02019; (<xref ref-type="bibr" rid="B5">Cuff and Barton, 1999</xref>). Previous comparative studies have highlighted the difficulties of existing programs to assign secondary structure consistently (<xref ref-type="bibr" rid="B1">Andersen and Rost, 2009</xref>; <xref ref-type="bibr" rid="B3">Colloc'h <italic>et al</italic>., 1993</xref>; <xref ref-type="bibr" rid="B5">Cuff and Barton, 1999</xref>; <xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>., 2005</xref>; <xref ref-type="bibr" rid="B32">Zhang <italic>et al</italic>., 2008</xref>). These disagreements can be major as shown by <xref ref-type="bibr" rid="B3">Colloc'h <italic>et al</italic>. (1993</xref>) where the percentage of agreement between DSSP, DEFINE-S and P-CURVE was only 63% on a residue basis. It has been observed that most disagreements arise in the terminal regions of the assigned secondary structural elements. Reflecting on this problem <xref ref-type="bibr" rid="B25">Robson and Garnier (1986</xref>) comment [as quoted by <xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>. (2005</xref>)]: &#x02018;In looking at a model of a protein, it is often easy to recognize helix and to a lesser extent sheet strands, but it is not easy to say whether the residues at the ends of these features be included in them or not. In addition, there are many distortions within such structures so that it is difficult to assess whether this represents merely a distortion, or a break in the structure. In fact, the problem is essentially that helices and sheets in globular proteins lack the regularity and clear definition found in the Pauling and Corey models.&#x02019;</p><p>Given the complexity of the details of individual protein structures, it is not surprising that the secondary structure assignment problem has resisted a mathematically rigorous definition. The effect can be seen in the use of a variety of definitions by the existing tools, although all of them are reasonable. In this study, we describe an approach, <monospace>SST</monospace>, to the secondary structure assignment problem using minimum message length (MML) inference (<xref ref-type="bibr" rid="B30">Wallace and Boulton, 1968</xref>). Linking statistical inference with data compression, the goal is to communicate losslessly the coordinates of a protein using a two-part message. The first part transmits the secondary structure assignment as a <italic>hypothesis</italic> about the coordinates. The second-part transmits the details of coordinates not explained by the hypothesis. This gives rise to statistically robust objective function to optimize: find the best hypothesis on the coordinate data that minimizes the total two-part message length.</p><p><monospace>SST</monospace> assigns secondary structure segments of the following types: &#x003b1;, 3<sub>10</sub> and &#x003c0;-helix (including left-handed versions of all these helices when they occur), sharp turns, &#x003b2;-strands and others (coil). <monospace>SST</monospace> in a post-processing step merges consecutive structures where appropriate, and groups all strands of a sheet, identifies &#x003b2;-bulges, to convert the results to a molecular biologist's conventional secondary structure description, and produces a PyMol script to visualize the secondary structural assignments. (<xref ref-type="fig" rid="F1">Fig. 1</xref>.)
<fig id="F1" position="float"><label>Fig. 1.</label><caption><p>SST assigned secondary structure to coordinates of a 1.6&#x000c5; crystal structure, Ornithine decarboxylase from mouse.</p></caption><graphic xlink:href="bts223f1"/></fig></p></sec><sec id="SEC2"><title>2 OVERVIEW OF MML CRITERION</title><p>The MML criterion provides an information&#x02013;theoretic objective for problems of inference where the goal is to find the best <italic>explanation</italic> (or <italic>theory</italic>, <italic>hypothesis</italic>, <italic>model</italic>) for a set of observed data (<xref ref-type="bibr" rid="B30">Wallace and Boulton, 1968</xref>). MML relies on quantifying the amount of information <italic>required</italic> to convey losslessly the observed data in an <italic>explanation message</italic>. The best hypothesis is the one which can convey the entire data set in the shortest possible explanation message.</p><p>More formally, for some observed data <italic>D</italic> and a hypothesis <italic>H</italic> that offers an explanation of the data <italic>D</italic>, Bayes's theorem (<xref ref-type="bibr" rid="B2">Bayes and Price, 1763</xref>) gives
<disp-formula><graphic xlink:href="bts223um1"/></disp-formula>
where <italic>P</italic>(<italic>H</italic>) is the prior probability of hypothesis <italic>H</italic>, <italic>P</italic>(<italic>D</italic>) is the <italic>prior</italic> probability of data <italic>D</italic>, <italic>P</italic>(<italic>H</italic>|<italic>D</italic>) is the <italic>posterior</italic> probability of <italic>H</italic> given <italic>D</italic>, and <italic>P</italic>(<italic>D</italic>|<italic>H</italic>) is the <italic>likelihood</italic>.</p><p>Using Shannon's mathematical theory of communication (<xref ref-type="bibr" rid="B26">Shannon, 1948</xref>), the amount of information for an explanation of the data <italic>D</italic> with the hypothesis <italic>H</italic> is given by
<disp-formula><graphic xlink:href="bts223um2"/></disp-formula>
where <italic>I</italic>(<italic>x</italic>)=&#x02212;log<sub>2</sub>(<italic>P</italic>(<italic>x</italic>)) gives the optimal code length to convey some event <italic>x</italic> whose probability is <italic>P</italic>(<italic>x</italic>).</p><p>This immediately gives an objective means to compare competing hypotheses. For hypotheses <italic>H</italic><sub>1</sub> and <italic>H</italic><sub>2</sub> on the same data <italic>D</italic>, we have
<disp-formula><graphic xlink:href="bts223um3"/></disp-formula>
It follows that the best hypothesis <italic>H</italic><sup>*</sup> over all competing hypotheses is the one where the expression <italic>I</italic>(<italic>H</italic><sup>*</sup>)+<italic>I</italic>(<italic>D</italic>|<italic>H</italic><sup>*</sup>) is minimized.</p><p>A concrete realization of the MML framework comes from describing it as a communication process between an imaginary transmitter (Alice) and receiver (Bob) connected over a Shannon channel. Alice's objective is to send the observed data <italic>D</italic> using an explanation message in a form such that Bob can receive and decode the data <italic>D</italic> precisely as Alice sees it. Alice and Bob agree on a <italic>codebook</italic> containing the general rules of communication composed solely of common knowledge about typical, hypothetical data. Anything that is not a part of the codebook must be strictly transmitted as a part of the message. If Alice can find the best hypothesis <italic>H</italic><sup>*</sup> on the data, Bob will receive a decodable explanation message most economically: The best inference about the data is the hypothesis that minimizes the total message length.</p><p>Alice sends the explanation message of <italic>D</italic> in two parts. In the first part, she transmits the best hypothesis, <italic>H</italic><sup>*</sup>, she could find on the data <italic>D</italic> taking <italic>I</italic>(<italic>H</italic><sup>*</sup>) bits. In the second, she transmits the details of the observed data <italic>D</italic> not explained by <italic>H</italic><sup>*</sup>, taking <italic>I</italic>(<italic>D</italic>|<italic>H</italic><sup>*</sup>) bits (i.e. the deviations from <italic>H</italic><sup>*</sup>). Notice that MML inference gives a natural trade-off between hypothesis complexity (<italic>I</italic>(<italic>H</italic><sup>*</sup>)), and its goodness of fit to the data (<italic>I</italic>(<italic>D</italic>|<italic>H</italic><sup>*</sup>)).</p><p>For a comprehensive resource on MML see <xref ref-type="bibr" rid="B31">Wallace (2005</xref>).</p></sec><sec id="SEC3"><title>3 THE DESIGN OF THE COMMUNICATION FRAMEWORK</title><p>Protein coordinates for a single-polypeptide chain are represented as an ordered set of 3D points of the form <inline-graphic xlink:href="bts223i1p.jpg"/>={<italic>p</italic><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>n</italic></sub>}, where any <italic>p</italic><sub><italic>i</italic></sub> corresponds to the <italic>i</italic>th C<sub>&#x003b1;</sub> coordinate along N- to C-terminus of the protein chain. Each <italic>p</italic><sub><italic>i</italic></sub> defines a 3D real-valued vector (<italic>p</italic><sub><italic>i</italic></sub><sup><italic>x</italic></sup>, <italic>p</italic><sub><italic>i</italic></sub><sup><italic>y</italic></sup>, <italic>p</italic><sub><italic>i</italic></sub><sup><italic>z</italic></sup>) in Angstrom (&#x000c5;) units, where each component of the vector comes specified (in the PDB) to three positions after the decimal place. Therefore, in this work, we treat the accuracy of measurement of the data as &#x003f5;=0.001 &#x000c5; (independent of the actual accuracy of the experimental structure determination). The transmitter (Alice) has to send a message to the receiver (Bob) who will then be able to reconstruct the original data from the encoded explanation message <italic>exactly</italic>. For coordinate data from the PDB, Bob will reconstruct each coordinate of each atom to the original precision of three digits after the decimal point.</p><sec id="SEC3.1"><title>3.1 Null model description of a protein coordinate data</title><p>MML gives a natural hypothesis test: The null-model corresponds to transmitting the data raw. If any hypothesis <italic>H</italic> on the data takes longer than the null model, then clearly <italic>H</italic> is unacceptable. However, the statement of the raw null model message (without any hypothesis) has to be economical; it must not be willfully inefficient.</p><p>The construction of an efficient null model for protein coordinates relies on the observation that the distance between successive C<sub>&#x003b1;</sub> atoms in a protein chain is highly constrained at about 3.8&#x000c5; with only small deviations from this value. The method starts with the transmission of the first C<sub>&#x003b1;</sub> coordinate <italic>p</italic><sub>1</sub> in any choice of encoding that both transmitter and receiver agree on. (Stating <italic>p</italic><sub>1</sub> simply adds a constant overhead to the message length, whether transmitted via a null model message or an explanation using a hypothesis. A simple way to do away with this overhead is for Alice to translate <inline-graphic xlink:href="bts223i1p.jpg"/> such that <italic>p</italic><sub>1</sub> becomes the origin. <italic>p</italic><sub>1</sub> then need not be transmitted explicitly in the message and can be treated implicitly a part of the codebook.) Alice then computes the observed distance <italic>r</italic> between the successive C<sub>&#x003b1;</sub> coordinates <italic>p</italic><sub>1</sub> and <italic>p</italic><sub>2</sub>. This distance <italic>r</italic> can be communicated efficiently using an encoding over a normal distribution <inline-graphic xlink:href="bts223i1n.jpg"/>(&#x003bc;, &#x003c3;) with a certain fixed mean (&#x003bc;) and a small standard deviation (&#x003c3;) around it. Based on the prior knowledge of C<sub>&#x003b1;</sub>&#x02013;C<sub>&#x003b1;</sub> distances between successive atoms, these values are set to &#x003bc;=3.8&#x000c5; and &#x003c3;=0.4&#x000c5; and are considered to be part of the codebook.</p><p>The probability density of a random variable <italic>x</italic> over a normal distribution with mean &#x003bc; and a standard deviation &#x003c3; is given by:
<disp-formula><graphic xlink:href="bts223um4"/></disp-formula>
Therefore, the probability of stating any distance <italic>r</italic> to an accuracy of &#x003f5; (given &#x003f5;&#x0226a;&#x003c3;) using the above normal distribution is <italic>P</italic>(<italic>r</italic>)=&#x003f5;&#x000d7;<inline-graphic xlink:href="bts223i1n.jpg"/>(<italic>x</italic>=<italic>r</italic>; &#x003bc;, &#x003c3;). This implies
<disp-formula><graphic xlink:href="bts223um5"/></disp-formula>
The optimal code length to transmit <italic>r</italic> is given by &#x02212;log<sub>2</sub>(<italic>P</italic>(<italic>r</italic>)) bits:
<disp-formula id="M1"><label>(1)</label><graphic xlink:href="bts223m1"/></disp-formula></p><p>Note that Bob will not be able to recover <italic>p</italic><sub>2</sub> simply from the transmitted information of <italic>p</italic><sub>1</sub> and the distance <italic>r</italic> between <italic>p</italic><sub>1</sub> to <italic>p</italic><sub>2</sub>. <italic>p</italic><sub>2</sub> can lie anywhere on the surface of a sphere of radius <italic>r</italic> centered on <italic>p</italic><sub>1</sub>. The precise location of <italic>p</italic><sub>2</sub> stated to &#x003f5; can be transmitted by first dividing the surface area of this sphere into cells each of area &#x003f5;<sup>2</sup>. This results in 4&#x003c0;<italic>r</italic><sup>2</sup>/&#x003f5;<sup>2</sup> such cells distributed uniformly on the surface. These cells can be numbered using a convention that Alice and Bob both agree upon (as a part of the codebook). On the basis of this discretization of the sphere's surface area, Alice transmits the cell number <italic>c</italic> in which the observed <italic>p</italic><sub>2</sub> falls within. Assuming uniform probabilities, the probability that the point <italic>p</italic><sub>2</sub> falls in a cell number <italic>c</italic> is given by <italic>P</italic>(<italic>c</italic>)=&#x003f5;<sup>2</sup>/4&#x003c0;<italic>r</italic><sup>2</sup>. Following from this, the code length to state the cell number is:
<disp-formula id="M2"><label>(2)</label><graphic xlink:href="bts223m2"/></disp-formula>
Bob now has all the information to reconstruct <italic>p</italic><sub>2</sub> to the precision of &#x003f5; using the information he has received.</p><p>With <italic>p</italic><sub>2</sub> known at Bob's end, Alice can proceed to encode in the same fashion <italic>p</italic><sub>3</sub> with respect to <italic>p</italic><sub>2</sub>, then <italic>p</italic><sub>4</sub> with respect to <italic>p</italic><sub>3</sub> and so on until all the points in <inline-graphic xlink:href="bts223i1p.jpg"/> are transmitted.</p><p>Let <italic>r</italic><sub><italic>i</italic></sub> (&#x02200;1&#x02264;<italic>i</italic>&#x0003c;<italic>n</italic>) denote the observed distance between any two successive C<sub>&#x003b1;</sub> coordinates <italic>p</italic><sub><italic>i</italic></sub> and <italic>p</italic><sub><italic>i</italic>+1</sub>. Let <italic>c</italic><sub><italic>i</italic></sub> (&#x02200;1&#x02264;<italic>i</italic>&#x0003c;<italic>n</italic>) denote the cell number on the surface of the sphere of radius <italic>r</italic><sub><italic>i</italic></sub> centered on the point <italic>p</italic><sub><italic>i</italic></sub> in which the point <italic>p</italic><sub><italic>i</italic>+1</sub> falls. The message length to transmit the entire C<sub>&#x003b1;</sub> coordinate data in <inline-graphic xlink:href="bts223i1p.jpg"/> is therefore
<disp-formula id="M3"><label>(3)</label><graphic xlink:href="bts223m3"/></disp-formula>
where <italic>O</italic>(1) denotes the constant number of bits to state <italic>p</italic><sub>1</sub> (0 bits if Alice translates the coordinates such that <italic>p</italic><sub>1</sub> lies on the origin).</p></sec><sec id="SEC3.2"><title>3.2 Models to describe segments of proteins</title><p>The secondary structure elements are used as a hypothesis to explain the coordinates. Here, we consider eight models to describe any contiguous stretch of C<sub>&#x003b1;</sub> atoms (of arbitrary length) along the protein chain: (i) a right-handed &#x003b1;-helix; (ii) a left-handed &#x003b1;-helix; (iii) a right-handed 3<sub>10</sub>-helix; (iv) a left-handed 3<sub>10</sub>-helix; (v) a righ-handed &#x003c0;-helix; (vi) a left-handed &#x003c0;-helix; (vii) an extended &#x003b2;-strand; and (8) coil.</p><p>The Helical (1&#x02013;6) and strand (7) models follow ideal Pauling&#x02013;Corey geometry (<xref ref-type="bibr" rid="B21">Pauling and Corey, 1951</xref>) and are of arbitrary length. We term these seven collectively <italic>ideal models</italic>. (Pauling&#x02013;Corey models are common knowledge and taken to be in the codebook.)</p><p>The coil model (8) is treated simply as a model that describes a segment of a protein raw, using the null model approach described above in <xref ref-type="sec" rid="SEC3.1">Section 3.1</xref>.</p></sec><sec id="SEC3.3"><title>3.3 Describing a protein segment using an Ideal model</title><p>Assume that at some stage of the transmission Bob has received C<sub>&#x003b1;</sub> coordinates up to an intermediate point <italic>p</italic><sub><italic>i</italic></sub>, that is he has received coordinates (<italic>p</italic><sub>1</sub>, <italic>p</italic><sub>2</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>i</italic></sub>) (<italic>i</italic>&#x0003c;<italic>n</italic>). Alice now will transmit a contiguous segment of coordinates <italic>p</italic><sub><italic>i</italic></sub> to <italic>p</italic><sub><italic>j</italic></sub> (1&#x02264;<italic>i</italic>&#x0003c;<italic>j</italic>&#x02264;<italic>n</italic>) using one of the ideal (helical or strand) models. If it is a good model, then the coordinates can be transmitted cheaply. (The discussion of the optimal choice is given in <xref ref-type="sec" rid="SEC4">Section 4</xref>.)</p><p>The number of points to be transmitted in this segment is <italic>j</italic>&#x02212;<italic>i</italic> since the start point of the segment <italic>p</italic><sub><italic>i</italic></sub> is already known at the receiver's end. The remaining points <italic>p</italic><sub><italic>i</italic>+1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>j</italic></sub> are transmitted as follows:</p><sec id="SEC3.3.1"><title>3.3.1 Transmitting the end point of the segment</title><p>The end point of the segment (<italic>p</italic><sub><italic>j</italic></sub>) is transmitted using the sphere approach similar to the one described in <xref ref-type="sec" rid="SEC3.1">Section 3.1</xref>. Instead of the distance between successive C<sub>&#x003b1;</sub> coordinates, Alice transmits the distance <italic>d</italic><sub>ij</sub> between the start (<italic>p</italic><sub>i</sub>) and end (<italic>p</italic><sub>j</sub>) points. This is encoded using a normal distribution where the mean (&#x003bc;) is taken as the distance (<italic>d</italic><sup>*</sup>) between the start and end points from the ideal model containing <italic>j</italic>&#x02212;<italic>i</italic>+1 points. The standard deviation &#x003c3; of the end point is set to min((<italic>j</italic>&#x02212;<italic>i</italic>)&#x000d7;0.2&#x000c5;, 3&#x000c5;) based on the length of the segment being transmitted and this rule is taken to be a part of the codebook.</p><p>On the basis of Equation <xref ref-type="disp-formula" rid="M1">1</xref>, the code length to state <italic>d</italic><sub>ij</sub> to the accuracy of &#x003f5; is given by
<disp-formula id="M4"><label>(4)</label><graphic xlink:href="bts223m4"/></disp-formula></p><p>On the basis of equation <xref ref-type="disp-formula" rid="M2">2</xref>, given the start point of the segment <italic>p</italic><sub><italic>i</italic></sub> and distance <italic>d</italic><sub><italic>ij</italic></sub> of the end point <italic>p</italic><sub><italic>j</italic></sub>, the end point can lie anywhere on a sphere with radius <italic>d</italic><sub><italic>ij</italic></sub>. <italic>p</italic><sub><italic>j</italic></sub> can therefore be stated by specifying the cell number <italic>c</italic><sub><italic>ij</italic></sub> on the surface of this sphere in
<disp-formula id="M5"><label>(5)</label><graphic xlink:href="bts223m5"/></disp-formula></p></sec><sec id="SEC3.3.2"><title>3.3.2 Encoding the interior points</title><p>With the start and end points already known, there are <italic>j</italic>&#x02212;<italic>i</italic>&#x02212;1 interior points of the segment, <italic>p</italic><sub><italic>i</italic>+1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>j</italic>&#x02212;1</sub>, yet to be transmitted. These points can be transmitted cheaply if the chosen ideal model agrees with the observed points in the segment. Alice uses the following procedure to transmit the interior points given a chosen ideal model. (Details of how the optimal choice is made appear in <xref ref-type="sec" rid="SEC4">Section 4</xref>.)</p><p>Consider an ideal model containing <italic>l</italic>=<italic>j</italic>&#x02212;<italic>i</italic>+1 points, denoted formally as <inline-graphic xlink:href="bts223i1q.jpg"/>={<italic>q</italic><sub>1</sub>, <italic>q</italic><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>q</italic><sub><italic>l</italic></sub>}. The coordinates in <inline-graphic xlink:href="bts223i1q.jpg"/> are orthogonally transformed to <inline-graphic xlink:href="bts223i1q.jpg"/><sup>&#x02032;</sup>={<italic>q</italic><sup>&#x02032;</sup><sub>1</sub>, <italic>q</italic><sup>&#x02032;</sup><sub>2</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>q</italic><sup>&#x02032;</sup><sub><italic>l</italic></sub>} such that:
<list list-type="order"><list-item><p><italic>q</italic><sup>&#x02032;</sup><sub>1</sub> is same as the start point <italic>p</italic><sub><italic>i</italic></sub> of the segment;</p></list-item><list-item><p>the direction cosines of the vector connecting the start and end points of the ideal model <italic>q</italic><sup>&#x02032;</sup><sub><italic>l</italic></sub>&#x02212;<italic>q</italic><sup>&#x02032;</sup><sub>1</sub> and the direction cosines of the vector connecting the start and end points of the observed segment <italic>p</italic><sub><italic>j</italic></sub>&#x02212;<italic>p</italic><sub><italic>i</italic></sub> are the same; and</p></list-item><list-item><p>the sum of the squared error of the (<italic>l</italic>&#x02212;2) interior points of the segment with the corresponding interior points of the ideal model is minimized. That is, &#x02211;<sub>1&#x02264;<italic>k</italic>&#x02264;<italic>l</italic>&#x02212;2</sub> |<italic>p</italic><sub><italic>i</italic>+<italic>k</italic></sub>&#x02212;<italic>q</italic><sup>&#x02032;</sup><sub>1+<italic>k</italic></sub>|<sup>2</sup> is minimized, where |.| denotes the Euclidean vector norm.</p></list-item></list>
Such a spatial transformation is related to the more general superposition problem that minimizes the sum of the squared distance between two corresponding vector sets (<xref ref-type="bibr" rid="B11">Kearsley, 1989</xref>). However, the transformation is further constrained such that the first points of the two sets are the same (Constraint 1) and the rotational axis for the ideal model is the vector between the start (<italic>p</italic><sub><italic>i</italic></sub>) and end (<italic>p</italic><sub><italic>j</italic></sub>) points of the segment (Constraint 2). The first two constraints can be achieved using elementary translation and rotation of the ideal coordinates.</p><p>Once <inline-graphic xlink:href="bts223i1q.jpg"/> is transformed such that the first two constraints are realized, the best rotation &#x003b8;<sup>*</sup> of <inline-graphic xlink:href="bts223i1q.jpg"/> about the <italic>p</italic><sub><italic>j</italic></sub>&#x02212;<italic>p</italic><sub><italic>i</italic></sub> axis has to be found so that Constraint 3 is realized. With an approach similar to the generalized superposition problem between two vector sets (<xref ref-type="bibr" rid="B11">Kearsley, 1989</xref>), this minimization problem can be solved analytically as an eigenvalue decomposition of a 2&#x000d7;2 square symmetric matrix in quaternion parameters of the corresponding points. (The detailed proof of the analytical method is too long for the main text and hence is provided as <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/cgi/content/full/bts223/DC1">Supplementary Material</ext-link>.)</p><p>Once the transformation of <inline-graphic xlink:href="bts223i1q.jpg"/> to <inline-graphic xlink:href="bts223i1q.jpg"/><sup>&#x02032;</sup> is achieved as described above, Alice can transmit the interior points of the segment, <italic>p</italic><sub><italic>i</italic>+1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>j</italic>&#x02212;1</sub> by:
<list list-type="order"><list-item><p>transmitting the best rotation about the <italic>p</italic><sub><italic>j</italic></sub>&#x02212;<italic>p</italic><sub><italic>i</italic></sub> axis of the ideal model. (Note, Bob has already received the start and end points, <italic>p</italic><sub><italic>i</italic></sub> and <italic>p</italic><sub><italic>j</italic></sub>.);</p></list-item><list-item><p>transmitting the interior points <italic>p</italic><sub><italic>i</italic>+1</sub>&#x000b7;&#x000b7;&#x000b7; <italic>p</italic><sub><italic>j</italic>&#x02212;1</sub> as spatial deviations from their corresponding transformed interior points of the ideal model. (Bob already knows <italic>p</italic><sub><italic>i</italic></sub> and the coordinates of <inline-graphic xlink:href="bts223i1q.jpg"/> of the ideal model from the codebook. After he receives the end point of the segment <italic>p</italic><sub><italic>j</italic></sub> (using the sphere approach described above), the ideal coordinates can be transformed such that Constraints 1 and 2 of the transformation discussed above are realized. After Bob receives the rotation &#x003b8;<sup>*</sup>, the ideal coordinates are rotated by that angle around the axis <italic>p</italic><sub><italic>j</italic></sub>&#x02212;<italic>p</italic><sub><italic>i</italic></sub> whose information he already has. Once Alice sends the spatial deviations of interior points <italic>p</italic><sub><italic>i</italic>+1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>j</italic>&#x02212;1</sub> with respect to the transformed ideal coordinates, Bob can reconstruct the observed interior points of the segment.)</p></list-item></list>
</p></sec><sec id="SEC3.3.3"><title>3.3.3 Transmitting the rotation</title><p>Rotation &#x003b8;<sup>*</sup> is transmitted using a uniform distribution over a circle whose radius <italic>r</italic><sub>&#x003b8;<sup>*</sup></sub> is the farthest distance of an interior point of the ideal model from the axis of rotation. Note that <italic>r</italic><sub>&#x003b8;<sup>*</sup></sub> need not be transmitted because it is a property of the coordinates of the ideal model which the receiver already knows as a part of the codebook.</p><p>The rotation is transmitted by dividing the circumference of a circle of radius <italic>r</italic><sub>&#x003b8;<sup>*</sup></sub> into arc segments of length &#x003f5; and stating the segment number in which the rotated coordinate with the farthest radius to the axis falls. Thus, the code length of stating &#x003b8;<sup>*</sup> is
<disp-formula id="M6"><label>(6)</label><graphic xlink:href="bts223m6"/></disp-formula></p></sec><sec id="SEC3.3.4"><title>3.3.4 Transmitting the interior points as spatial deviations</title><p>Let any error vector of an interior point of the segment with respect to the corresponding transformed interior point of the ideal model, <italic>e</italic><sub><italic>k</italic></sub>&#x02261;(<italic>p</italic><sub><italic>i</italic>+<italic>k</italic></sub>&#x02212;<italic>q</italic><sup>&#x02032;</sup><sub>1+<italic>k</italic></sub>), 1&#x02264;<italic>k</italic>&#x02264;<italic>l</italic>&#x02212;2 have the vector components (&#x00394;<italic>x</italic><sub><italic>k</italic></sub>, &#x00394;<italic>y</italic><sub><italic>k</italic></sub>, &#x00394;<italic>z</italic><sub><italic>k</italic></sub>).</p><p>Each &#x00394;<italic>x</italic>, &#x00394;<italic>y</italic> and &#x00394;<italic>z</italic> of an interior point is transmitted using a normal distribution with a &#x003bc; of 0 and a standard deviation &#x003c3; set to the sample standard deviation computed from these error components.</p><p><xref ref-type="bibr" rid="B31">Wallace (2005</xref>) gives the MML estimate of code length to transmit a set of independent data (&#x00394;<italic>x</italic><sub>1</sub>, &#x00394;<italic>y</italic><sub>1</sub>, &#x00394;<italic>z</italic><sub>1</sub>), (&#x00394;<italic>x</italic><sub>2</sub>, &#x00394;<italic>y</italic><sub>2</sub>, &#x00394;<italic>z</italic><sub>2</sub>), &#x000b7;&#x000b7;&#x000b7; (&#x00394;<italic>x</italic><sub><italic>l</italic>&#x02212;2</sub>, &#x00394;<italic>y</italic><sub><italic>l</italic>&#x02212;2</sub>, &#x00394;<italic>z</italic><sub><italic>l</italic>&#x02212;1</sub>) using a normal distribution as:
<disp-formula id="M7"><label>(7)</label><graphic xlink:href="bts223m7"/></disp-formula>
where <italic>M</italic>=3&#x000d7;(<italic>l</italic>&#x02212;2) is the total number of components of the error vectors <italic>e</italic><sub><italic>k</italic></sub> being transmitted, <italic>R</italic><sub>&#x003c3;</sub> gives the prior knowledge of the limits to log<sub>2</sub> &#x003c3; and &#x003ba;<sub>1</sub>&#x02248;1/12 denotes the constant corresponding to quantizing lattices proposed by <xref ref-type="bibr" rid="B4">Conway and Sloane (1984</xref>). In this study, we assume that &#x003c3; is bounded by 3&#x000c5; because this is consistent with the limits of utility of root-mean-squared-deviation (RMSD) in superposition as a measure to estimate protein structural similarity.</p><p>Therefore, combining code lengths from equations <xref ref-type="disp-formula" rid="M4">4</xref>&#x02013;<xref ref-type="disp-formula" rid="M7">7</xref>, the code length required to transmit coordinates of a segment of a protein using any ideal model is give by
<disp-formula id="M8"><label>(8)</label><graphic xlink:href="bts223m8"/></disp-formula></p></sec></sec><sec id="SEC3.4"><title>3.4 Describing a protein segment using the coil model</title><p>When transmitting a segment of a protein <italic>p</italic><sub><italic>i</italic></sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>j</italic></sub> as a coil, the coordinates are stated raw in that range using a null model (<xref ref-type="sec" rid="SEC3.1">Section 3.1</xref>). Therefore, the code length of stating a segment <italic>p</italic><sub><italic>i</italic></sub>,&#x000b7;&#x000b7;&#x000b7; <italic>p</italic><sub><italic>j</italic></sub> as a coil is
<disp-formula id="M9"><label>(9)</label><graphic xlink:href="bts223m9"/></disp-formula>
where <italic>I</italic>(<italic>r</italic><sub><italic>k</italic></sub>) and <italic>I</italic>(<italic>c</italic><sub><italic>k</italic></sub>) are code lengths given in equations <xref ref-type="disp-formula" rid="M1">1</xref> and <xref ref-type="disp-formula" rid="M2">2</xref>.</p></sec><sec id="SEC3.5"><title>3.5 Describing the protein as a collection of segments</title><p>Having laid the foundations of encoding segments of a protein using one of the ideal models or the coil model (<xref ref-type="sec" rid="SEC3.3">Sections 3.3</xref> and <xref ref-type="sec" rid="SEC3.4">3.4</xref>), this section deals with describing the entire protein coordinates as a collection of segments of a model type.</p><p>The main idea here is to find the best decomposition of points <inline-graphic xlink:href="bts223i1p.jpg"/> of a protein into segments where each segment is described using exactly one of eight potential models. Note that the decomposition, with the associated model descriptors, gives a secondary structural hypothesis of a protein.</p><p>Formally, a segmentation of <inline-graphic xlink:href="bts223i1p.jpg"/>={<italic>p</italic><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>n</italic></sub>} gives an ordered subset of points <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>={<italic>p</italic><sup>&#x02032;</sup><sub>1</sub>&#x02261;<italic>p</italic><sub><italic>i</italic><sub>1</sub></sub>, <italic>p</italic><sup>&#x02032;</sup><sub>2</sub>&#x02261;<italic>p</italic><sub><italic>i</italic><sub>2</sub></sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sup>&#x02032;</sup><sub><italic>m</italic></sub>&#x02261;<italic>p</italic><sub><italic>i</italic><sub><italic>m</italic></sub></sub>} where 1=<italic>i</italic><sub>1</sub>&#x0003c;<italic>i</italic><sub>2</sub>&#x0003c;&#x000b7;&#x000b7;&#x000b7;&#x0003c;<italic>i</italic><sub><italic>m</italic></sub>=<italic>n</italic>. Each successive pair of points in <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>, &#x02329;<italic>p</italic><sup>&#x02032;</sup><sub>1</sub>, <italic>p</italic><sup>&#x02032;</sup><sub>2</sub>&#x0232a;, &#x02329;<italic>p</italic><sup>&#x02032;</sup><sub>2</sub>, <italic>p</italic><sup>&#x02032;</sup><sub>3</sub>&#x0232a;,&#x000b7;&#x000b7;&#x000b7; &#x02329;<italic>p</italic><sup>&#x02032;</sup><sub><italic>m</italic>&#x02212;1</sub>, <italic>p</italic><sup>&#x02032;</sup><sub><italic>m</italic></sub>&#x0232a;, defines the start and end points of a segment. (Notice that <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup> gives <italic>m</italic>&#x02212;1 segments of P, where end point of one segment is same as the start point of the next.) Associated with each segment &#x02329;<italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic></sub>, <italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic>+1</sub>&#x0232a; of length <italic>l</italic><sub><italic>k</italic></sub>=<italic>i</italic><sub><italic>k</italic>+1</sub>&#x02212;<italic>i</italic><sub><italic>k</italic></sub>+1 is a model type <italic>t</italic><sub><italic>k</italic></sub>, 1&#x02264;<italic>k</italic>&#x02264;<italic>m</italic>&#x02212;1. A secondary structural assignment of <inline-graphic xlink:href="bts223i1p.jpg"/> is given by the segmentation {<italic>p</italic><sup>&#x02032;</sup><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sup>&#x02032;</sup><sub><italic>m</italic></sub>} and its corresponding model assignment {<italic>t</italic><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>t</italic><sub><italic>m</italic>&#x02212;1</sub>}.</p><p>We note that for <italic>n</italic> points in <inline-graphic xlink:href="bts223i1p.jpg"/>, there are <inline-formula><inline-graphic xlink:href="bts223i1.jpg"/></inline-formula> possible segmentations &#x02013; the first and last points of <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup> are the same as those in <inline-graphic xlink:href="bts223i1p.jpg"/>. Since each segment of any segmentation can be assigned to any of the eight possible model types, the total possible secondary structural assignments is given by the formula: <inline-formula><inline-graphic xlink:href="bts223i2.jpg"/></inline-formula>. For an average protein, this gives a massive search space. (An efficient dynamic programming method to find the best secondary structural assignment is detailed in <xref ref-type="sec" rid="SEC4">Section 4</xref>.)</p><p>Any given segmentation <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup> of <inline-graphic xlink:href="bts223i1p.jpg"/> and its associated model types acts as a secondary structural hypothesis of the given coordinate data. Alice can describe and transmit the coordinates in <inline-graphic xlink:href="bts223i1p.jpg"/> using this hypothesis over a two-part message.</p><sec id="SEC3.5.1"><title>3.5.1 First part of the explanation message</title><p>In the first part of the message, Alice communicates the segmentation <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>={<italic>p</italic><sup>&#x02032;</sup><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sup>&#x02032;</sup><sub><italic>m</italic></sub>} and its corresponding model assignments {<italic>t</italic><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>t</italic><sub><italic>m</italic>&#x02212;1</sub>} as the hypothesis on the observed coordinate data in <inline-graphic xlink:href="bts223i1p.jpg"/>. This part of the message will be composed of the following:
<list list-type="order"><list-item><p>the number of segments (<italic>m</italic>&#x02212;1) in <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup> and</p></list-item><list-item><p>for each segment <italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic></sub> (1&#x02264;<italic>k</italic>&#x02264;<italic>m</italic>&#x02212;1), communicate
<list list-type="alpha-lower"><list-item><p>the length of the segment <italic>l</italic><sub><italic>k</italic></sub>=<italic>i</italic><sub><italic>k</italic>+1</sub>&#x02212;<italic>i</italic><sub><italic>k</italic></sub>+1 and</p></list-item><list-item><p>the model type <italic>t</italic><sub><italic>k</italic></sub> to encode the points in that segment.</p></list-item></list>
</p></list-item></list>
</p><p>The number of segments (<italic>m</italic>&#x02212;1) is an integer transmitted using a log<sup>*</sup> distribution assuming a universal prior on the distribution of numbers. <xref ref-type="bibr" rid="B24">Rissanen (1983</xref>) gives the code length of transmitting any integer <italic>n</italic>&#x0003e;0 as
<disp-formula id="M10"><label>(10)</label><graphic xlink:href="bts223m10"/></disp-formula>
where log<sub>2</sub><sup>*</sup>(<italic>n</italic>)=log<sub>2</sub>
<italic>n</italic>+log<sub>2</sub> log<sub>2</sub>
<italic>n</italic>+&#x000b7;&#x000b7;&#x000b7; (over all +ve terms).</p><p>Next, the lengths of the segments are positive integers. Although these integers can also be transmitted using a log<sup>*</sup> distribution, it is rather inefficient because in practice the lengths of helices, strands and coils are constrained. Therefore, in this work, we, encode the lengths of the segments using a Poisson distribution with a predefined mean of &#x003bb; for each model type: (The parameters &#x003bb; for each of the eight types of models are treated to be a part of the codebook. In this work we empirically set &#x003bb;=4 for coil and &#x003bb;=5 for strands. The lengths of helices are transmitted using a mixture of two Poisson distributions with means 4 and 8.)
<disp-formula><graphic xlink:href="bts223um6"/></disp-formula>
The code length to state any integer <italic>n</italic>&#x0003e;0 using this distribution is:
<disp-formula id="M11"><label>(11)</label><graphic xlink:href="bts223m11"/></disp-formula></p><p>Finally, each model type <italic>t</italic> (encoded as an integer 0&#x02264;<italic>t</italic>&#x02264;7) of any segment is stated using a uniform distribution (uniform is the simplest choice. Since some models as more probable than others (e.g. &#x003b1;-helices and strands are significantly more probable than other models), a more elaborate coding scheme can also be considered taking into account the empirical distribution of various models.) in
<disp-formula id="M12"><label>(12)</label><graphic xlink:href="bts223m12"/></disp-formula></p><p>In summary, combining equations <xref ref-type="disp-formula" rid="M10">10</xref>&#x02013;<xref ref-type="disp-formula" rid="M12">12</xref>, the code length of the first part of the message proposing the secondary structural hypothesis on <inline-graphic xlink:href="bts223i1p.jpg"/> is
<disp-formula id="M13"><label>(13)</label><graphic xlink:href="bts223m13"/></disp-formula></p></sec><sec id="SEC3.5.2"><title>3.5.2 Second part of the explanation message</title><p>In the second part of the message, Alice sends the actual details of the coordinates in <inline-graphic xlink:href="bts223i1p.jpg"/> economically given the hypothesis <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>.</p><p>The procedure to transmit coordinate data of a segment of a protein using the ideal and coil models has been discussed in <xref ref-type="sec" rid="SEC3.3">Sections 3.3</xref> and <xref ref-type="sec" rid="SEC3.4">3.4</xref>.</p><p>Using the notations in <xref ref-type="sec" rid="SEC3.5">Section 3.5</xref>, the hypothesis received in the first part of the message is of the form &#x02329;<italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic></sub>, <italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic>+1</sub>&#x0232a;, with each segment of some length <italic>l</italic><sub><italic>k</italic></sub> and type <italic>t</italic><sub><italic>k</italic></sub>. The message length to transmit the coordinates given the above segmentation is:
<disp-formula id="M14"><label>(14)</label><graphic xlink:href="bts223m14"/></disp-formula>
where <italic>O</italic>(1) is the constant number of bits to state the first C<sub>&#x003b1;</sub> coordinate <italic>p</italic><sub>1</sub> (<xref ref-type="sec" rid="SEC3.1">Section 3.1</xref>), <italic>I</italic><sub>model</sub>(<italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic></sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic>+1</sub>)=<italic>I</italic><sub>ideal</sub>(<italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic></sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic>+1</sub>) if 0&#x02264;<italic>t</italic><sub><italic>k</italic></sub>&#x02264;6 and <italic>I</italic><sub>model</sub>=<italic>I</italic><sub>coil</sub>(<italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic></sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sup>&#x02032;</sup><sub><italic>k</italic>+1</sub>) if <italic>t</italic><sub><italic>k</italic></sub>=7.</p><p>The total message length of communicating <inline-graphic xlink:href="bts223i1p.jpg"/> with <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup> comes from combining equations <xref ref-type="disp-formula" rid="M13">13</xref> and <xref ref-type="disp-formula" rid="M14">14</xref>
<disp-formula id="M15"><label>(15)</label><graphic xlink:href="bts223m15"/></disp-formula></p></sec></sec><sec id="SEC3.6"><title>3.6 Problem Statement</title><p>From the earlier section, the problem of inferring the best secondary structural assignment can now be stated formally as follows: given <inline-graphic xlink:href="bts223i1p.jpg"/> containing <italic>n</italic> points, find the secondary structural segmentation <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup> and its corresponding model assignment such that the total message length to transmit <inline-graphic xlink:href="bts223i1p.jpg"/> losslessly, <italic>I</italic><sub>total</sub> (<inline-graphic xlink:href="bts223i1p.jpg"/>&#x00026;<inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>)=<italic>I</italic><sub>first</sub>(<inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>)+<italic>I</italic><sub>second</sub>(<inline-graphic xlink:href="bts223i1p.jpg"/>|<inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>) is minimized.</p></sec></sec><sec id="SEC4"><title>4 INFERENCE OF SECONDARY STRUCTURE</title><p>This section describes the search method to find the best MML secondary structural segmentation from given coordinate data.</p><sec id="SEC4.1"><title>4.1 Constructing the code length matrices</title><p>Equation <xref ref-type="disp-formula" rid="M15">15</xref> gives the total message length of communicating coordinates in <inline-graphic xlink:href="bts223i1p.jpg"/> using a segmentation <inline-graphic xlink:href="bts223i1p.jpg"/><sup>&#x02032;</sup>:
<disp-formula><graphic xlink:href="bts223um7"/></disp-formula></p><p>For a given protein, any pair of points can potentially be the start and end points of a segment. At the same time, a segment can be described using any of the eight models considered here. Therefore, the procedure to assign secondary structure to C<sub>&#x003b1;</sub> coordinates {<italic>p</italic><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>n</italic></sub>} in a given protein begins by constructing a set of eight code length matrices, one for each model type <italic>t</italic> (0&#x02264;<italic>t</italic>&#x02264;7):
<disp-formula id="M16"><label>(16)</label><graphic xlink:href="bts223m16"/></disp-formula>
where any cell (<italic>i</italic>, <italic>j</italic>)<sub>1&#x02264;<italic>i</italic>&#x0003c;<italic>j</italic>&#x02264;<italic>n</italic></sub> of the matrix for type <italic>t</italic> gives the code length of stating the segment <italic>p</italic><sub><italic>i</italic></sub> to <italic>p</italic><sub><italic>j</italic></sub> using the model <italic>t</italic>.</p></sec><sec id="SEC4.2"><title>4.2 Finding the best secondary structural assigning</title><p>The segmentation of <inline-graphic xlink:href="bts223i1p.jpg"/> using various model types enforces a strict ordering constraint, satisfying the requirements for a solution by dynamic programming, even though the search space is huge as discussed in <xref ref-type="sec" rid="SEC3.5">Section 3.5</xref>. Let any <italic>D</italic>(<italic>i</italic>) store the optimal message length of transmitting points <italic>p</italic><sub>1</sub>,&#x000b7;&#x000b7;&#x000b7;, <italic>p</italic><sub><italic>i</italic></sub>, for all 1&#x02264;<italic>i</italic>&#x02264;<italic>n</italic>. With the boundary condition of <italic>D</italic>(1)=0, the dynamic programming recurrence to find the optimal assignment is given by
<disp-formula><graphic xlink:href="bts223um8"/></disp-formula></p><p>The above recurrence is used to fill the array <italic>D</italic> iteratively from 1 to <italic>n</italic>. On completion, the best secondary structure assignment can be derived by remembering the index <italic>i</italic> and type <italic>t</italic> from which the optimal <italic>D</italic>(<italic>j</italic>) is computed.</p></sec></sec><sec id="SEC5"><title>5 POST-PROCESSING</title><p>In the post-processing step, the above-defined successive segments of same type (helical or strand) from the MML inference are examined for moderate curvature. Further, sharp turns are identified and distinguished from coil assignments. Finally, &#x003b2;-sheets are identified by grouping together the assigned strands.</p><p><italic>Checking for moderate curvature in helix and strand</italic>: The MML inference automatically gives the best (in the information&#x02013;theoretic sense) piecewise approximation of a curved helix or strand. In a single pass through the secondary structural assignment generated by our method, we check for such curvatures and merge successive segments to form a larger segment.</p><p>Each helix (1&#x02264;<italic>t</italic>&#x02264;6) and strand (<italic>t</italic>=7) is represented by a vector. For a helical segment, the vector is the axis of the helix. For the strand segment, the vector is the least-square line fitting its C<sub>&#x003b1;</sub> atoms. Two successive segments (of the same model type) are joined to form a single segment if the orientation angle of their vectors is within 30<sup>&#x025cb;</sup>. [For a detailed description of the finding the axes and orientation angle, see <xref ref-type="bibr" rid="B14">Konagurthu <italic>et al</italic>. (2008</xref>)]</p><p><italic>Identifying sharp turns</italic>: sharp turns often have geometries that are conformationally similar to a turn of ideal helical models considered in this work. Any assignment of a helical segment of length less than or equal to four residues that is preceded and succeeded by other assigned segments is relabeled as a sharp turn.</p><p>However, &#x003b1;-helices often fray or tighten at their N- or C-terminal ends giving a short stretch of &#x003c0; or 3<sub>10</sub> helical segment. In order not to incorrectly assign these ends as sharp turns, the orientation of a candidate segment is checked against the preceding and succeeding segments and only assigned a sharp turn if the segment's orientation exceeds 45<sup>&#x025cb;</sup> relative to its neighbouring segments.</p><p><italic>Grouping strands forming &#x003b2;-sheet</italic>: all strand segments are extracted from a given assignment. A strand adjacency matrix is computed where two strands are treated to be adjacent if and only if they are in parallel (with orientation angle in the range &#x000b1; 45<sup>&#x025cb;</sup>) or anti-parallel (with orientation angle in the range [135<sup>&#x025cb;</sup> to 180<sup>&#x025cb;</sup>] or [&#x02212;135<sup>&#x025cb;</sup> to &#x02212;180<sup>&#x025cb;</sup>]) orientation and there exist Van der Waals interactions between at least two pairs of atoms from the segment.</p><p>Strands from a &#x003b2;-sheet are then identified and grouped using a complete depth-first search on the strand adjacency matrix.</p></sec><sec id="SEC6"><title>6 RESULTS</title><p><italic>Implementation</italic>: a program (<monospace>SST</monospace>) implementing the method described in the previous section has been developed in <monospace>C++</monospace> programming language. The program accepts protein coordinates in the Brookhaven PDB format and outputs the secondary structure assignment both at a segment level (stating the start and end point of each secondary structural segment) as well as at a residue level. The program also generates a PyMol script, which allows users to visualize the secondary stucture assignment. (<xref ref-type="fig" rid="F1">Fig. 1</xref>).</p><p><italic>Datasets and comparison methods</italic>: To study the performance of <monospace>SST</monospace>, we consider a dataset of 1737 PDB structures. These structures are the same as the dataset considered by <xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>. (2005</xref>), excluding the structures which have been deprecated or those structures that failed running on any one of the considered methods. (See below.) These structures are divided into four datasets: high-resolution (HRes) dataset with 631 crystal structures solved to 1.7 &#x000c5; or better; medium resolution (MRes) dataset with 582 crystal structures with resolution between 1.7 and 3 &#x000c5; resolution; low-resolution (LRes) dataset with 306 structures with resolution &#x0003e;3 &#x000c5; and finally, a dataset of 218 NMR structures.</p><p>In this work, we mainly compare <monospace>SST</monospace> with <monospace>DSSP</monospace> (<xref ref-type="bibr" rid="B9">Kabsch and Sander, 1983</xref>) and <monospace>STRIDE</monospace> (<xref ref-type="bibr" rid="B8">Frishman and Argos, 1995</xref>) exhaustively on the large structural dataset described earlier. Although there are other programs for secondary structure assignment, we had difficulty finding distributions that we could download. For those we managed to download, we could not install the programs due to unresolvable dependencies in their source code. However, we use a web server <monospace>2Struct</monospace> (<xref ref-type="bibr" rid="B13">Klose <italic>et al</italic>., 2010</xref>), which allows manual submission of queries with a single point of access to a variety of secondary structure assignment methods beyond <monospace>DSSP</monospace> and <monospace>STRIDE</monospace> such as <monospace>KAKSI</monospace> (<xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>., 2005</xref>), <monospace>PALSSE</monospace> (<xref ref-type="bibr" rid="B19">Majumdar <italic>et al</italic>., 2005</xref>), <monospace>STICK</monospace> (<xref ref-type="bibr" rid="B29">Taylor, 2001</xref>), <monospace>XTLSSTR</monospace> (<xref ref-type="bibr" rid="B12">King and Johnson, 1999</xref>) and <monospace>P-SEA</monospace> (<xref ref-type="bibr" rid="B16">Labesse <italic>et al</italic>., 1997</xref>). To facilitate comparisons with other methods, we randomly selected 30 low-resolution structures from the LRes dataset and manually collected the secondary structure assignments from the server. The list of structures used in this experiment can be download from <ext-link ext-link-type="uri" xlink:href="http://www.csse.monash.edu.au/~karun/sst">http://www.csse.monash.edu.au/~karun/sst</ext-link>.</p><p><italic>Comparison</italic>: we first assess the composition of the assigned regular secondary structures (helices and strands) using <monospace>DSSP</monospace>, <monospace>STRIDE</monospace> and <monospace>SST</monospace> over the four datasets described earlier. Overall <monospace>DSSP</monospace> assigns 34.5% of residues to helices and 19.9 of residues to strands. <monospace>STRIDE</monospace> assigns 37.3 and 27.4%, and <monospace>SST</monospace> assigns 40.4 and 25.3% of residues to helices and strands, respectively. In general, <monospace>DSSP</monospace> is conservative in assigning regular secondary structures resulting in shorter elements compared with output from <monospace>STRIDE</monospace> and <monospace>SST</monospace>. Examining the lengths of various secondary structural segments, we observe that the average length of a helix and strand segment assigned by <monospace>SST</monospace> is 12.1 and 6.1 residues, respectively. Unlike <monospace>SST</monospace>, which states the residue start and end points of each segment, computing the lengths of secondary structural elements from <monospace>DSSP</monospace> and <monospace>STRIDE</monospace>'s output is problematic and error-prone (<xref ref-type="bibr" rid="B19">Majumdar <italic>et al</italic>., 2005</xref>).</p><p><xref ref-type="table" rid="T1">Table 1</xref> shows the comparison between <monospace>SST</monospace>, <monospace>DSSP</monospace> and <monospace>STRIDE</monospace> over high, medium, low resolution and NMR structures. To undertake this comparison, the assignments of the three programs are grouped into three classes: helix (of all types), strand and other. <monospace>DSSP</monospace> and <monospace>STRIDE</monospace> use similar methods for assignment based on detecting hydrogen bonds. Therefore, as one would expect, their assignments are highly similar. <monospace>SST</monospace> largely agrees with <monospace>DSSP</monospace> and <monospace>STRIDE</monospace> when assigning helices. Strands, however, show some disagreement. Visually examining several instances, we find that in many cases <monospace>SST</monospace> assigns longer strands than the other two methods. Agreement between strand assignments on NMR structures among the three methods is rather poor. Surprisingly, even <monospace>DSSP</monospace> and <monospace>STRIDE</monospace> differ enormously in this class even though their assignment methods are quite similar.
<table-wrap id="T1" position="float"><label>Table 1.</label><caption><p>Performance of <monospace>SST</monospace> compared with <monospace>DSSP</monospace> and <monospace>STRIDE</monospace> on four datasets: HRes, MRes, LRes and NMR</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1"/><th colspan="3" rowspan="1">HRes (% Agreement)<hr/></th><th colspan="3" rowspan="1">MRes (% Agreement)<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Helix</th><th rowspan="1" colspan="1">Strand</th><th rowspan="1" colspan="1">Total</th><th rowspan="1" colspan="1">Helix</th><th rowspan="1" colspan="1">Strand</th><th rowspan="1" colspan="1">Total</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1"><monospace>SST</monospace> versus <monospace>DSSP</monospace></td><td rowspan="1" colspan="1">97.6</td><td rowspan="1" colspan="1">81.9</td><td rowspan="1" colspan="1">84.1</td><td rowspan="1" colspan="1">97.6</td><td rowspan="1" colspan="1">83.4</td><td rowspan="1" colspan="1">83.9</td></tr><tr><td rowspan="1" colspan="1"><monospace>SST</monospace> versus <monospace>STRIDE</monospace></td><td rowspan="1" colspan="1">97.1</td><td rowspan="1" colspan="1">80.8</td><td rowspan="1" colspan="1">84.3</td><td rowspan="1" colspan="1">97.2</td><td rowspan="1" colspan="1">82.3</td><td rowspan="1" colspan="1">84.3</td></tr><tr><td rowspan="1" colspan="1"><monospace>STRIDE</monospace> versus <monospace>DSSP</monospace></td><td rowspan="1" colspan="1">99.4</td><td rowspan="1" colspan="1">98.5</td><td rowspan="1" colspan="1">96.7</td><td rowspan="1" colspan="1">99.4</td><td rowspan="1" colspan="1">98.9</td><td rowspan="1" colspan="1">96.9</td></tr><tr><td colspan="7" rowspan="1"><hr/></td></tr><tr><td rowspan="1" colspan="1"/><td colspan="3" rowspan="1">LRes (% Agreement)<hr/></td><td colspan="3" rowspan="1">NMR (% Agreement)<hr/></td></tr><tr><td colspan="7" rowspan="1"><hr/></td></tr><tr><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">Helix</td><td rowspan="1" colspan="1">Strand</td><td rowspan="1" colspan="1">Total</td><td rowspan="1" colspan="1">Helix</td><td rowspan="1" colspan="1">Strand</td><td rowspan="1" colspan="1">Total</td></tr><tr><td rowspan="1" colspan="1"><monospace>SST</monospace> versus <monospace>DSSP</monospace></td><td rowspan="1" colspan="1">97.7</td><td rowspan="1" colspan="1">84.3</td><td rowspan="1" colspan="1">82.7</td><td rowspan="1" colspan="1">98.4</td><td rowspan="1" colspan="1">53.8</td><td rowspan="1" colspan="1">51.5</td></tr><tr><td rowspan="1" colspan="1"><monospace>SST</monospace> versus <monospace>STRIDE</monospace></td><td rowspan="1" colspan="1">97.2</td><td rowspan="1" colspan="1">82.3</td><td rowspan="1" colspan="1">83.8</td><td rowspan="1" colspan="1">94.4</td><td rowspan="1" colspan="1">78.9</td><td rowspan="1" colspan="1">83.9</td></tr><tr><td rowspan="1" colspan="1"><monospace>STRIDE</monospace> versus <monospace>DSSP</monospace></td><td rowspan="1" colspan="1">99.3</td><td rowspan="1" colspan="1">98.3</td><td rowspan="1" colspan="1">96.0</td><td rowspan="1" colspan="1">99.6</td><td rowspan="1" colspan="1">64.6</td><td rowspan="1" colspan="1">68.7</td></tr></tbody></table><table-wrap-foot><fn><p>Columns labelled &#x02018;Helix&#x02019; and &#x02018;Strand&#x02019; give the percentage agreement of residues assigned as helix and strand, respectively, between the two methods. Column &#x02018;Total&#x02019; gives the percentage agreement over three classes: helix, strand and others.</p></fn></table-wrap-foot></table-wrap>
</p><p><xref ref-type="table" rid="T2">Table 2</xref> extends the comparison of <monospace>SST</monospace> with other popular methods for assignment on low-resolution structures. The table shows the percentage agreement of secondary structural assignments between the methods. Consistent with previous comparative studies (<xref ref-type="bibr" rid="B3">Colloc'h <italic>et al</italic>., 1993</xref>; <xref ref-type="bibr" rid="B20">Martin <italic>et al</italic>., 2005</xref>), we see considerable differences in the assignments. In the absence of a universally acknowledged <italic>gold standard</italic> for assignment, it becomes very difficult (if not impossible) to objectively validate one method to be truly better than the other. The observed differences mainly arise from the different criteria used by the methods. However, manually examining many cases where the methods differ, we find that most disagreements appear at the ends of various (helical or strand) segments. We will use a simple example to highlight the most common type of differences. <xref ref-type="fig" rid="F2">Figure 2</xref> gives the overall residue-level secondary structure assignment across different methods for a flavodoxin structure from <italic>Clostridium beijerinckii</italic> (wwPDB ID:<monospace>5NLL</monospace>). <monospace>DSSP</monospace> and <monospace>STRIDE</monospace> assignments are nearly identical to each other. From the figure, small disagreements between methods can be seen around the start and end points of various segments demarcated by <monospace>SST</monospace>s segment view (labelled <monospace>SST(SEG)</monospace>). A major difference between <monospace>DSSP</monospace> and <monospace>SST</monospace> is the region Lys28&#x02026;Asn34, which <monospace>SST</monospace> assigns as a strand. <monospace>DSSP</monospace> starts the segment three residues further at Asn31. Inspecting the structure, we find a backbone hydrogen bond between Asp29 and Met1. This might suggest the start of the strand at either Asp29 or one residue upstream at Lys28 as identified by <monospace>SST</monospace>. Also, in the region Glu62&#x02026; Ile73, only <monospace>SST</monospace> correctly assigns a &#x003c0;-helical cap (Glu62&#x02026; Phe66) leading into a &#x003b1;-helix.
<fig id="F2" position="float"><label>Fig. 2.</label><caption><p>Residue-level secondary structure assignment of a 1.75 &#x000c5; flavodoxin structure from <italic>Clostridium beijerinckii</italic>. <monospace>SST</monospace> residue-level assignment and the segment boundaries are shown in addition to the assignments across multiple methods. For details of the secondary structure codes, see <ext-link ext-link-type="uri" xlink:href="http://www.csse.monash.edu.au/karun/sst/codes.html">http://www.csse.monash.edu.au/karun/sst/codes.html</ext-link></p></caption><graphic xlink:href="bts223f2"/></fig>
<table-wrap id="T2" position="float"><label>Table 2.</label><caption><p>Pairwise comparison between secondary structure assignment methods</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"><monospace>DSSP</monospace> (%)</th><th rowspan="1" colspan="1"><monospace>STRIDE</monospace> (%)</th><th rowspan="1" colspan="1"><monospace>KAKSI</monospace> (%)</th><th rowspan="1" colspan="1"><monospace>PALSSE</monospace> (%)</th><th rowspan="1" colspan="1"><monospace>P-SEA</monospace> (%)</th><th rowspan="1" colspan="1"><monospace>STICK</monospace> (%)</th><th rowspan="1" colspan="1"><monospace>XtlSStr</monospace> (%)</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1"><monospace>SST</monospace></td><td rowspan="1" colspan="1">77.4</td><td rowspan="1" colspan="1">75.3</td><td rowspan="1" colspan="1">74.3</td><td rowspan="1" colspan="1">80.7</td><td rowspan="1" colspan="1">53.9</td><td rowspan="1" colspan="1">69.0</td><td rowspan="1" colspan="1">74.9</td></tr><tr><td rowspan="1" colspan="1"><monospace>DSSP</monospace></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">86.1</td><td rowspan="1" colspan="1">76.9</td><td rowspan="1" colspan="1">76.0</td><td rowspan="1" colspan="1">57.1</td><td rowspan="1" colspan="1">71.8</td><td rowspan="1" colspan="1">77.6</td></tr><tr><td rowspan="1" colspan="1"><monospace>STRIDE</monospace></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">67.8</td><td rowspan="1" colspan="1">74.8</td><td rowspan="1" colspan="1">48.8</td><td rowspan="1" colspan="1">64.5</td><td rowspan="1" colspan="1">73.8</td></tr><tr><td rowspan="1" colspan="1"><monospace>KAKSI</monospace></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">75.4</td><td rowspan="1" colspan="1">67.4</td><td rowspan="1" colspan="1">79.4</td><td rowspan="1" colspan="1">72.9</td></tr><tr><td rowspan="1" colspan="1"><monospace>PALSSE</monospace></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">50.9</td><td rowspan="1" colspan="1">69.9</td><td rowspan="1" colspan="1">70.8</td></tr><tr><td rowspan="1" colspan="1"><monospace>P-SEA</monospace></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">66.6</td><td rowspan="1" colspan="1">54.1</td></tr><tr><td rowspan="1" colspan="1"><monospace>STICK</monospace></td><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1"/><td rowspan="1" colspan="1">66.7</td></tr></tbody></table><table-wrap-foot><fn><p>Each cell in the upper-triangular matrix gives the percentage agreement of the residue-level assignments between a pair of methods indicated in the first row and column. The agreement is measured over all three classes: helix, strand and other.</p></fn></table-wrap-foot></table-wrap>
</p><p>To evaluate the consistency of <monospace>SST</monospace>s secondary structural assignments on coordinates solved at different resolutions, we randomly selected 15 protein structures for which both the superseded low-resolution coordinates and the new high-resolution coordinates were available. <xref ref-type="table" rid="T3">Table 3</xref> gives the list of considered structures along with the percentage agreement between <monospace>SST</monospace>s assignment at different resolutions. The results indicate that <monospace>SST</monospace> produces consistent results on structures determined at different resolutions. The &#x0003c;10% differences (<xref ref-type="table" rid="T3">Table 3</xref>, last column) in agreement on the chosen structures may well represent genuine structural differences rather than shortcomings of the algorithm.
<table-wrap id="T3" position="float"><label>Table 3.</label><caption><p><monospace>SST</monospace> assignment sensitivity to changes in coordinate resolution. Resolution numbers marked with <sup>*</sup> are taken from the original papers</p></caption><table frame="hsides" rules="groups"><thead align="left"><tr><th rowspan="1" colspan="1">Structure name</th><th rowspan="1" colspan="1">LRes PDB ID</th><th rowspan="1" colspan="1">HRes PDB ID</th><th rowspan="1" colspan="1">%Agree</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Lysozyme</td><td rowspan="1" colspan="1"><monospace>2LZH (6.0</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>2ZQ3 (1.6</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">95.3</td></tr><tr><td rowspan="1" colspan="1">Ferrochelatase</td><td rowspan="1" colspan="1"><monospace>1LD3 (2.6</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>1DOZ (1.8</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">97.4</td></tr><tr><td rowspan="1" colspan="1">Glutamate Dehydrogenase</td><td rowspan="1" colspan="1"><monospace>1AUP (2.5</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>1BGV (1.9</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">90.6</td></tr><tr><td rowspan="1" colspan="1">Pseudomonas Cytochrome</td><td rowspan="1" colspan="1"><monospace>151C (2.0</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>351C (1.6</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">93.9</td></tr><tr><td rowspan="1" colspan="1">Bence-Jones Protein</td><td rowspan="1" colspan="1"><monospace>1BJL (2.9</monospace> &#x000c5;)<sup>*</sup></td><td rowspan="1" colspan="1"><monospace>3BJL (2.3</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">90.2</td></tr><tr><td rowspan="1" colspan="1">Concanavalin A</td><td rowspan="1" colspan="1"><monospace>4CNA (2.9</monospace> &#x000c5;)<sup>*</sup></td><td rowspan="1" colspan="1"><monospace>5CNA (2.0</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">91.8</td></tr><tr><td rowspan="1" colspan="1">Endochitinase</td><td rowspan="1" colspan="1"><monospace>1BAA (2.8</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>2BAA (1.8</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">95.5</td></tr><tr><td rowspan="1" colspan="1">Ferredoxin Reductase</td><td rowspan="1" colspan="1"><monospace>1FNR (2.6</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>1FND (1.7</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">95.9</td></tr><tr><td rowspan="1" colspan="1">Endonuclease III</td><td rowspan="1" colspan="1"><monospace>1ABK (2.0</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>2ABK (1.6</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">97.6</td></tr><tr><td rowspan="1" colspan="1">Myohemerythrin</td><td rowspan="1" colspan="1"><monospace>1MHR (2.9</monospace> &#x000c5;)<sup>*</sup></td><td rowspan="1" colspan="1"><monospace>2MHR (1.3</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">92.4</td></tr><tr><td rowspan="1" colspan="1">Phosphofructokinase</td><td rowspan="1" colspan="1"><monospace>5PFK (7.0</monospace> &#x000c5;)<sup>*</sup></td><td rowspan="1" colspan="1"><monospace>6PFK (2.6</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">95.3</td></tr><tr><td rowspan="1" colspan="1">Serine Protease Inhibitor</td><td rowspan="1" colspan="1"><monospace>1QLP (2.9</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>2PSI (2.0</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">95.4</td></tr><tr><td rowspan="1" colspan="1">Dimeric Hemoglobin</td><td rowspan="1" colspan="1"><monospace>1SDH (2.4</monospace> &#x000c5;)<sup>*</sup></td><td rowspan="1" colspan="1"><monospace>3SDH (1.4</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">98.4</td></tr><tr><td rowspan="1" colspan="1">Glutathione Reductase</td><td rowspan="1" colspan="1"><monospace>1GRS (3.0</monospace> &#x000c5;)<sup>*</sup></td><td rowspan="1" colspan="1"><monospace>3GRS (1.5</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">94.4</td></tr><tr><td rowspan="1" colspan="1">Calmodulin Fragment TR2C</td><td rowspan="1" colspan="1"><monospace>1TRC (3.6</monospace> &#x000c5;)</td><td rowspan="1" colspan="1"><monospace>1FW4 (1.7</monospace> &#x000c5;)</td><td rowspan="1" colspan="1">93.9</td></tr></tbody></table></table-wrap>
</p><p>Further, to illustrate the reliable segmentation produced by <monospace>SST</monospace> on structures with long, curved helices and strands, we chose two structures: Leucine zipper protein (wwPDB: <monospace>1NKP</monospace>) composed of very long helices and Sucrose-specific porin protein (wwPDB: <monospace>1A0S</monospace>) composed of long, curved strands forming &#x003b2;-barrels. Although <monospace>SST</monospace> initially breaks the curved segments into smaller pieces, the post-processing step explained in <xref ref-type="sec" rid="SEC5">Section 5</xref> reconstitutes these pieces back correctly into fuller segments. [<xref ref-type="fig" rid="F3">Fig. 3</xref> gives <monospace>SST</monospace>s assignment on the porin protein (<monospace>1A0S</monospace>). The figure shows that the curved strands of the &#x003b2;-barrels have been reconstituted and grouped reasonably well in the post-processing step.]
<fig id="F3" position="float"><label>Fig. 3.</label><caption><p>Automatically generated PyMol image of <monospace>SST</monospace>s secondary structural assignment on sucrose-specific porin (ScrY) from <italic>Salmonella typhimurium</italic> (wwPDB: <monospace>1A0S</monospace>)</p></caption><graphic xlink:href="bts223f3"/></fig></p><p>Finally, as a difficult case we consider the 10 &#x000c5; resolution protein coordinates of Elongation Factor Tu (GDB.Kirromycin) from <italic>Escherichia coli</italic> (wwPDB: <monospace>1qzd</monospace>) solved using Cryo-Electron Microscopy. Its wwPDB file contains only C<sub>&#x003b1;</sub> coordinate information. <monospace>DSSP</monospace>, <monospace>STRIDE</monospace> and <monospace>P-SEA</monospace> fail to process such information as the coordinates of other atoms are needed to decipher Hydrogen bonds. <monospace>KAKSI</monospace> and <monospace>XTLSSTR</monospace> are able to process this structure but assign all residues in the chain to coil. Of the considered methods, only <monospace>SST</monospace>, <monospace>PALSSE</monospace> and <monospace>STICK</monospace> assigned any secondary structure. For lack of space, the overall residue-level assignment across these three methods are presented in <xref ref-type="fig" rid="F1">Figure 1</xref> of the supplementary text. Examining the structure, <monospace>PALSSE</monospace> consistently overestimates the regular secondary structural regions by a large margin. <monospace>STICK</monospace> performs well, especially in identifying &#x003b2;-strands. However, it miscalculates several secondary structural elements. In comparison, <monospace>SST</monospace> produced the most reasonable segmentation of the three methods on visual inspection of the structure.</p></sec><sec id="SEC7"><title>7 CONCLUSION</title><p>Reliable secondary structure assignment is an important problem. We have developed a novel information theoretic method to address this problem using the Bayesian framework of MML inference. Careful examination of the results over a large number of structures suggests that our method gives consistent assignments even on low-resolution data. We note that our method uses a dictionary of models composed of ideal secondary structural elements. The details of the models are explicit and open to scrutiny. It is likely that these models can be improved. (&#x02018;Essentially, all models are wrong, but some are useful.&#x02019;&#x02014;George Box.) However, modification to the models is an improvement if, and only if, it yields extra compression.</p></sec></body><back><ack><title>8 ACKNOWLEDGEMENTS</title><p>LA thanks Sally P. Allison for support. ASK acknowledges helpful discussions with Peter J. Stuckey during the development of this work, and thanks to Rekha Amar for proof reading this manuscript.</p><p><italic>Funding</italic>: ASK's research is supported by <funding-source>Monash Larkins Fellowship</funding-source>.</p><p><italic>Conflict of Interest</italic>: none declared.</p></ack><ref-list><title>REFERENCES</title><ref id="B1"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Andersen</surname><given-names>C.A.</given-names></name><name><surname>Rost</surname><given-names>B.</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Gu</surname><given-names>J.</given-names></name><name><surname>Bourne</surname><given-names>P.E.</given-names></name></person-group><article-title>Secondary structure assignment</article-title><source>Structural Bioinformatics</source><year>2009</year><publisher-name>Wiley-Blackwell</publisher-name><fpage>459</fpage><lpage>484</lpage></element-citation></ref><ref id="B2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bayes</surname><given-names>T.</given-names></name><name><surname>Price</surname><given-names>R.</given-names></name></person-group><article-title>An essay towards solving a problem in the doctrine of chance</article-title><source>Philos. Trans. Roy. Soc. Lond.</source><year>1763</year><volume>53</volume><fpage>370</fpage><lpage>418</lpage></element-citation></ref><ref id="B3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Colloc'h</surname><given-names>N.</given-names></name><etal/></person-group><article-title>Comparison of three algorithms for the assignment of secondary structure in proteins</article-title><source>Protein Eng.</source><year>1993</year><volume>6</volume><fpage>377</fpage><lpage>382</lpage><pub-id pub-id-type="pmid">8332595</pub-id></element-citation></ref><ref id="B4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Conway</surname><given-names>J.H.</given-names></name><name><surname>Sloane</surname><given-names>N.J.A.</given-names></name></person-group><article-title>On the Voronoi regions of certain lattices</article-title><source>SIAM Journal on Algebraic and Discrete Methods</source><year>1984</year><volume>5</volume><fpage>294</fpage><lpage>305</lpage></element-citation></ref><ref id="B5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cuff</surname><given-names>J.A.</given-names></name><name><surname>Barton</surname><given-names>G.J.</given-names></name></person-group><article-title>Evaluation and improvement of multiple sequence methods for protein secondary structure prediction</article-title><source>Proteins</source><year>1999</year><volume>34</volume><fpage>508</fpage><lpage>519</lpage><pub-id pub-id-type="pmid">10081963</pub-id></element-citation></ref><ref id="B6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dupuis</surname><given-names>F.</given-names></name><etal/></person-group><article-title>Protein secondary structure assignment through Voronoi tessellation</article-title><source>Proteins</source><year>2004</year><volume>55</volume><fpage>519</fpage><lpage>528</lpage><pub-id pub-id-type="pmid">15103616</pub-id></element-citation></ref><ref id="B7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fodje</surname><given-names>M.</given-names></name><name><surname>Al-Karadaghi</surname><given-names>S.</given-names></name></person-group><article-title>Occurrence, conformational features and amino acid propensities for the &#x003c0;-helix</article-title><source>Protein Eng.</source><year>2002</year><volume>15</volume><fpage>353</fpage><lpage>358</lpage><pub-id pub-id-type="pmid">12034854</pub-id></element-citation></ref><ref id="B8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Frishman</surname><given-names>D.</given-names></name><name><surname>Argos</surname><given-names>P.</given-names></name></person-group><article-title>Knowledge-based protein secondary structure assignment</article-title><source>Proteins</source><year>1995</year><volume>23</volume><fpage>566</fpage><lpage>579</lpage><pub-id pub-id-type="pmid">8749853</pub-id></element-citation></ref><ref id="B9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kabsch</surname><given-names>W.</given-names></name><name><surname>Sander</surname><given-names>C.</given-names></name></person-group><article-title>Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and geometrical features</article-title><source>Biopolymers</source><year>1983</year><volume>22</volume><fpage>2577</fpage><lpage>2637</lpage><pub-id pub-id-type="pmid">6667333</pub-id></element-citation></ref><ref id="B10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kamat</surname><given-names>A.P.</given-names></name><name><surname>Lesk</surname><given-names>A.M.</given-names></name></person-group><article-title>Contact patterns between helices and strands of sheet define protein folding patterns</article-title><source>Proteins: Struct. Funct. Bioinformatics</source><year>2007</year><volume>66</volume><fpage>869</fpage><lpage>876</lpage></element-citation></ref><ref id="B11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kearsley</surname><given-names>S.K.</given-names></name></person-group><article-title>On the orthogonal transformation used for structural comparisons</article-title><source>Acta. Cryst.</source><year>1989</year><volume>A45</volume><fpage>208</fpage><lpage>210</lpage></element-citation></ref><ref id="B12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>King</surname><given-names>S.</given-names></name><name><surname>Johnson</surname><given-names>W.</given-names></name></person-group><article-title>Assigning secondary structure from protein coordinate data</article-title><source>Proteins</source><year>1999</year><volume>35</volume><fpage>313</fpage><lpage>320</lpage><pub-id pub-id-type="pmid">10328266</pub-id></element-citation></ref><ref id="B13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Klose</surname><given-names>D.P.</given-names></name><etal/></person-group><article-title>2Struct: the secondary structure server</article-title><source>Bioinformatics</source><year>2010</year><volume>20</volume><fpage>2624</fpage><lpage>2625</lpage><pub-id pub-id-type="pmid">20739308</pub-id></element-citation></ref><ref id="B14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Konagurthu</surname><given-names>A.S.</given-names></name><etal/></person-group><article-title>Structural search and retrieval using tableau representation of protein folding patterns</article-title><source>Bioinformatics</source><year>2008</year><volume>24</volume><fpage>645</fpage><lpage>651</lpage><pub-id pub-id-type="pmid">18175768</pub-id></element-citation></ref><ref id="B15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Konagurthu</surname><given-names>A.S.</given-names></name><etal/></person-group><source>Piecewise linear approximation of protein structures using the principle of minimum message length</source><year>2011</year><volume>27</volume><fpage>i43i51</fpage></element-citation></ref><ref id="B16"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Labesse</surname><given-names>G.</given-names></name><etal/></person-group><article-title>P-SEA: a new efficient assignment of secondary structure from C alpha trace of proteins</article-title><source>Comput Appl Bio Sci</source><year>1997</year><volume>13</volume><fpage>291</fpage><lpage>295</lpage><pub-id pub-id-type="pmid">9183534</pub-id></element-citation></ref><ref id="B17"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lesk</surname><given-names>A.M.</given-names></name><name><surname>Hardman</surname><given-names>K.D.</given-names></name></person-group><article-title>Computer-generated schematic diagrams of protein structures</article-title><source>Science</source><year>1982</year><volume>216</volume><fpage>539</fpage><lpage>540</lpage><pub-id pub-id-type="pmid">7071602</pub-id></element-citation></ref><ref id="B18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Levitt</surname><given-names>M.</given-names></name><name><surname>Greer</surname><given-names>J.</given-names></name></person-group><article-title>Automatic identification of secondary structure in globular proteins</article-title><source>J. Mol. Biol.</source><year>1977</year><volume>114</volume><fpage>181</fpage><lpage>239</lpage><pub-id pub-id-type="pmid">909086</pub-id></element-citation></ref><ref id="B19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Majumdar</surname><given-names>I.</given-names></name><etal/></person-group><article-title>PALSSE: A program to delineate linear secondary structural elements from protein structures</article-title><source>BMC Bioinformatics</source><year>2005</year><volume>6</volume><fpage>202</fpage><pub-id pub-id-type="pmid">16095538</pub-id></element-citation></ref><ref id="B20"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Martin</surname><given-names>J.</given-names></name><etal/></person-group><article-title>Protein secondary structure assignment revisited: a detailed analysis of different assignment methods</article-title><source>BMC Struct. Biol.</source><year>2005</year><volume>5</volume><fpage>17</fpage><pub-id pub-id-type="pmid">16164759</pub-id></element-citation></ref><ref id="B21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pauling</surname><given-names>L.</given-names></name><name><surname>Corey</surname><given-names>R.</given-names></name></person-group><article-title>Configurations of polypeptide chains with favored orientations around single bonds: Two new pleated sheets</article-title><source>Proc. Natl. Acad. Sci. USA</source><year>1951</year><volume>37</volume><fpage>729</fpage><lpage>740</lpage><pub-id pub-id-type="pmid">16578412</pub-id></element-citation></ref><ref id="B22"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Richardson</surname><given-names>J.S.</given-names></name></person-group><article-title>The anatomy and taxonomy of protein structure</article-title><source>Adv. Protein Chem.</source><year>1981</year><volume>34</volume><fpage>167</fpage><lpage>339</lpage><pub-id pub-id-type="pmid">7020376</pub-id></element-citation></ref><ref id="B23"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Richards</surname><given-names>F.M.</given-names></name><name><surname>Kundrot</surname><given-names>C.E.</given-names></name></person-group><article-title>Identification of structural motifs from protein coordinate data: secondary structure and first-level supersecondary structure</article-title><source>Proteins</source><year>1988</year><volume>3</volume><fpage>71</fpage><lpage>78</lpage><pub-id pub-id-type="pmid">3399495</pub-id></element-citation></ref><ref id="B24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rissanen</surname><given-names>J.</given-names></name></person-group><article-title>A universal prior for integers and estimation by minimum description length</article-title><source>Ann. Stat.</source><year>1983</year><volume>11</volume><fpage>416</fpage><lpage>431</lpage></element-citation></ref><ref id="B25"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Robson</surname><given-names>B.</given-names></name><name><surname>Garnier</surname><given-names>J.</given-names></name></person-group><source>Introduction to Proteins and Protein Engineering.</source><year>1986</year><publisher-loc>Amsterdam</publisher-loc><publisher-name>Elsevier Science Ltd</publisher-name></element-citation></ref><ref id="B26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shannon</surname><given-names>C.E.</given-names></name></person-group><article-title>A mathematical theory of communication</article-title><source>Bell Syst. Technical Jrnl.</source><year>1948</year><volume>27</volume><fpage>379</fpage><lpage>423</lpage></element-citation></ref><ref id="B27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sklenar</surname><given-names>H.</given-names></name><etal/></person-group><article-title>Describing protein structure: a general algorithm yielding complete helicoidal parameters and unique overall axis</article-title><source>Proteins</source><year>1989</year><volume>6</volume><fpage>46</fpage><lpage>60</lpage><pub-id pub-id-type="pmid">2608659</pub-id></element-citation></ref><ref id="B28"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Srinivasan</surname><given-names>R.</given-names></name><name><surname>Rose</surname><given-names>G.D.</given-names></name></person-group><article-title>A physical basis for protein secondary structure</article-title><source>Proc. Natl. Acad. Sci. USA</source><year>1999</year><volume>96</volume><fpage>14258</fpage><lpage>14263</lpage><pub-id pub-id-type="pmid">10588693</pub-id></element-citation></ref><ref id="B29"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Taylor</surname><given-names>W.R.</given-names></name></person-group><article-title>Defining linear segments in protein structures</article-title><source>J. Mol. Biol.</source><year>2001</year><volume>310</volume><fpage>1135</fpage><lpage>1150</lpage><pub-id pub-id-type="pmid">11502001</pub-id></element-citation></ref><ref id="B30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wallace</surname><given-names>C.S.</given-names></name><name><surname>Boulton</surname><given-names>D.M.</given-names></name></person-group><article-title>An information measure for classification</article-title><source>Comput. J.</source><year>1968</year><volume>11</volume><fpage>185</fpage><lpage>194</lpage></element-citation></ref><ref id="B31"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Wallace</surname><given-names>C.S.</given-names></name></person-group><source>Statistical and Inductive Inference using Minimum Message Length.</source><year>2005</year><publisher-name>Information Science and Statistics. SpringerVerlag</publisher-name></element-citation></ref><ref id="B32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>W.</given-names></name><etal/></person-group><article-title>Assessing secondary structure assignment of protein structures by using pairwise sequence-alignment benchmarks</article-title><source>Proteins</source><year>2008</year><volume>71</volume><fpage>61</fpage><lpage>67</lpage><pub-id pub-id-type="pmid">17932927</pub-id></element-citation></ref></ref-list></back></article>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>Molecular Diversity Preservation International (MDPI)</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">22736971</article-id><article-id pub-id-type="pmc">3376580</article-id><article-id pub-id-type="doi">10.3390/s120302667</article-id><article-id pub-id-type="publisher-id">sensors-12-02667</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Using SRAM Based FPGAs for Power-Aware High Performance Wireless Sensor Networks</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Valverde</surname><given-names>Juan</given-names></name><xref ref-type="corresp" rid="c1-sensors-12-02667"><sup>*</sup></xref></contrib><contrib contrib-type="author"><name><surname>Otero</surname><given-names>Andres</given-names></name></contrib><contrib contrib-type="author"><name><surname>Lopez</surname><given-names>Miguel</given-names></name></contrib><contrib contrib-type="author"><name><surname>Portilla</surname><given-names>Jorge</given-names></name></contrib><contrib contrib-type="author"><name><surname>de la Torre</surname><given-names>Eduardo</given-names></name></contrib><contrib contrib-type="author"><name><surname>Riesgo</surname><given-names>Teresa</given-names></name></contrib><aff id="af1-sensors-12-02667">Centro de Electronica Industrial, Universidad Politecnica de Madrid, Jose Gutierrez Abascal 2, Madrid 28006, Spain; E-Mails: <email>joseandres.otero@upm.es</email> (A.O.); <email>miguel.lopezl@alumnos.upm.es</email> (M.L.); <email>jorge.portilla@upm.es</email> (J.P.); <email>eduardo.delatorre@upm.es</email> (E.T.); <email>teresa.riesgo@upm.es</email> (T.R.)</aff></contrib-group><author-notes><corresp id="c1-sensors-12-02667"><label>*</label>Author to whom correspondence should be addressed; E-Mail: <email>juan.valverde@upm.es</email>; Tel.: +34-913-363-191; Fax: +34-915-645-966.</corresp></author-notes><pub-date pub-type="collection"><year>2012</year></pub-date><pub-date pub-type="epub"><day>28</day><month>2</month><year>2012</year></pub-date><volume>12</volume><issue>3</issue><fpage>2667</fpage><lpage>2692</lpage><history><date date-type="received"><day>2</day><month>12</month><year>2011</year></date><date date-type="rev-recd"><day>23</day><month>12</month><year>2011</year></date><date date-type="accepted"><day>22</day><month>2</month><year>2012</year></date></history><permissions><copyright-statement>&#x000a9; 2012 by the authors; licensee MDPI, Basel, Switzerland</copyright-statement><copyright-year>2012</copyright-year><license><license-p><!--CREATIVE COMMONS-->This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution license (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/3.0/">http://creativecommons.org/licenses/by/3.0/</ext-link>).</license-p></license></permissions><abstract><p>While for years traditional wireless sensor nodes have been based on ultra-low power microcontrollers with sufficient but limited computing power, the complexity and number of tasks of today&#x02019;s applications are constantly increasing. Increasing the node duty cycle is not feasible in all cases, so in many cases more computing power is required. This extra computing power may be achieved by either more powerful microcontrollers, though more power consumption or, in general, any solution capable of accelerating task execution. At this point, the use of hardware based, and in particular FPGA solutions, might appear as a candidate technology, since though power use is higher compared with lower power devices, execution time is reduced, so energy could be reduced overall. In order to demonstrate this, an innovative WSN node architecture is proposed. This architecture is based on a high performance high capacity state-of-the-art FPGA, which combines the advantages of the intrinsic acceleration provided by the parallelism of hardware devices, the use of partial reconfiguration capabilities, as well as a careful power-aware management system, to show that energy savings for certain higher-end applications can be achieved. Finally, comprehensive tests have been done to validate the platform in terms of performance and power consumption, to proof that better energy efficiency compared to processor based solutions can be achieved, for instance, when encryption is imposed by the application requirements.</p></abstract><kwd-group><kwd>wireless sensor networks (WSNs)</kwd><kwd>FPGA</kwd><kwd>dynamic and partial reconfiguration (DPR)</kwd><kwd>energy efficiency</kwd></kwd-group></article-meta></front><body><sec><label>1.</label><title>Introduction</title><p>WSNs have evolved dramatically since the first platform turned up ten years ago. Traditional applications are still being studied and improved while, at the same time, new approaches have appeared. So far, the most common applications were related to environmental care, agriculture [<xref ref-type="bibr" rid="b1-sensors-12-02667">1</xref>] or hazardous environment monitoring. Normally, these applications share some features such as low data rates, non-restrictive latency and low number of nodes, among others. For these reasons, the processing requirements per node are low, so tiny processors can be used. These low profile processors offer enough processing capabilities while offering ultra-low power consumption. The MSP430 microcontroller from Texas Instruments included in the TelosB [<xref ref-type="bibr" rid="b2-sensors-12-02667">2</xref>] platform from the University of California at Berkeley or the ATmega1281 used by Libelium in the Waspmote is an example of these.</p><p>On the contrary, as technology has evolved, different scenarios that require much more powerful processing units have appeared. As an example, traditional applications that require more nodes to cover wider areas have to deal with bigger amounts of raw data while latency remains a crucial matter. In addition, new applications such as video and image processing, have appeared within the WSN field, where the need of carrying out data compression or encryption algorithms also requires the use of much more powerful processors with higher power consumption. Due to these energy demands, new design requirements must be taken into account. Higher processing speed, larger memory, etc., are needed, where power consumption is still one of the main concerns for the WSN designer. This work provides the complete design of a new much more powerful processing layer for the Cookies, a wireless sensor node proposed by the authors (detailed in [<xref ref-type="bibr" rid="b3-sensors-12-02667">3</xref>]), in order to adapt the platform to the new high performance application requirements.</p><p>One solution could be the inclusion of more powerful microcontrollers [<xref ref-type="bibr" rid="b4-sensors-12-02667">4</xref>]. This might be suitable for some applications, since they offer a good trade-off between price, size and programming flexibility. Nevertheless, when facing very intensive tasks, the computing time can be very high leading to a non-efficient solution in terms of energy consumption. A better solution can be achieved using Digital Signal Processors (DSPs). However, even though the computing time can be reduced compared to a standard microcontroller, it is still very high, so it is difficult to keep power consumption at acceptable levels for WSNs.</p><p>On the other hand, novel solutions can be achieved considering the specific features of WSN applications. Thus, the standard working profile of a WSN has a very low duty cycle (1%&#x02013;10%). The node is awake only during the time concerning for carrying out measurements and doing some operations [<xref ref-type="bibr" rid="b5-sensors-12-02667">5</xref>&#x02013;<xref ref-type="bibr" rid="b7-sensors-12-02667">7</xref>]. Then, the node is taken to a power down or sleep mode where power consumption should be close to zero. Due to this reason, very quick processing engines are very suitable for these working profiles leading to very efficient solutions in terms of energy consumption by reducing processing time.</p><p>The best way to provide this very high speed processing capabilities is the use of hardware based systems. FPGAs and ASICs share the capability of doing tasks in parallel. This fact can decrease the computing time sharply so the node can be in sleep mode for longer periods of time. However, the use of ASICs in WSNs is not always suitable due to the lack of flexibility and the huge design time and cost, at least in the prototyping stage. Due to the reasons above, FPGAs are presented as a very suitable solution for high performance WSN applications. In <xref ref-type="fig" rid="f1-sensors-12-02667">Figure 1</xref>, a theoretical comparison of the working profile between an FPGA and a microcontroller is shown.</p><p>While the time needed by the FPGA to carry out a certain task usually falls a long way short of the time needed by purely software based solutions, the main drawback is the fact that FPGA configuration time (time used to configure the device after a sleeping period) is significant compared to the computing time. One of the main contributions of this work is to prove that for an actual high-performance WSN node implementation the addition of both configuration and processing times is still lower than the time the microcontroller requires to carry out the same task. This assertion is only true when dealing with complex algorithms where the computing time needed for the microcontroller is bigger than the configuration time the FPGA needs. Moreover, the configuration time of the FPGA depends on the size of the bitstream file (file with information about the configuration) and it can vary from one application to another. In this paper the possibility of compressing bitstream files or loading partial ones is also exploited.</p><p>Furthermore, the use of FPGAs allows Partial and Dynamic Reconfiguration (DPR) which has many advantages when working with wireless sensor nodes. The possibility of adapting the system functionality loading new blocks at run time in a very fast way, when working with changeable environments, opens up new opportunities. Moreover, the reduction in size of a partial bitstream allows the file to be easily sent through the network via radio. The capability of configuring only the needed hardware blocks allows the implementation of energy saving methodologies such as start-up sequences [<xref ref-type="bibr" rid="b8-sensors-12-02667">8</xref>], fast configuration, <italic>etc</italic>.</p><p>The implementation of these techniques may not be enough to reach acceptable values of power consumption. Even though the FPGA may be working in a very efficient way, the rest of the components will consume energy even when they are not needed. In this work, a design divided into seven different power islands that can be powered separately is presented. In this way, only the components needed are powered while the rest remain powered off.</p><p>It is not the aim of this work to compare our proposed solution with ultra-low power WSN platforms since the application scope is completely different. This way, a trade-off between low energy consumption and high performance capabilities must be found. Rather, the main goal of this work is to show that by using both hardware acceleration and power management strategies, it is possible to obtain high performance nodes with power consumption levels in the range of WSN applications.</p><p>The rest of the paper is organized as follows: in Section 2, the state-of-the-art is reviewed, while Section 3 deals with all the details of the proposed architecture. In Section 4 different power management strategies are discussed. In Section 5 all the results and measurements are shown to illustrate the platform validation. To finish, some conclusions are given and future work proposed.</p></sec><sec><label>2.</label><title>Related Work</title><p>The complexity of the applications faced by WSNs is increasing, changing node requirements accordingly. This is the context where high performance emerges as an enabling technology for WSNs. Most of these scenarios are driven by the integration of multimedia sensors like low-power video cameras or microphones. WSNs that include video, audio and still image processing capabilities are known as Wireless Multimedia Sensor Networks (WMSN). Surveys concerning WMSN architectures are offered in [<xref ref-type="bibr" rid="b9-sensors-12-02667">9</xref>,<xref ref-type="bibr" rid="b10-sensors-12-02667">10</xref>]. According to [<xref ref-type="bibr" rid="b10-sensors-12-02667">10</xref>], WMSN applications can be classified into five groups: Surveillance, Traffic Monitoring and Enforcement, Personal and Health Care, Gaming and Environmental and finally, Industrial. Surveillance is an example of a traditional application field where the increase of node processing capabilities can lead to revolutionary changes on the applications. While traditional approaches were limited to the detection of trespassers on border perimeters or moving objects in target areas, platforms with enhanced capabilities, like the one provided in this work, allow envisioning advance features like identity and location tracking, and foresee the use of WSNs to locate missing people, identifying criminals or detect relevant activities [<xref ref-type="bibr" rid="b11-sensors-12-02667">11</xref>&#x02013;<xref ref-type="bibr" rid="b14-sensors-12-02667">14</xref>]. Personal care applications that use WSNs can also break with the current state-of-the-art, including actual telemedicine and a complete patient monitoring, above traditional monitoring of simple body&#x02019;s parameters. For instance, in [<xref ref-type="bibr" rid="b15-sensors-12-02667">15</xref>] a complete ECC monitoring scheme is shown. The non-intrusive study of people&#x02019;s behavior, mainly of elder people suffering dementia, has also been reported in the state-of-the-art [<xref ref-type="bibr" rid="b16-sensors-12-02667">16</xref>,<xref ref-type="bibr" rid="b17-sensors-12-02667">17</xref>]. Regarding to environmental and industrial fields, high performance WSNs might be applied to support full manufacturing processes, including quality control relying on artificial vision techniques. On the other hand, gaming is an example of a novel application field, where 3D environmental virtualization with WSNs [<xref ref-type="bibr" rid="b18-sensors-12-02667">18</xref>,<xref ref-type="bibr" rid="b19-sensors-12-02667">19</xref>] allows the evolution from current networking games to future pervasive approaches.</p><p>The architectural changes of wireless sensor nodes are not only caused by the inclusion of new sensors, but also by the toughening of traditional node constraints such as maximum latency, number of nodes or bandwidth. Besides, the increase of security challenges has to be considered as well, as can be seen in [<xref ref-type="bibr" rid="b20-sensors-12-02667">20</xref>,<xref ref-type="bibr" rid="b21-sensors-12-02667">21</xref>], including the implementation of outstanding encryption algorithms, like ECC [<xref ref-type="bibr" rid="b22-sensors-12-02667">22</xref>,<xref ref-type="bibr" rid="b23-sensors-12-02667">23</xref>], which were originally considered unfeasible for constrained WSNs. For instance [<xref ref-type="bibr" rid="b24-sensors-12-02667">24</xref>], deals with data-mining for WSNs while [<xref ref-type="bibr" rid="b25-sensors-12-02667">25</xref>] addresses distribute multimedia source coding.</p><p>Nevertheless, introducing FPGAs in wireless sensor nodes to deal with high demanding scenarios is not a novel approach in the state-of-the-art. Thus, in [<xref ref-type="bibr" rid="b26-sensors-12-02667">26</xref>] the authors introduced a Spartan 3E prototype board as a high performance coprocessor attached to an external ZigBee transceiver. The use case reported in the work was a hyper-chaos encryption engine. Similar approaches using off-the-shelf FPGA boards are offered in [<xref ref-type="bibr" rid="b27-sensors-12-02667">27</xref>&#x02013;<xref ref-type="bibr" rid="b30-sensors-12-02667">30</xref>], this last one being oriented towards visual sensors. These previous approaches prove that including reconfigurable devices in WSNs offer certain benefits in terms of flexibility or performance. However, despite being valid for proof of concept demonstration, existing approaches are far from showing actual WSN node architectures, leaving out important issues such as power consumption, power management or the integration of sensor devices, among others. By contrast, the development of a complete FPGA based node is provided in [<xref ref-type="bibr" rid="b31-sensors-12-02667">31</xref>], including a low performance Spartan 2E. The full node including the communication circuitry is integrated in a 25 mm &#x000d7; 25 mm board. The Cookies platform, which is the base of the processing layer shown in this work, follows the same approach [<xref ref-type="bibr" rid="b3-sensors-12-02667">3</xref>] including a Spartan 3 or an Actel Igloo FPGA in different versions.</p><p>Regarding hardware reconfiguration, other solutions have been also proposed in the state-of-the-art. In [<xref ref-type="bibr" rid="b32-sensors-12-02667">32</xref>], a reconfigurable node that includes a low-power flash-based FPGA is explained. The authors overcome the dynamic reconfiguration problems of the flash-based devices by having a virtual layer on top of the logic one, which enables different blocks of the system depending on the run-time needs. In this case, dynamic reconfiguration is emulated, since all the blocks already exist in the logic although they can be used or not. Furthermore, some approaches including Dynamic and Partial Reconfiguration using SRAM-based devices have been proposed. In [<xref ref-type="bibr" rid="b33-sensors-12-02667">33</xref>], a platform called MicrelEye is proposed. This platform uses an FPSLIC configurable platform that includes a small (40k gates) FPGA and an ATMEL microcontroller. In spite of the small area of the device, this is an interesting approach, evidencing the flexibility offered by configurability, and its application to image sensing. In [<xref ref-type="bibr" rid="b34-sensors-12-02667">34</xref>], a Virtex-4 FPGA is used to implement a dynamically reconfigurable sensor node. This work is focused on the internal design of the FPGA architecture, including a reconfigurable Kalman Filter to remove noisy samples during data acquisition. The results obtained show the suitability of this technique to deal with flexible requirements. However, details about the node architecture or dynamic and partial reconfiguration impact on power management or start-up time are not included in the work. Also the original Cookie platform has been featured with dynamic and partial reconfiguration, using an external processor, as shown in [<xref ref-type="bibr" rid="b35-sensors-12-02667">35</xref>].</p><p>In this work, an integrated design of an SRAM FPGA based high performance node including not only a high performance FPGA, but also power management and monitoring circuitries, external memories and conditioning circuitry for external sensors is proposed. Besides, power management strategies and a dynamic and partial reconfiguration mechanism are also proposed, integrating efficiently dynamic reconfiguration features within the node. Actual measurements of the architectural performance are also shown, comparing them with WSNs traditional software based approaches for cryptographic applications.</p></sec><sec><label>3.</label><title>Node Architecture: HiReCookie</title><p>As it was mentioned before, the adaptation of the Cookie WSN node to comply with the requirements imposed by high performance applications is faced in this work. In [<xref ref-type="bibr" rid="b3-sensors-12-02667">3</xref>], the Cookies architecture is explained in detail. To summarize, some information about the node architecture is explained below. The Cookie node consists of four different layers:
<list list-type="bullet"><list-item><p>Sensing layer: it includes conditioning circuits for both digital and analog sensors. The output signal of these conditioning circuits goes through the vertical connectors to the processing layer. There are few different versions of this layer with different sensors: accelerometer, video camera, air temperature, humidity, strain gauge, carbon monoxide, carbon dioxide, oxygen, water temperature and pH.</p></list-item><list-item><p>Power supply layer: it is the power source of the node. The node can be powered from an USB cable, lithium or AA batteries or directly from the mains if it is necessary.</p></list-item><list-item><p>Communication layer: it includes the radio module to communicate data between nodes. It can be either a ZigBee or a Bluetooth module. In the case of the ZigBee module, different frequencies are available (2.4 GHz and 868 MHz).</p></list-item><list-item><p>Processing layer: it is the <italic>brain</italic> of the platform. It is the layer in charge of processing all the information given by the sensors and the radio module. It includes an FPGA and a microcontroller that changes depending on each version. The first version of the processing layer of the Cookies includes a low-cost and low-performance Spartan 3 FPGA, together with an external microprocessor (ADuC841). In this previous version, the FPGA is in charge of interfacing with different sensors and carrying out simple preprocessing tasks. In turn, the external microprocessor executes the main node functions. Despite of the inclusion of an FPGA, the processing capabilities of the node were limited, and therefore, in this work its capabilities are extended. Finally, other version of the processing board including an ultra-low-power microprocessor (TI MSP430 family) and an ultra-low power FPGA (Actel Igloo) has been previously implemented, and is used as a reference in this work.</p></list-item></list></p><p>The modularity of the platform can be seen in <xref ref-type="fig" rid="f2-sensors-12-02667">Figure 2</xref>. The vertical connectors have two main goals: acting as a join point between layers and connecting all the signals from one layer to the other. In this way, it is possible to change every layer separately if different sensors, communication modules, power supply sources, <italic>etc</italic>. are needed. This is one of the main features of this platform and can be very useful when adapting it to different requirements and scenarios. Thanks to this modularity, even though the processing layer is completely redesigned in this work, the others can be reused without further changes.</p><sec><label>3.1.</label><title>Processing Layer Architecture</title><p>The convenience of using hardware based systems to face those strict requirements was already discussed in previous sections. In this case, a Spartan 6 XC6SLX150-2 with FGG484 package is the one that better matches the requirements. This is a last generation FPGA with competitive power consumption and price. It has 147,447 logic cells in a package of 484 I/O ports divided into four banks, enough to place all the hardware modules and external peripheral controllers needed for the applications. Even though the speed grade chosen is (&#x02212;2), the package is compatible with the lower power version with speed grade (&#x02212;1) that can save up to 40% of the energy by only reducing 20% of the speed, according to the data given by the manufacturer (this will be implemented in future work).</p><sec><label>3.1.1.</label><title>Flash Memory</title><p>A non-volatile memory has been included in the node, due to four main reasons:
<list list-type="bullet"><list-item><p>To store sensor data to be processed and sent through the network.</p></list-item><list-item><p>To store program data to be used by the embedded processor.</p></list-item><list-item><p>To work as the configuration bitstream source for the FPGA, after a switch off period.</p></list-item><list-item><p>To store partial bitstreams corresponding to different hardware modules, which are configured in the device at run-time only when they are required.</p></list-item></list></p><p>According to the proposed power management strategies described in Section 4, all the components included in the node will be switched off during their sleep periods. One of the drawbacks of using an RAM-based FPGA is the fact that it does not keep its configuration when the power supply is cut off. Therefore, it is necessary to store an initial bitstream in a non-volatile device. In this case, a flash memory has been selected. In this way, using an automatic configuration mode (Master BPI Mode), the bitstream is automatically downloaded into the FPGA once both devices are powered on.</p><p>In order to work as the initial bitstream source for the FPGA, the memory must be connected to the dedicated configuration pins that are in banks 1 and 2. Nevertheless, the memory will also work as a storage device for other kind of information, so it needs to be accessible through another controller as well. Due to the restrictions imposed by the virtual architecture (the internal architecture within the FPGA), explained in the following section, the memory controller cannot be placed close to this I/O banks since it is within the reconfigurable area, so two different connections will be required for this memory.</p><p>The memory device selected is a Numonyx Strata flash Embedded Memory (P30) model JS28F128P30B85. This is a NOR flash memory recommended by Xilinx with 128 Mbits of capacity. It can be powered with 1.8 V which matches perfectly well with the rest of the power rails. The initial access time is 85 ns working at 52 MHz.</p></sec><sec><label>3.1.2.</label><title>RAM Memory</title><p>According to the methodology proposed in the present work, energy savings are increased by speeding up the processing. Due to this fact, a RAM memory has been also included in the node to allow fast information accesses by the embedded processor. Partial and dynamic reconfiguration speed can also have benefits by using an external RAM memory to store partial bitstreams, compared to the use of the external flash.</p><p>The memory device chosen is the Mobile Low-Power SDR SDRAM MT48H16M16LF from Micron. This memory is a high-speed 256 Mbits, CMOS dynamic random-access memory. The speed grade chosen is (&#x02212;75) which corresponds to a 133 MHz with an access time of 5.4 ns. As well as in the case of the flash memory, it can be powered at 1.8 V.</p></sec><sec><label>3.1.3.</label><title>Analog to Digital Converter (ADC)</title><p>Analog to digital conversion is needed to process the signals from the sensors. Besides, the system has the ability of measure its own power consumption for each power island. The chosen ADC is the AD7928 from Analog devices. The AD7928 is an eight inputs device with a SPI interface to communicate with the FPGA. It is an 8-bit resolution converter with a throughput rate of 1 MSPS that can be powered at 3.3 V which matches the voltage ranges imposed by the sensors.</p></sec><sec><label>3.1.4.</label><title>Instrumentation Amplifier</title><p>In order to be able to measure power consumption of the system, every power island includes a shunt resistor (10 m&#x02126;) where the drop voltage is measured and adapted by an instrumentation amplifier. These values will be converted by the ADC and then processed by the FPGA. The selected amplifier is the INA333 from Texas Instruments. This is a micro-power, zero-drift, rail-to-rail out instrumentation amplifier. The way in which the power islands are organized will be explained in the Power management section.</p><p>The final PCB with all the components is shown in <xref ref-type="fig" rid="f3-sensors-12-02667">Figure 3</xref>. This is a 60 &#x000d7; 40 mm board composed of ten different layers and more than 150 decoupling capacitors, the majority of them 0201 package style. The board is a final prototype that matches with the physical requirements imposed by the sensor platform.</p><p>Testability is one of the most important requirements for the platform. The board includes two JTAG ports to test and program both the FPGA and the external microcontroller. Apart from that, an expansion board has been designed in order to have as much available connections as possible to be tested. This expansion board will be used for both, testing and powering, the platform in the lab.</p><p>Apart from the FPGA chosen, there is an external tiny microcontroller for energy management which will be detailed in the following section.</p></sec></sec><sec><label>3.2.</label><title>Virtual Architecture</title><p>After showing the general node architecture, further details about the FPGA internal virtual design are provided in this section. Virtual Architecture (VA) refers to the size and position of the reconfigurable areas, the communication among them, as well as between reconfigurable and static parts of the system. The term Virtual Architecture comes from the virtual memory concept, widely used in operating systems [<xref ref-type="bibr" rid="b36-sensors-12-02667">36</xref>]. In dynamically reconfigurable system design, hardware virtualization allows the execution of complex applications on hardware platforms with insufficient resources. It also allows hardware module relocation between different virtual reconfigurable modules, and even between different reconfigurable systems with similar features. The HiReCookie VA has been defined as follows. The inner FPGA resources have been divided into two different regions: on the right side (bank 1), the reconfigurable area is used to allocate changeable blocks at run-time and on the left side (bank 3) the static area where the modules which remain unchanged during the system life-time are placed. This division can be seen in <xref ref-type="fig" rid="f4-sensors-12-02667">Figure 4</xref>. According to the results obtained with the Xilinx ISE tool, the static part occupies approximately 60% of the total area of the FPGA, leaving the other 40% for the reconfigurable blocks.</p><sec><label>3.2.1.</label><title>Static Region</title><p>All the controllers required to interface with the external node components have been located in the static region. In addition, an embedded Microblaze processor working as the system controller has been implemented in this part. The processor will be in charge of executing software tasks within the node, since unlike the previous Cookie platform, a general purpose external microprocessor has not been included in the mote. The rest of the hardware controllers and the reconfigurable accelerators are connected to this processor using a Processor Local Bus (PLB), following a System on Chip (SoC) approach. Together with the Microblaze processor, the main blocks are detailed below:
<list list-type="bullet"><list-item><p>A reconfiguration module which makes use of the internal programming port (ICAP) to place reconfigurable blocks by writing into the associated areas of the reconfiguration memory of the FPGA. Further details of this block are included in Section 4.3.</p></list-item><list-item><p>Memory controllers, for both RAM and flash. MPMC and EMC_MCH modules given by Xilinx.</p></list-item><list-item><p>UART interface to communicate with the ZigBee communication module.</p></list-item><list-item><p>SPI interface to communicate with both, the external microcontroller and the ADC.</p></list-item><list-item><p>Several I2C and SPI peripheral modules for smart digital sensors interfacing.</p></list-item><list-item><p>Chip-Scope peripheral for debugging issues.</p></list-item></list></p><p>The 60% area usage of the FPGA can be reduced by erasing the debug modules and some of the sensor controllers that may not be needed in all the applications.</p></sec><sec><label>3.2.2.</label><title>Reconfigurable Region</title><p>The remaining FPGA resources have been included in the reconfigurable section. In this area, different hardware accelerators used only during certain time periods or under specific application conditions can be allocated. Thus, dynamic reconfiguration allows the implementation of complex systems by means of resource sharing, as well as its functional adaptation after deployment.</p><p>This area has been split up in several fixed regions called reconfigurable slots. As can be seen in <xref ref-type="fig" rid="f5-sensors-12-02667">Figure 5</xref>, some of these slots are connected using a streaming structure, while the others follow a bus-based approach. In both cases, those reconfigurable modules are connected with the static side using a bus-based approach. In order to dimension the reconfigurable slots, some blocks typically used in secure WSN applications have been tested. In <xref ref-type="table" rid="t1-sensors-12-02667">Table 1</xref>, two encryption algorithms and their space utilization are shown. Those values are given by the Xilinx ISE tool once the blocks are located inside the FPGA. According to the defined size, every slot may contain up to 960 slices, 12 Block RAM modules and 8 DSP48E processing blocks.</p><p>According to these values, the area division is shown in <xref ref-type="fig" rid="f5-sensors-12-02667">Figure 5</xref>, where the reconfigurable slots, the static region and the IOBs used are shown. Notice that each slot spans a full clock region and usable IOBs have been located in the static region. In addition, no slots have been included both at the top and the bottom of the right side of the FPGA, since ICAP and BSCAN ports, which might be accessible from the static region, are located in these areas.</p></sec></sec></sec><sec><label>4.</label><title>Power Management Strategies</title><p>The inclusion of high performance components implies an important handicap in terms of power consumption. Therefore, it is necessary to include very efficient power management strategies to comply with WSN requirements. Even though most of these components have their own power down modes, current consumption is still too high for a platform that needs to work unattended and powered by batteries. Power management strategies have a critical impact in three main situations:
<list list-type="order"><list-item><p>During sleeping time: turning all the components unused off to achieve zero current consumption.</p></list-item><list-item><p>During FPGA Configuration time: making it as fast as possible by reducing the initial bitstream file.</p></list-item><list-item><p>During run time: doing the calculations as fast as possible and turning on only the components that are strictly needed.</p></list-item></list></p><p>The first of the proposed strategies is the use of power islands, which is the mechanism that allows switching on the devices included in the board, only when it is required by the application.</p><sec><label>4.1.</label><title>Power Islands</title><p>The architecture proposed in this work is divided into seven different power islands that can be switched on and off separately depending on the system needs. Therefore, all the components can be switched off during sleeping time so that power consumption is sharply decreased. In order to control these islands, it has been necessary to include another component acting as a sentry to wake the system up when either a measurement or a calculation need to be done. The component chosen to carry out this duty is a tiny AVR microcontroller (ATtiny 2,313V). This is a 2 kb flash controller with very low price and size, and less than 0.1 &#x003bc;A of current consumption during power down mode. This tiny processor will control the enables of seven different power switches to master the island supplies. This component will not be in charge of taking any autonomous decisions. The FPGA informs the ATtiny about what to do before switching the islands off. Every island includes a shunt resistor for its instant power consumption monitoring. The power islands implemented are listed below:
<list list-type="bullet"><list-item><p>Island 1: FPGA core. Powered at 1.2 V.</p></list-item><list-item><p>Island 2: Sensor and communication boards. Powered at 3.3 V.</p></list-item><list-item><p>Island 3: ADC and power consumption circuitry. Powered at 3.3 V.</p></list-item><list-item><p>Island 4: RAM memory and bank 3 of the FPGA. Powered at 1.8 V.</p></list-item><list-item><p>Island 5: Flash memory and Banks 1, 2 of the FPGA. Powered at 1.8 V.</p></list-item><list-item><p>Island 6: External clock and Bank 0 of the FPGA. Powered at 3.3 V.</p></list-item><list-item><p>Island 7: Auxiliary logic of the FPGA. Powered at 2.5 V.</p></list-item></list></p><p>As it can be seen, four different power supply voltages are used: 1.2 V, 1.8 V, 2.5 V and 3.3 V. The FPGA core is the only one powered at 1.2 V and, therefore, it needs to be in an independent island. The 1.8 V supply is used to power banks 1, 2 and 3, the external memories and the external microcontroller. The external microcontroller is not included in the islands division since it needs to be to be always powered. During the initial configuration, the bitstream is downloaded from the flash memory through the dedicated configuration pins which are within banks 1 and 2. Due to this reason both the flash memory and banks 1 and 2 belongs to the same island. The RAM memory and bank 3 are placed together in a different island, because the RAM memory controller, which is a hard IP of the FPGA, is located on the left side. In the case of the 2.5 V supply, it needs to be turned on at every time the core is powered. This auxiliary logic is not included in the island of the core because the power supply value is different and because it is necessary to have separated power consumption measurements for both rails. Regarding the 3.3 V rail, independent islands have been included to allow switching the sensor and communication layers separately from the power consumption circuitry.</p></sec><sec><label>4.2.</label><title>Initial Bitstream Compression</title><p>The bitstream file is stored in the flash memory device, to carry out the initial reconfiguration after a switch off period. The size of that bitstream is very significant in terms of power consumption, since it is directly connected with the configuration time.</p><p>In <xref ref-type="table" rid="t2-sensors-12-02667">Table 2</xref>, sizes of two different bitstreams are shown. In the case of the compressed one, the reduction is done directly by the Xilinx tool with 60% of compression. Even though this is an important reduction, the compression can be still optimized. In this work, a methodology to improve the compression of the bitstream file has been also included, using similar strategies to those reported in [<xref ref-type="bibr" rid="b8-sensors-12-02667">8</xref>].</p><p>The followed approach is based on the fact that the FPGA is empty by default, that is, the bitstream is full of zeros. In this way, it is possible to erase them so that the size of the bitstream would be reduced without losing any information. The start point for this optimization can be either a total or a compressed bitstream. A basic configuration unit of the FPGA is called frame. Every frame consists of 65 words, so if the same frame is to be written a fixed number of times, it is quite consuming in terms of space. However, in the case of the compressed one, when a frame is repeated a certain number of times, the frame is stored in a register called Multiple Write Frame Register (MWFR) followed by a command to specify the frame address (FAR address). The procedure is shown in <xref ref-type="fig" rid="f6-sensors-12-02667">Figure 6</xref>.</p><p>Considering the structure of the compressed bitstream, the approach to reduce configuration time is to identify the empty frames and to erase the MWF commands. This strategy deletes all the redundant zeros regarding the CLBs information. The MWF command is not used for the BRAMs configuration, so it will be necessary to check frame by frame to erase the empty ones. These times have been measured using an oscilloscope.</p></sec><sec><label>4.3.</label><title>Dynamic and Partial Reconfiguration Engine</title><p>Apart from its possibilities in terms of flexibility, dynamic and partial reconfiguration (DPR) can be used to reach an energy efficient system. Efficiency is obtained by means of DPR thanks to resource sharing, but also considering that only those hardware modules required at each moment have to be configured in the device. Furthermore, more optimal hardware can be designed, if it is specifically done focusing on each situation, instead of addressing general purposes. In previous works [<xref ref-type="bibr" rid="b37-sensors-12-02667">37</xref>], the authors have already provided a reconfiguration engine for Spartan 6, which exploits reconfiguration capabilities using the Internal Configuration Access Port (ICAP) of the FPGA. The main feature of the block is its relocation capability, which means, the possibility of changing at run time the position of the reconfigurable blocks within the device. Thus, it is possible to allocate each reconfiguration engine in any empty slot in the reconfigurable region.</p></sec><sec><label>4.4.</label><title>Power Management Scenarios</title><p>The external processor will be in sleep mode (using its power save modes) until an external interruption or a timer wakes it up. The FPGA is linked to the ATtiny through a SPI connection. In this way, the embedded Microblaze can send the needed commands to inform the external microcontroller how it must be awakened before entering into sleep mode. A complete set of functions has been designed to define this communication. Therefore, the management of the islands can be selected only by changing the code of the Microblaze processor which is included in the bitstream file. The foreseen wake-up options are: an interrupt from the communication module, a sensor value bigger than certain threshold and timers. This way, different mechanisms have been implemented, as listed below:
<list list-type="bullet"><list-item><p>Scenario 1: before entering into sleep mode, the embedded processor sends a command through the SPI connection to order the ATtiny to wake the system up in case an interrupt from the radio is received. Then, the ATtiny switches all the islands off, including the FPGA, and enters in power down mode waiting for the external interruption to occur. During this period, only the external microcontroller, the communication module and the power supply board are powered on, being the power consumption 9 mA.</p></list-item><list-item><p>Scenario 2: before entering into sleep mode, the FPGA sends a command to the ATtiny to request switching on the communication module periodically in order to check if an interrupt from the radio arrives. Then, the ATtiny switches all the islands off and enters in power down mode waiting for the timer to occur. Until an external interrupt happens, the microcontroller is in power down mode and the communication module is also powered off, only the ATtiny and the power supply board are powered on, so the power consumption is in the order 10 &#x003bc;A.</p></list-item><list-item><p>Scenario 3: the communication module also has power down modes. In this way, it is possible to have the same case as in scenario 2 but instead of switching the module on and off, the ATtiny can change the mode periodically to check if the radio interrupt occurs. In this case, the power supply board, the ATtiny and the communication module are powered on, but the communication module is in power down mode as well as the ATtiny, so the power consumption is in the order of 11 &#x003bc;A.</p></list-item><list-item><p>Scenario 4: before entering into sleep mode, the Microblaze sends a command to the ATtiny to wake the system up in case an interrupt request from the analog comparator occurs. Then, the ATtiny switches all the islands off and enters in a sleep mode waiting for the external interrupt to occur. During this period, if the value in one of the analog sensors is bigger than the programmed threshold, the ATtiny wakes up so it can switch on any island needed. In this case, only the external microcontroller, the sensors layer and the power supply board are powered on, so the power consumption depends on the sensors used.</p></list-item><list-item><p>Scenario 5: before entering to sleep mode, the Microblaze sends a command to the ATtiny to request waking the system up periodically. Then, the ATtiny switches all the islands off and enters into a sleep mode until the timer interrupts. During this period, only the external microcontroller is in power down mode, and the power supply board is powered on, so the power consumption is in the order of 10 &#x003bc;A.</p></list-item></list></p><p>Once the system is recovered from sleep mode, the ATtiny can switch on only the islands that are strictly needed depending on the application, so the consumption can be also optimized during active time. Besides, when the FPGA is powered on, the ATtiny sends a register including the information of what is already powered on and why the system was powered on so that the FPGA can know all the information about the status of the rest of the components.</p></sec></sec><sec><label>5.</label><title>Platform Test and Validation</title><p>In this section, different tests and results are to be detailed. The purpose is to provide, by means of well-known application examples, both the computation power of the proposed mote, as well as its energy efficiency when facing very intensive computational tasks. The setup used for these tests can be seen in <xref ref-type="fig" rid="f7-sensors-12-02667">Figure 7</xref>. In order to obtain the consumption profile, an oscilloscope has been used to monitor the current consumption of the FPGA core using the output signal of the instrumentation amplifier of the first power island. The curves shown in this chapter represent only the power consumption of the FPGA core, so both the consumption of the auxiliary logic and the IOBs must be added. The consumption of these power islands is also monitored through the SPI block connected to the ADC. Therefore, the values to be added during run-time are 30 mA during configuration and 40 mA during computing time. During sleeping-time, all the islands are powered off, so the power consumption is 0 A in all the cases. As it can be seen on the figures, the value of the current consumption when the system is not powered has an offset. It appears because all the power measurements are done using the instrumentation amplifier. The offset of this amplifier is 21 mV when the current consumed by the island is 0 A.</p><p>The selected modules used to run on the FPGA are the SHA1 and MD5 encryption algorithms. Those algorithms are extendedly used in wireless environments to check message integrity and authentication. These algorithms are used as examples for the platform validation because they are algorithms used in real applications for secure WSNs. This way, real needs can be tested to demonstrate the feasibility of the theoretical proposals.</p><p>Both SHA1 and MD5 are implemented as independent hardware blocks and as software code running on the embedded processor. In both cases, the number of data blocks to be encrypted is configurable. This way, it is possible to evaluate the minimum number of data blocks from which hardware starts being worthy compared with software. As it will be seen below, the time needed to configure the FPGA with the initial bitstream is crucial to minimize power consumption, since this time is huge compared with the one needed for calculations.</p><p>Apart from different data blocks and bitstreams, these tests will also combine different wake-up policies such as the ones seen on the power management strategies section.</p><p>These validation tests show the high flexibility of the platform. The possibility of running different algorithms in hardware and software at the same time depending on each application scenario gives the chance of optimizing task scheduling and power efficiency. Besides, the debugging capabilities compared with previous versions of the Cookie node are drastically increased. The use of the JTAG port, both for hardware and software debugging, the use of the ChipScope module, or even the UART interface, have been essential for the correct development of the applications and lab tests.</p><p>All the different combinations are to be compared, while the same algorithms will be also tested in a low power version of the Cookie node that includes an MSP430 microcontroller.</p><p>The name of the different tests is coded as follows (1&#x02013;5):
<list list-type="order"><list-item><p><bold>SHA1</bold> or <bold>MD5</bold> encryption algorithm.</p></list-item><list-item><p><bold>HSW</bold> if the encryption algorithm is running on the platform Microblaze. <bold>HW</bold> if the encryption algorithm is running as a hardware block on the FPGA. <bold>SW</bold> if it is running on the MSP430 processor, in the low power consumption version of the Cookies.</p></list-item><list-item><p>Number of data blocks to be encrypted. Each block corresponds to 16 32-bit row data words.</p></list-item><list-item><p><bold>COMP</bold> if a compressed bitstream is being used or <bold>TOT</bold> in the case of the non-compressed one.</p></list-item><list-item><p>Depending on the wake-up policy used: <bold>ZB</bold> for the radio, <bold>TIMER(x)</bold> if it is using the timer every x seconds.</p></list-item></list></p><p>All the tests shown have been carried out using the final prototype facing real requirements in real cases. These results validate the theory shown in the introduction section, <xref ref-type="fig" rid="f1-sensors-12-02667">Figure 1</xref>.</p><sec><label>5.1.</label><title>SHA1 Module Testing</title><p>In this application scenario, the node is in sleep mode and awakening only for the encryption of a variable number of data blocks. All the different cases are shown as follows. Notice that power consumption in every figure is given in mV. This value must be divided by the gain of the instrumentation amplifier which is 3.22.</p></sec><sec><title>TEST 1: (SHA1, HSW, 128, TOT, TIMER (5))</title><p>The power consumption profile of the FPGA core is shown in <xref ref-type="fig" rid="f8-sensors-12-02667">Figure 8</xref>. On this oscilloscope image, the system is awakened every 5 s to encrypt 128 data blocks using the SHA1 algorithm. The time interval labeled 1 show the sleeping time of the node. The second period corresponds to power consumption during configuration, while the power consumption peak represents the actual FPGA activity. Numerical results are detailed in <xref ref-type="table" rid="t3-sensors-12-02667">Table 3</xref>. Even though the current peak is quite high, the power supply board uses an integrated DC to DC converter from Texas Instruments (TPS650243) which is capable of giving up to 1.6 A. Nevertheless, for these tests, as it was mentioned before, an expansion board and external power supplies have been used. The wave form labeled as D10 shows the triggers to measure the computing and configuration times.</p><p>This example shows how critical the configuration time can become. In this case this time is more than twice the value during computing time. Therefore, the main goal of the following tests is to improve this configuration by reducing the size of the initial bitstream as much as possible.</p></sec><sec><title>TEST 2: (SHA1, HSW, 128, COMP, TIMER (5))</title><p>The power consumption profile of the FPGA core for this test is shown in <xref ref-type="fig" rid="f9-sensors-12-02667">Figure 9</xref>. This case includes a compressed bitstream instead of a complete one. Numerical results are detailed in <xref ref-type="table" rid="t4-sensors-12-02667">Table 4</xref>.</p><p>In this case the power consumption during configuration time is halved due to the bitstream compression while the other areas remain unchanged. This is translated into important savings compared with the previous case (TEST 1).</p></sec><sec><title>TEST 3: (SHA1, HSW, 2000, COMP, TIMER (5))</title><p>By changing the number of data blocks to be encrypted each time the FPGA is awakening, the convenience of using hardware against software is studied. Therefore, <xref ref-type="fig" rid="f10-sensors-12-02667">Figure 10</xref> shows the power consumption profile of the FPGA core where 2,000 blocks are processed instead of 128. Numeric results are shown in <xref ref-type="table" rid="t5-sensors-12-02667">Table 5</xref>.</p><p>The enlargement of the consumption peak in the previous image shows how the encryption of 2,000 data blocks takes an extremely long time of 2.73 s, when SHA1 software code developed for the Microblaze is used. This implies a non-affordable power consumption of 140 mA during a long period of time. This computing time is sharply reduced using the hardware block, as it will be shown in the next test case.</p></sec><sec><title>TEST 4: (SHA1, HW, 2000, COMP, TIMER (2))</title><p>The consumption profile is shown in <xref ref-type="fig" rid="f11-sensors-12-02667">Figure 11</xref>. In this example unprocessed data buffers are created by the Microblaze. That is the reason why zone n&#x000b0; 2 in <xref ref-type="fig" rid="f12-sensors-12-02667">Figure 12</xref> appears. This time could be reduced by loading directly the hardware module and therefore decreasing the power consumption at run-time. Even having this additional time, the results are clearly improved compared with TEST 3, since power consumption per cycle is 15 times less in the case of Test 4.</p><p>The comparison between hardware and software when software is running in this platform is now clear. Nevertheless, software tests are still running inside the FPGA, so configuration time is also required. In addition, using an embedded Microblaze inside a high performance FPGA is a completely inefficient choice when only software is required. Thus, for the sake of correctness, SHA1 and MD5 have been also ported to a Cookie with a MSP430 microcontroller shown in <xref ref-type="fig" rid="f13-sensors-12-02667">Figure 13</xref>. This microcontroller is widely used in WSN like the TelosB platform [<xref ref-type="bibr" rid="b2-sensors-12-02667">2</xref>]. Numeric results can be seen in <xref ref-type="table" rid="t6-sensors-12-02667">Table 6</xref>.</p></sec><sec><title>TEST 5: (SHA1, SW, 2000, -, -)</title><p>In <xref ref-type="fig" rid="f14-sensors-12-02667">Figure 14</xref>, the microcontroller consumption profile is shown. The time necessary for the MSP430 to encrypt a data block is 7 ms. Time and power consumption to process 2000 and 10000 data blocks are shown in <xref ref-type="table" rid="t7-sensors-12-02667">Table 7</xref>.</p><p>These tests, using low power Cookies, have been carried out with the MSP430 running at 4 MHz and activating low power mode during sleep time (period 1 in <xref ref-type="fig" rid="f14-sensors-12-02667">Figure 14</xref>).</p></sec><sec><title>TEST 6: (SHA1, HW, 10000, COMP, ZB)</title><p>In the case of the encryption of 10,000 blocks using hardware implementation of the SHA1, all the results are shown in <xref ref-type="fig" rid="f15-sensors-12-02667">Figures 15</xref> and <xref ref-type="fig" rid="f16-sensors-12-02667">16</xref>.</p><p><xref ref-type="table" rid="t7-sensors-12-02667">Tables 7</xref> and <xref ref-type="table" rid="t8-sensors-12-02667">8</xref> show a comparison between both encryption algorithms. Even though SHA1 and MD5 are not very complex algorithms, for enough block sizes, the platform proposed in this work beats state-of-the-art WSN microcontrollers in terms of power efficiency.</p></sec><sec><label>5.2.</label><title>MD5 Module Testing</title><p>Apart from the SHA1 algorithm, the same tests have been done using the MD5. Two examples are shown in <xref ref-type="fig" rid="f17-sensors-12-02667">Figure 17</xref> and <xref ref-type="fig" rid="f18-sensors-12-02667">Figure 18</xref> to illustrate the comparison. The measurements in <xref ref-type="table" rid="t9-sensors-12-02667">Table 9</xref> show the execution time for both MD5 and SHA1 encryption engines in different cases. This information is also valid for the previous tests since the rest of the periods are approximately the same. When the application has to be adapted, like in this case, changing the encryption algorithm, thanks to the DPR feature of the node, not only software can be changed after deployment. Also hardware modules, which have been proved to be more efficient, can be easily loaded depending on the system needs at run time.</p></sec></sec><sec><label>6.</label><title>Conclusions and Future Work</title><p>In this work a high performance node architecture for demanding WSN applications based on a commercial SRAM-based FPGA is proposed. FPGA reconfiguration features increase node flexibility, while its hardware nature reduces execution times. Considering the periodic nature of typical WSNs&#x02019; tasks, together with power management strategies also proposed in this work, high power efficiency is achieved. Experiments have been carried out to validate the node behavior, as well as to quantify the benefits of including hardware components, compared with state-of-the-art low-performance software based solutions.</p><p>In the future work will be carried out in order to improve power management strategies, considering triggers coming from the radio interface, among others. Different sensor layers will be also attached to the platform, including a low-power CMOS camera to develop more advanced applications. More specifically, the objective is to develop a secure smart surveillance system, using a heterogeneous wireless sensor network topology. Each node will include video compression algorithms, both public and private key cryptography engines, as well as different scalar sensors.</p></sec></body><back><ref-list><title>References</title><ref id="b1-sensors-12-02667"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Corke</surname><given-names>P.</given-names></name><name><surname>Wark</surname><given-names>T.</given-names></name><name><surname>Jurdak</surname><given-names>R.</given-names></name><name><surname>Hu</surname><given-names>W.</given-names></name><name><surname>Valencia</surname><given-names>P.</given-names></name><name><surname>Moore</surname><given-names>D.</given-names></name></person-group><article-title>Environmental wireless sensor networks</article-title><source>Proc. IEEE</source><year>2010</year><volume>98</volume><fpage>1903</fpage><lpage>1918</lpage></element-citation></ref><ref id="b2-sensors-12-02667"><label>2.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Polastre</surname><given-names>J.</given-names></name><name><surname>Szewczyk</surname><given-names>R.</given-names></name><name><surname>Culler</surname><given-names>D.</given-names></name></person-group><article-title>Telos: Enabling ultra-low power wireless research</article-title><conf-name>Proceedings of the Information Processing in Sensor Networks</conf-name><conf-loc>Los Angeles, CA, USA</conf-loc><conf-date>25&#x02013;27 April 2005</conf-date><fpage>364</fpage><lpage>369</lpage></element-citation></ref><ref id="b3-sensors-12-02667"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Portilla</surname><given-names>J.</given-names></name><name><surname>de Castro</surname><given-names>A.</given-names></name><name><surname>de la Torre</surname><given-names>E.</given-names></name><name><surname>Riesgo</surname><given-names>T.</given-names></name></person-group><article-title>A Modular architecture for nodes in wireless sensor networks</article-title><source>J. Univ. Comput. Sci</source><year>2006</year><volume>12</volume><fpage>328</fpage><lpage>339</lpage></element-citation></ref><ref id="b4-sensors-12-02667"><label>4.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Hammel</surname><given-names>T.</given-names></name><name><surname>Rich</surname><given-names>M.</given-names></name></person-group><article-title>A higher capability sensor node platform suitable for demanding applications</article-title><conf-name>Proceedings of the Information Processing in Sensor Networks</conf-name><conf-loc>Cambridge, MA, USA</conf-loc><conf-date>25&#x02013;27 April 2007</conf-date><fpage>138</fpage><lpage>147</lpage></element-citation></ref><ref id="b5-sensors-12-02667"><label>5.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Dutta</surname><given-names>P.K.</given-names></name><name><surname>Culler</surname><given-names>D.</given-names></name></person-group><article-title>System software techniques for low-power operation in wireless sensor networks</article-title><conf-name>Proceedings of the IEEE/ACM International Conference on Computer-Aided Design</conf-name><conf-loc>Washington, DC, USA</conf-loc><conf-date>6&#x02013;10 November 2005</conf-date><fpage>925</fpage><lpage>932</lpage></element-citation></ref><ref id="b6-sensors-12-02667"><label>6.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Pinto</surname><given-names>A.</given-names></name><name><surname>Zhang</surname><given-names>Z.</given-names></name><name><surname>Dong</surname><given-names>X.</given-names></name><name><surname>Velipasalar</surname><given-names>S.</given-names></name><name><surname>Vuran</surname><given-names>M.C.</given-names></name><name><surname>Gursoy</surname><given-names>M.C.</given-names></name></person-group><article-title>Energy consumption and latency analysis for wireless multimedia sensor networks</article-title><conf-name>Proceedings of the IEEE Global Telecommunications Conference</conf-name><conf-loc>Miami, FL, USA</conf-loc><conf-date>6&#x02013;10 December 2010</conf-date><fpage>1</fpage><lpage>5</lpage></element-citation></ref><ref id="b7-sensors-12-02667"><label>7.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Braun</surname><given-names>L.</given-names></name><name><surname>Becke</surname><given-names>J.</given-names></name><name><surname>Glas</surname><given-names>B.</given-names></name><name><surname>Sander</surname><given-names>O.</given-names></name><name><surname>Stuckert</surname><given-names>V.</given-names></name><name><surname>Muller-Glaser</surname><given-names>K.D.</given-names></name><name><surname>Becker</surname><given-names>J.</given-names></name></person-group><article-title>Car-to-car communication security on reconfigurable hardware</article-title><conf-name>Proceedings of the IEEE Vehicular Technology Conference</conf-name><conf-loc>Barcelona, Spain</conf-loc><conf-date>26&#x02013;29 April 2009</conf-date><fpage>1</fpage><lpage>5</lpage></element-citation></ref><ref id="b8-sensors-12-02667"><label>8.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>H&#x000fc;bner</surname><given-names>M.</given-names></name><name><surname>Meyer</surname><given-names>J.</given-names></name><name><surname>Sander</surname><given-names>O.</given-names></name></person-group><article-title>Fast sequential FPGA startup based on partial and dynamic reconfiguration</article-title><conf-name>Proceedings of the IEEE Computer Society Annual Symposium on VLSI</conf-name><conf-loc>Lixouri, Kefalonia, Greece</conf-loc><conf-date>5&#x02013;7 July 2010</conf-date><fpage>190</fpage><lpage>194</lpage></element-citation></ref><ref id="b9-sensors-12-02667"><label>9.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Harjito</surname><given-names>B.</given-names></name><name><surname>Han.</surname><given-names>S.</given-names></name></person-group><article-title>Wireless multimedia sensor networks applications and security challenges</article-title><conf-name>Proceedings of the International Conference on Broadband, Wireless Computing, Communication and Applications</conf-name><conf-loc>Fukuoka, Japan</conf-loc><conf-date>4&#x02013;6 November 2010</conf-date><fpage>842</fpage><lpage>846</lpage></element-citation></ref><ref id="b10-sensors-12-02667"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Akyildiz</surname><given-names>I.F.</given-names></name><name><surname>Melodia</surname><given-names>T.</given-names></name><name><surname>Chowdhury</surname><given-names>K.R.</given-names></name></person-group><article-title>Wireless multimedia sensor networks: Applications and testbeds</article-title><source>Proc. IEEE</source><year>2008</year><volume>96</volume><fpage>1588</fpage><lpage>1605</lpage></element-citation></ref><ref id="b11-sensors-12-02667"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>He</surname><given-names>T.</given-names></name><name><surname>Krishnamurthy</surname><given-names>S.</given-names></name><name><surname>Luo</surname><given-names>L.</given-names></name><name><surname>Yan</surname><given-names>T.</given-names></name><name><surname>Gu</surname><given-names>L.</given-names></name><name><surname>Stoleru</surname><given-names>R.</given-names></name><name><surname>Zhou</surname><given-names>G.</given-names></name><name><surname>Cao</surname><given-names>Q.</given-names></name><name><surname>Vicaire</surname><given-names>P.</given-names></name><name><surname>Stankovic</surname><given-names>J.A.</given-names></name><etal/></person-group><article-title>VigilNet: An integrated sensor network system for energy-efficient surveillance</article-title><source>ACM Trans. Sens. Netw</source><year>2006</year><volume>2</volume><fpage>1</fpage><lpage>38</lpage></element-citation></ref><ref id="b12-sensors-12-02667"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tseng</surname><given-names>Y.</given-names></name><name><surname>Wang</surname><given-names>Y.</given-names></name><name><surname>Cheng</surname><given-names>K.</given-names></name><name><surname>Hsieh</surname><given-names>Y.</given-names></name></person-group><article-title>iMouse: An integrated mobile surveillance and wireless sensor system</article-title><source>Computer</source><year>2007</year><volume>40</volume><fpage>60</fpage><lpage>66</lpage></element-citation></ref><ref id="b13-sensors-12-02667"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>D.</given-names></name><name><surname>Ci</surname><given-names>S.</given-names></name><name><surname>Luo</surname><given-names>H.</given-names></name><name><surname>Ye</surname><given-names>Y.</given-names></name><name><surname>Wang</surname><given-names>H.</given-names></name></person-group><article-title>Video surveillance over wireless sensor and actuator networks using active cameras</article-title><source>IEEE Trans. Autom. Control</source><year>2011</year><volume>56</volume><fpage>2467</fpage><lpage>2472</lpage></element-citation></ref><ref id="b14-sensors-12-02667"><label>14.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Kulkarni</surname><given-names>P.</given-names></name><name><surname>Ganesan</surname><given-names>D.</given-names></name><name><surname>Shenoy</surname><given-names>P.</given-names></name><name><surname>Lu</surname><given-names>Q.</given-names></name></person-group><article-title>SensEye: A multi-tier camera sensor network</article-title><conf-name>Proceedings of the 13th annual ACM International Conference on Multimedia</conf-name><conf-loc>New York, NY, USA</conf-loc><conf-date>6&#x02013;11 November 2006</conf-date><fpage>229</fpage><lpage>238</lpage></element-citation></ref><ref id="b15-sensors-12-02667"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dilmaghani</surname><given-names>R.S.</given-names></name><name><surname>Bobarshad</surname><given-names>H.</given-names></name><name><surname>Ghavami</surname><given-names>M.</given-names></name><name><surname>Choobkar</surname><given-names>S.</given-names></name><name><surname>Wolfe</surname><given-names>C.</given-names></name></person-group><article-title>Wireless sensor networks for monitoring physiological signals of multiple patients</article-title><source>IEEE Trans. Biomed. Circuits Syst</source><year>2011</year><volume>5</volume><fpage>347</fpage><lpage>356</lpage></element-citation></ref><ref id="b16-sensors-12-02667"><label>16.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Avvenuti</surname><given-names>M.</given-names></name><name><surname>Baker</surname><given-names>C.</given-names></name><name><surname>Light</surname><given-names>J.</given-names></name><name><surname>Tulpan</surname><given-names>D.</given-names></name><name><surname>Vecchio.</surname><given-names>A.</given-names></name></person-group><article-title>Non-intrusive patient monitoring of alzheimer&#x02019;s disease subjects using wireless sensor networks</article-title><conf-name>Proceedings of the World Congress on Privacy, Security, Trust and the Management of e-Business</conf-name><conf-loc>Washington, DC, USA</conf-loc><conf-date>25&#x02013;27 August 2009</conf-date><fpage>161</fpage><lpage>165</lpage></element-citation></ref><ref id="b17-sensors-12-02667"><label>17.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Marzencki</surname><given-names>M.</given-names></name><name><surname>Lin</surname><given-names>P.</given-names></name><name><surname>Cho</surname><given-names>T.</given-names></name><name><surname>Guo</surname><given-names>J.</given-names></name><name><surname>Ngai</surname><given-names>B.</given-names></name><name><surname>Kaminska</surname><given-names>B.</given-names></name></person-group><article-title>Remote health, activity, and asset monitoring with wireless sensor networks</article-title><conf-name>Proceedings of the IEEE International Conference on e-Health Networking Applications and Services</conf-name><conf-loc>Columbia, MU, USA</conf-loc><conf-date>13&#x02013;15 June 2011</conf-date><fpage>98</fpage><lpage>101</lpage></element-citation></ref><ref id="b18-sensors-12-02667"><label>18.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Nedelcu</surname><given-names>A.V.</given-names></name><name><surname>Talaba</surname><given-names>D.</given-names></name><name><surname>Stoianovici</surname><given-names>V.C.</given-names></name><name><surname>Machedon-Pisu</surname><given-names>M.</given-names></name><name><surname>Szekely</surname><given-names>I.</given-names></name></person-group><article-title>Conceptual integration of wireless sensor networks with 3D virtual environments</article-title><conf-name>Proceedings of the IEEE International Conference on Wireless Communications, Networking and Information Security</conf-name><conf-loc>Beijing, China</conf-loc><conf-date>25&#x02013;27 June 2010</conf-date><fpage>446</fpage><lpage>450</lpage></element-citation></ref><ref id="b19-sensors-12-02667"><label>19.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>W.</given-names></name><name><surname>Aghajan</surname><given-names>H.</given-names></name><name><surname>Kleihorst</surname><given-names>R.</given-names></name></person-group><article-title>Real-time human posture reconstruction in wireless smart camera networks</article-title><conf-name>Proceedings of the International Conference on Information Processing in Sensor Networks</conf-name><conf-loc>St. Louis, MO, USA</conf-loc><conf-date>22&#x02013;24 April 2008</conf-date><fpage>321</fpage><lpage>331</lpage></element-citation></ref><ref id="b20-sensors-12-02667"><label>20.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Grieco</surname><given-names>L.A.</given-names></name><name><surname>Boggia</surname><given-names>G.</given-names></name><name><surname>Sicari</surname><given-names>S.</given-names></name><name><surname>Colombo</surname><given-names>P.</given-names></name></person-group><article-title>Secure wireless multimedia sensor networks: A survey</article-title><conf-name>Proceedings of the International Conference on Mobile Ubiquitous Computing, Systems, Services and Technologies</conf-name><conf-loc>Sliema, Malta</conf-loc><conf-date>11&#x02013;16 October 2009</conf-date><fpage>194</fpage><lpage>201</lpage></element-citation></ref><ref id="b21-sensors-12-02667"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yong</surname><given-names>W.</given-names></name><name><surname>Attebury</surname><given-names>G.</given-names></name><name><surname>Ramamurthy</surname><given-names>B.</given-names></name></person-group><article-title>A survey of security issues in wireless sensor networks</article-title><source>IEEE Commun. Surv. Tutor</source><year>2006</year><volume>8</volume><fpage>2</fpage><lpage>23</lpage></element-citation></ref><ref id="b22-sensors-12-02667"><label>22.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Stelte</surname><given-names>B.</given-names></name></person-group><article-title>Toward development of high secure sensor network nodes using an fpga-based architecture</article-title><conf-name>Proceedings of the International Wire &#x00026; Cable Symposium</conf-name><conf-loc>Istanbul, Turkey</conf-loc><conf-date>June 28&#x02013;2 July 2010</conf-date><fpage>539</fpage><lpage>543</lpage></element-citation></ref><ref id="b23-sensors-12-02667"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Portilla</surname><given-names>J.</given-names></name><name><surname>Otero</surname><given-names>A.</given-names></name><name><surname>de la Torre</surname><given-names>E.</given-names></name></person-group><article-title>Adaptable security in wireless sensor networks by using reconfigurable ECC hardware coprocessors</article-title><source>Int. J. Distrib. Sens. Netw</source><year>2010</year><volume>2011</volume><pub-id pub-id-type="doi">10.1155/2011/740823</pub-id></element-citation></ref><ref id="b24-sensors-12-02667"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cantoni</surname><given-names>V.</given-names></name><name><surname>Lombardi</surname><given-names>L.</given-names></name><name><surname>Lombardi</surname><given-names>P.</given-names></name></person-group><article-title>Challenges for data mining in distributed sensor networks</article-title><source>Int. Conf. Pat. Recogn</source><year>2006</year><volume>1</volume><fpage>1000</fpage><lpage>1007</lpage></element-citation></ref><ref id="b25-sensors-12-02667"><label>25.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Rup</surname><given-names>S.</given-names></name><name><surname>Dash</surname><given-names>R.</given-names></name><name><surname>Ray</surname><given-names>N.K.</given-names></name><name><surname>Majhi</surname><given-names>B.</given-names></name></person-group><article-title>Recent advances in distributed video coding</article-title><conf-name>Proceedings of the IEEE International Conference on Computer Science and Information Technology</conf-name><conf-loc>Beijing, China</conf-loc><conf-date>8&#x02013;11 August 2009</conf-date><fpage>130</fpage><lpage>135</lpage></element-citation></ref><ref id="b26-sensors-12-02667"><label>26.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Tong</surname><given-names>J.-G.</given-names></name><name><surname>Zhang</surname><given-names>Z.-X.</given-names></name><name><surname>Sun</surname><given-names>Q.-L.</given-names></name><name><surname>Chen</surname><given-names>Z.-Q.</given-names></name></person-group><article-title>Design of wireless sensor network node with hyperchaos encryption based on FPGA</article-title><conf-name>Proceedings of the International Workshop on Chaos-Fractals Theories and Applications</conf-name><conf-loc>Shenyang, China</conf-loc><conf-date>6&#x02013;8 November 2009</conf-date><fpage>190</fpage><lpage>194</lpage></element-citation></ref><ref id="b27-sensors-12-02667"><label>27.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Chalivendra</surname><given-names>G.</given-names></name><name><surname>Srinivasan</surname><given-names>R.</given-names></name><name><surname>Murthy</surname><given-names>N.S.</given-names></name></person-group><article-title>FPGA based re-configurable wireless sensor network protocol</article-title><conf-name>Proceedings of the International Conference on Electronic Design</conf-name><conf-loc>Penang, Malaysia</conf-loc><conf-date>1&#x02013;3 December 2008</conf-date><fpage>1</fpage><lpage>4</lpage></element-citation></ref><ref id="b28-sensors-12-02667"><label>28.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Muralidhar</surname><given-names>P.</given-names></name><name><surname>Rao</surname><given-names>C.B.R.</given-names></name></person-group><article-title>Reconfigurable wireless sensor network node based on nios core</article-title><conf-name>Proceedings of the Fourth International Conference on Wireless Communication and Sensor Networks</conf-name><conf-loc>Allahabad, India</conf-loc><conf-date>27&#x02013;29 December 2008</conf-date><fpage>67</fpage><lpage>72</lpage></element-citation></ref><ref id="b29-sensors-12-02667"><label>29.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Yan</surname><given-names>S.</given-names></name><name><surname>Le</surname><given-names>L.</given-names></name><name><surname>Hong</surname><given-names>L.</given-names></name></person-group><article-title>Design of FPGA-based multimedia node for WSN</article-title><conf-name>Proceedings of the 7th International Conference on Wireless Communications, Networking and Mobile Computing</conf-name><conf-loc>Wuhan, China</conf-loc><conf-date>23&#x02013;25 September 2011</conf-date><fpage>1</fpage><lpage>5</lpage></element-citation></ref><ref id="b30-sensors-12-02667"><label>30.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Chao</surname><given-names>H.Z.</given-names></name><name><surname>Liu</surname><given-names>Y.P.</given-names></name><name><surname>Zhen</surname><given-names>Z.</given-names></name><name><surname>Meng</surname><given-names>M.Q.H.</given-names></name></person-group><article-title>A novel FPGA-based wireless vision sensor node</article-title><conf-name>Proceedings of the 2009 IEEE International Conference on Automation and Logistics</conf-name><conf-loc>Shenyang, China</conf-loc><conf-date>5&#x02013;7 August 2009</conf-date><fpage>841</fpage><lpage>846</lpage></element-citation></ref><ref id="b31-sensors-12-02667"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bellis</surname><given-names>S.J.</given-names></name><name><surname>Delaney</surname><given-names>K.</given-names></name><name><surname>O&#x02019;Flynn</surname><given-names>B.</given-names></name><name><surname>Barton</surname><given-names>J.</given-names></name><name><surname>Razeeb</surname><given-names>K.M.</given-names></name><name><surname>O&#x02019;Mathuna</surname><given-names>C.</given-names></name></person-group><article-title>Development of field programmable modular wireless sensor network nodes for ambient systems</article-title><source>Comput. Commun</source><year>2005</year><volume>28</volume><fpage>1531</fpage><lpage>1544</lpage></element-citation></ref><ref id="b32-sensors-12-02667"><label>32.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Philipp</surname><given-names>F.</given-names></name><name><surname>Glesner</surname><given-names>M.</given-names></name></person-group><article-title>Mechanisms and architecture for the dynamic reconfiguration of an advanced wireless sensor node</article-title><conf-name>Proceedings of the International Conference on Field Programmable Logic and Applications</conf-name><conf-loc>New Delhi, India</conf-loc><conf-date>12&#x02013;14 December 2011</conf-date><fpage>396</fpage><lpage>398</lpage></element-citation></ref><ref id="b33-sensors-12-02667"><label>33.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Nahapetian</surname><given-names>A.</given-names></name><name><surname>Lombardo</surname><given-names>P.</given-names></name><name><surname>Acquaviva</surname><given-names>A.</given-names></name><name><surname>Benini</surname><given-names>L.</given-names></name><name><surname>Sarrafzadeh</surname><given-names>M.</given-names></name></person-group><article-title>Dynamic reconfiguration in sensor networks with regenerative energy sources</article-title><conf-name>Proceedings of the Conference on Design, Automation and Test</conf-name><conf-loc>Nice, France</conf-loc><conf-date>16&#x02013;20 April 2007</conf-date></element-citation></ref><ref id="b34-sensors-12-02667"><label>34.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Garcia</surname><given-names>R.</given-names></name><name><surname>Gordon-Ross</surname><given-names>A.</given-names></name><name><surname>George</surname><given-names>A.D.</given-names></name></person-group><article-title>Exploiting partially reconfigurable FPGAs for situation-based reconfiguration in wireless sensor networks</article-title><conf-name>Proceedings of the IEEE Symposium on Field Programmable Custom Computing Machines</conf-name><conf-loc>Napa, CA, USA</conf-loc><conf-date>5&#x02013;7 April 2009</conf-date><fpage>243</fpage><lpage>246</lpage></element-citation></ref><ref id="b35-sensors-12-02667"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Krasteva</surname><given-names>Y.E.</given-names></name><name><surname>Portilla</surname><given-names>J.</given-names></name><name><surname>de la Torre</surname><given-names>E.</given-names></name><name><surname>Riesgo</surname><given-names>T.</given-names></name></person-group><article-title>Embedded runtime reconfigurable nodes for wireless sensor networks applications</article-title><source>IEEE Sens. J</source><year>2011</year><volume>11</volume><fpage>1800</fpage><lpage>1810</lpage></element-citation></ref><ref id="b36-sensors-12-02667"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fornaciari</surname><given-names>W.</given-names></name><name><surname>Piuri</surname><given-names>V.</given-names></name></person-group><article-title>Virtual FPGAs: Some steps behind the physical barriers</article-title><source>Parallel Distrib. Process</source><year>1998</year><volume>1388/1998</volume><fpage>7</fpage><lpage>12</lpage></element-citation></ref><ref id="b37-sensors-12-02667"><label>37.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Otero</surname><given-names>A.</given-names></name><name><surname>Llinas</surname><given-names>M.</given-names></name><name><surname>Lombardo</surname><given-names>M. L.</given-names></name><name><surname>Portilla</surname><given-names>J.</given-names></name><name><surname>de la Torre</surname><given-names>E.</given-names></name><name><surname>Riesgo</surname><given-names>T.</given-names></name></person-group><article-title>Cost and energy efficient reconfigurable embedded platform using spartan 6 FPGAs</article-title><conf-name>Proceedings of the SPIE Conference on VLSI Circuits and Systems</conf-name><conf-loc>Prague, Czech Republic</conf-loc><conf-date>18&#x02013;20 April 2011</conf-date><fpage>806700</fpage><lpage>806706</lpage></element-citation></ref></ref-list></back><floats-group><fig id="f1-sensors-12-02667" position="float"><label>Figure 1.</label><caption><p>Consumption profile comparison.</p></caption><graphic xlink:href="sensors-12-02667f1"/></fig><fig id="f2-sensors-12-02667" position="float"><label>Figure 2.</label><caption><p>Cookies architecture.</p></caption><graphic xlink:href="sensors-12-02667f2"/></fig><fig id="f3-sensors-12-02667" position="float"><label>Figure 3.</label><caption><p>HiReCookie on the left side and expansion board for debugging on the right side.</p></caption><graphic xlink:href="sensors-12-02667f3"/></fig><fig id="f4-sensors-12-02667" position="float"><label>Figure 4.</label><caption><p>FPGA inner blocks. Virtual architecture.</p></caption><graphic xlink:href="sensors-12-02667f4"/></fig><fig id="f5-sensors-12-02667" position="float"><label>Figure 5.</label><caption><p>Resource utilization of the FPGA.</p></caption><graphic xlink:href="sensors-12-02667f5"/></fig><fig id="f6-sensors-12-02667" position="float"><label>Figure 6.</label><caption><p>Compression algorithm.</p></caption><graphic xlink:href="sensors-12-02667f6"/></fig><fig id="f7-sensors-12-02667" position="float"><label>Figure 7.</label><caption><p>Test setup.</p></caption><graphic xlink:href="sensors-12-02667f7"/></fig><fig id="f8-sensors-12-02667" position="float"><label>Figure 8.</label><caption><p>Test 1 SHA1.</p></caption><graphic xlink:href="sensors-12-02667f8"/></fig><fig id="f9-sensors-12-02667" position="float"><label>Figure 9.</label><caption><p>Test 2 SHA1.</p></caption><graphic xlink:href="sensors-12-02667f9"/></fig><fig id="f10-sensors-12-02667" position="float"><label>Figure 10.</label><caption><p>Test 3 SHA1.</p></caption><graphic xlink:href="sensors-12-02667f10"/></fig><fig id="f11-sensors-12-02667" position="float"><label>Figure 11.</label><caption><p>Test 4 SHA1.</p></caption><graphic xlink:href="sensors-12-02667f11"/></fig><fig id="f12-sensors-12-02667" position="float"><label>Figure 12.</label><caption><p>Test 4 SHA1 Detail.</p></caption><graphic xlink:href="sensors-12-02667f12"/></fig><fig id="f13-sensors-12-02667" position="float"><label>Figure 13.</label><caption><p>MSP430 cookie processing layer.</p></caption><graphic xlink:href="sensors-12-02667f13"/></fig><fig id="f14-sensors-12-02667" position="float"><label>Figure 14.</label><caption><p>Test 5 SHA1.</p></caption><graphic xlink:href="sensors-12-02667f14"/></fig><fig id="f15-sensors-12-02667" position="float"><label>Figure 15.</label><caption><p>Test 6 SHA1.</p></caption><graphic xlink:href="sensors-12-02667f15"/></fig><fig id="f16-sensors-12-02667" position="float"><label>Figure 16.</label><caption><p>Test 6 SHA1 Detail.</p></caption><graphic xlink:href="sensors-12-02667f16"/></fig><fig id="f17-sensors-12-02667" position="float"><label>Figure 17.</label><caption><p>Detail (MD5, HW, 2000, COMP, -).</p></caption><graphic xlink:href="sensors-12-02667f17"/></fig><fig id="f18-sensors-12-02667" position="float"><label>Figure 18.</label><caption><p>Detail (MD5, SW, 2000, COMP, -).</p></caption><graphic xlink:href="sensors-12-02667f18"/></fig><table-wrap id="t1-sensors-12-02667" position="float"><label>Table 1.</label><caption><p>Resource utilization of the different Encryption Algorithms.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Resources</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>SHA1</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>MD5</bold></th></tr></thead><tbody><tr><td align="center" valign="top" rowspan="1" colspan="1">DSP48Es</td><td align="center" valign="top" rowspan="1" colspan="1">3 out of 180 (1%)</td><td align="center" valign="top" rowspan="1" colspan="1">3 out of 180 (1%)</td></tr><tr><td align="center" valign="top" rowspan="1" colspan="1">Block RAMs</td><td align="center" valign="top" rowspan="1" colspan="1">4 out of 268 (1%)</td><td align="center" valign="top" rowspan="1" colspan="1">8 out of 268 (2%)</td></tr><tr><td align="center" valign="top" rowspan="1" colspan="1">Number of occupied slices</td><td align="center" valign="top" rowspan="1" colspan="1">753 out of 23,038 (3%)</td><td align="center" valign="top" rowspan="1" colspan="1">401 out of 23,038 (1%)</td></tr></tbody></table></table-wrap><table-wrap id="t2-sensors-12-02667" position="float"><label>Table 2.</label><caption><p>Initial bitstream comparison.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" rowspan="1" colspan="1"><bold>INITIAL CONFIGURATION</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Size (Kb)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Time</bold></th></tr></thead><tbody><tr><td align="center" valign="top" rowspan="1" colspan="1">Total bitstream</td><td align="center" valign="top" rowspan="1" colspan="1">4,122</td><td align="center" valign="top" rowspan="1" colspan="1">1.002 s</td></tr><tr><td align="center" valign="top" rowspan="1" colspan="1">Compressed bitstream</td><td align="center" valign="top" rowspan="1" colspan="1">1,416</td><td align="center" valign="top" rowspan="1" colspan="1">353 ms</td></tr></tbody></table></table-wrap><table-wrap id="t3-sensors-12-02667" position="float"><label>Table 3.</label><caption><p>Test 1.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>TEST 1</bold></th><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Current (mA)</bold></th><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Time (s)</bold></th><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Energy mAh</bold></th></tr></thead><tbody><tr><td align="left" valign="top" rowspan="1" colspan="1">1.Off-time</td><td align="center" valign="top" rowspan="1" colspan="1">0</td><td align="center" valign="top" rowspan="1" colspan="1">5</td><td align="center" valign="top" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">2. Configuration time</td><td align="center" valign="top" rowspan="1" colspan="1">50</td><td align="center" valign="top" rowspan="1" colspan="1">1</td><td align="center" valign="top" rowspan="1" colspan="1">0.014</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3.Computing time</td><td align="center" valign="top" rowspan="1" colspan="1">140</td><td align="center" valign="top" rowspan="1" colspan="1">0.16</td><td align="center" valign="top" rowspan="1" colspan="1">0.006</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">Total per cycle</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">0.020</td></tr></tbody></table></table-wrap><table-wrap id="t4-sensors-12-02667" position="float"><label>Table 4.</label><caption><p>Test 2.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" rowspan="1" colspan="1"><bold>TEST 2</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Current (mA)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Time (s)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Energy mAh</bold></th></tr></thead><tbody><tr><td align="left" valign="top" rowspan="1" colspan="1">1.Off-time</td><td align="center" valign="top" rowspan="1" colspan="1">0</td><td align="center" valign="top" rowspan="1" colspan="1">5</td><td align="center" valign="top" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">2. Configuration time</td><td align="center" valign="top" rowspan="1" colspan="1">50</td><td align="center" valign="top" rowspan="1" colspan="1">0.52</td><td align="center" valign="top" rowspan="1" colspan="1">0.007</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3.Computing time</td><td align="center" valign="top" rowspan="1" colspan="1">140</td><td align="center" valign="top" rowspan="1" colspan="1">0.16</td><td align="center" valign="top" rowspan="1" colspan="1">0.006</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">Total per cycle</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">0.013</td></tr></tbody></table></table-wrap><table-wrap id="t5-sensors-12-02667" position="float"><label>Table 5.</label><caption><p>Test 3.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>TEST 2</bold></th><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Current (mA)</bold></th><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Time (s)</bold></th><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Energy mAh</bold></th></tr></thead><tbody><tr><td align="left" valign="top" rowspan="1" colspan="1">1.Off-time</td><td align="center" valign="top" rowspan="1" colspan="1">0</td><td align="center" valign="top" rowspan="1" colspan="1">5</td><td align="center" valign="top" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">2. Configuration time</td><td align="center" valign="top" rowspan="1" colspan="1">50</td><td align="center" valign="top" rowspan="1" colspan="1">0.52</td><td align="center" valign="top" rowspan="1" colspan="1">0.007</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3.Computing time</td><td align="center" valign="top" rowspan="1" colspan="1">140</td><td align="center" valign="top" rowspan="1" colspan="1">2.73</td><td align="center" valign="top" rowspan="1" colspan="1">0.106</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">Total per cycle</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">0.113</td></tr></tbody></table></table-wrap><table-wrap id="t6-sensors-12-02667" position="float"><label>Table 6.</label><caption><p>Resource utilization of the different Encryption Algorithms.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" rowspan="1" colspan="1"><bold>TEST 2</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Current (mA)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Time (s)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Energy mAh</bold></th></tr></thead><tbody><tr><td align="left" valign="top" rowspan="1" colspan="1">1.Off-time</td><td align="center" valign="top" rowspan="1" colspan="1">0</td><td align="center" valign="top" rowspan="1" colspan="1">5</td><td align="center" valign="top" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">2. Configuration time</td><td align="center" valign="top" rowspan="1" colspan="1">50</td><td align="center" valign="top" rowspan="1" colspan="1">0.52</td><td align="center" valign="top" rowspan="1" colspan="1">0.007</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3.Computing time</td><td align="center" valign="top" rowspan="1" colspan="1">134.5</td><td align="center" valign="top" rowspan="1" colspan="1">0.0057</td><td align="center" valign="top" rowspan="1" colspan="1">0.0002</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">Total per cycle</td><td align="center" valign="top" rowspan="1" colspan="1">192</td><td align="center" valign="top" rowspan="1" colspan="1">0.0093</td><td align="center" valign="top" rowspan="1" colspan="1">0.0005</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">1.Off-time</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">0.0077</td></tr></tbody></table></table-wrap><table-wrap id="t7-sensors-12-02667" position="float"><label>Table 7.</label><caption><p>Test 5.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" rowspan="1" colspan="1"><bold>TEST 5</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Current (mA)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Time (s)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Energy mAh</bold></th></tr></thead><tbody><tr><td align="left" valign="top" rowspan="1" colspan="1">1.Sleep mode</td><td align="center" valign="top" rowspan="1" colspan="1">1.6</td><td align="center" valign="top" rowspan="1" colspan="1">2</td><td align="center" valign="top" rowspan="1" colspan="1">0,001</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">2.Wake-up time</td><td align="center" valign="top" rowspan="1" colspan="1">2.4</td><td align="center" valign="top" rowspan="1" colspan="1">0.01</td><td align="center" valign="top" rowspan="1" colspan="1">6.7 &#x000d7; 10<sup>&#x02212;6</sup></td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3.Active mode (2000)</td><td align="center" valign="top" rowspan="1" colspan="1">3</td><td align="center" valign="top" rowspan="1" colspan="1">13.92</td><td align="center" valign="top" rowspan="1" colspan="1">0.012</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3.Active mode (10000)</td><td align="center" valign="top" rowspan="1" colspan="1">3</td><td align="center" valign="top" rowspan="1" colspan="1">69.6</td><td align="center" valign="top" rowspan="1" colspan="1">0.058</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">Total value (2000)</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">0.013</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">Total value (10000)</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">0.059</td></tr></tbody></table></table-wrap><table-wrap id="t8-sensors-12-02667" position="float"><label>Table 8.</label><caption><p>Test 6.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" rowspan="1" colspan="1"><bold>TEST 2</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Current (mA)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Time (s)</bold></th><th align="center" valign="middle" rowspan="1" colspan="1"><bold>Energy mAh</bold></th></tr></thead><tbody><tr><td align="left" valign="top" rowspan="1" colspan="1">Off-Time</td><td align="center" valign="top" rowspan="1" colspan="1">0</td><td align="center" valign="top" rowspan="1" colspan="1">3.5</td><td align="center" valign="top" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">1. Config. Time</td><td align="center" valign="top" rowspan="1" colspan="1">30.6</td><td align="center" valign="top" rowspan="1" colspan="1">0.537</td><td align="center" valign="top" rowspan="1" colspan="1">0.005</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">2. Activation Time</td><td align="center" valign="top" rowspan="1" colspan="1">123</td><td align="center" valign="top" rowspan="1" colspan="1">0.0064</td><td align="center" valign="top" rowspan="1" colspan="1">2 &#x000d7; 10<sup>&#x02212;4</sup></td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">3. computing Time</td><td align="center" valign="top" rowspan="1" colspan="1">178</td><td align="center" valign="top" rowspan="1" colspan="1">0.0465</td><td align="center" valign="top" rowspan="1" colspan="1">0.002</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">Total per cycle</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">-</td><td align="center" valign="top" rowspan="1" colspan="1">0.007</td></tr></tbody></table></table-wrap><table-wrap id="t9-sensors-12-02667" position="float"><label>Table 9.</label><caption><p>MD5 <italic>versus</italic> SHA1.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Comparison</bold></th><th align="center" valign="bottom" rowspan="1" colspan="1"><bold>Time (ms)</bold></th></tr></thead><tbody><tr><td align="left" valign="top" rowspan="1" colspan="1">SHA1 HSW</td><td align="center" valign="top" rowspan="1" colspan="1">2.7</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">MD5 HSW</td><td align="center" valign="top" rowspan="1" colspan="1">1.3</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">SHA1 HW</td><td align="center" valign="top" rowspan="1" colspan="1">9.3</td></tr><tr><td align="left" valign="top" rowspan="1" colspan="1">MD5 HW</td><td align="center" valign="top" rowspan="1" colspan="1">8</td></tr></tbody></table></table-wrap></floats-group></article>
<article article-type="article" specific-use="production" xml:lang="en" xmlns:hw="org.highwire.hpp" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:ref="http://schema.highwire.org/Reference" xmlns:hwp="http://schema.highwire.org/Journal" xmlns:l="http://schema.highwire.org/Linking" xmlns:r="http://schema.highwire.org/Revision" xmlns:x="http://www.w3.org/1999/xhtml" xmlns:app="http://www.w3.org/2007/app" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:nlm="http://schema.highwire.org/NLM/Journal" xmlns:a="http://www.w3.org/2005/Atom" xmlns:c="http://schema.highwire.org/Compound" xmlns:hpp="http://schema.highwire.org/Publishing"><front><journal-meta><journal-id journal-id-type="hwp">biorxiv</journal-id><journal-id journal-id-type="publisher-id">BIORXIV</journal-id><journal-title>bioRxiv</journal-title><abbrev-journal-title abbrev-type="publisher">bioRxiv</abbrev-journal-title><publisher><publisher-name>Cold Spring Harbor Laboratory</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.1101/107235</article-id><article-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1</article-id><article-id pub-id-type="other" hwp:sub-type="pisa-master">biorxiv;107235</article-id><article-id pub-id-type="other" hwp:sub-type="slug">107235</article-id><article-id pub-id-type="other" hwp:sub-type="tag">107235</article-id><article-version>1.1</article-version><article-categories><subj-group subj-group-type="author-type"><subject>Regular Article</subject></subj-group><subj-group subj-group-type="heading"><subject>New Results</subject></subj-group><subj-group subj-group-type="hwp-journal-coll" hwp:journal-coll-id="Systems Biology" hwp:journal="biorxiv"><subject>Systems Biology</subject></subj-group></article-categories><title-group><article-title hwp:id="article-title-1">Bipartite Boolean modelling - a method for mechanistic simulation and validation of large-scale signal transduction networks</article-title></title-group><author-notes hwp:id="author-notes-1"><fn id="n1" fn-type="equal" hwp:id="fn-1" hwp:rev-id="xref-fn-1-1 xref-fn-1-2"><label>*</label><p hwp:id="p-1">The authors contributed equally</p></fn><corresp id="cor1" hwp:id="corresp-1" hwp:rev-id="xref-corresp-1-1"><label>1</label>Correspondence to: <email hwp:id="email-1">marcus.krantz@biologie.hu-berlin.de</email></corresp></author-notes><contrib-group hwp:id="contrib-group-1"><contrib contrib-type="author" hwp:id="contrib-1"><name name-style="western" hwp:sortable="Thieme Sebastian"><surname>Thieme</surname><given-names>Sebastian</given-names></name><xref ref-type="author-notes" rid="n1" hwp:id="xref-fn-1-1" hwp:rel-id="fn-1">*</xref></contrib><contrib contrib-type="author" hwp:id="contrib-2"><name name-style="western" hwp:sortable="Romers Jesper"><surname>Romers</surname><given-names>Jesper</given-names></name><xref ref-type="author-notes" rid="n1" hwp:id="xref-fn-1-2" hwp:rel-id="fn-1">*</xref></contrib><contrib contrib-type="author" hwp:id="contrib-3"><name name-style="western" hwp:sortable="Münzner Ulrike"><surname>Münzner</surname><given-names>Ulrike</given-names></name></contrib><contrib contrib-type="author" corresp="yes" hwp:id="contrib-4"><contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-7843-8342</contrib-id><name name-style="western" hwp:sortable="Krantz Marcus"><surname>Krantz</surname><given-names>Marcus</given-names></name><xref ref-type="corresp" rid="cor1" hwp:id="xref-corresp-1-1" hwp:rel-id="corresp-1">1</xref><object-id pub-id-type="other" hwp:sub-type="orcid" xlink:href="http://orcid.org/0000-0001-7843-8342"/></contrib><aff id="a1" hwp:id="aff-1">
<institution hwp:id="institution-1">Institute for Biology, Humboldt-Universität zu Berlin</institution>, Berlin, <country>German</country>
</aff></contrib-group><pub-date pub-type="epub-original" hwp:start="2017"><year>2017</year></pub-date><pub-date pub-type="hwp-created" hwp:start="2017-02-09T15:39:20-08:00">
    <day>9</day><month>2</month><year>2017</year>
  </pub-date><pub-date pub-type="hwp-received" hwp:start="2017-02-09T15:39:20-08:00">
    <day>9</day><month>2</month><year>2017</year>
  </pub-date><pub-date pub-type="epub" hwp:start="2017-02-09T16:05:23-08:00">
    <day>9</day><month>2</month><year>2017</year>
  </pub-date><pub-date pub-type="epub-version" hwp:start="2017-02-09T16:05:23-08:00">
    <day>9</day><month>2</month><year>2017</year>
  </pub-date><elocation-id>107235</elocation-id><history hwp:id="history-1">
<date date-type="received" hwp:start="2017-02-09"><day>09</day><month>2</month><year>2017</year></date>
<date date-type="accepted" hwp:start="2017-02-09"><day>09</day><month>2</month><year>2017</year></date>
</history><permissions><copyright-statement hwp:id="copyright-statement-1">© 2017, Posted by Cold Spring Harbor Laboratory</copyright-statement><copyright-year>2017</copyright-year><license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by/4.0/" hwp:id="license-1"><p hwp:id="p-2">This pre-print is available under a Creative Commons License (Attribution 4.0 International), CC BY 4.0, as described at <ext-link l:rel="related" l:ref-type="uri" l:ref="http://creativecommons.org/licenses/by/4.0/" ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/" hwp:id="ext-link-1">http://creativecommons.org/licenses/by/4.0/</ext-link></p></license></permissions><self-uri xlink:href="107235.pdf" content-type="pdf" xlink:role="full-text"/><self-uri l:ref="forthcoming:yes" c:role="http://schema.highwire.org/variant/abstract" xlink:role="abstract" content-type="xhtml+xml" hwp:variant="yes"/><self-uri l:ref="forthcoming:yes" c:role="http://schema.highwire.org/variant/full-text" xlink:href="file:/content/biorxiv/vol0/issue2019/pdf/107235v1.pdf" hwp:variant="yes" content-type="pdf" xlink:role="full-text"/><self-uri l:ref="forthcoming:yes" c:role="http://schema.highwire.org/variant/full-text" xlink:role="full-text" content-type="xhtml+xml" hwp:variant="yes"/><self-uri l:ref="forthcoming:yes" c:role="http://schema.highwire.org/variant/source" xlink:role="source" content-type="xml" xlink:show="none" hwp:variant="yes"/><self-uri l:ref="forthcoming:yes" c:role="http://schema.highwire.org/variant/original" xlink:role="original" content-type="xml" xlink:show="none" hwp:variant="yes" xlink:href="107235.xml"/><self-uri content-type="abstract" xlink:href="file:/content/biorxiv/vol0/issue2019/abstracts/107235v1/107235v1.htslp"/><self-uri content-type="fulltext" xlink:href="file:/content/biorxiv/vol0/issue2019/fulltext/107235v1/107235v1.htslp"/><abstract hwp:id="abstract-1"><title hwp:id="title-1">Abstract</title><p hwp:id="p-3">The metabolic modelling community has established the gold standard for bottom-up systems biology with reconstruction, validation and simulation of mechanistic genome-scale models. Similar methods have not yet been established for signal transduction networks, which appear to be much more challenging targets. This is due to the internal states carried by the signalling components, which encode and transmit the information through the network. Dealing with these states leads to scalability problems at two distinct level: First, in the model formulation, and second, in the model execution. For large-scale signalling networks, rule based modelling has been established as the quantitative method of choice due efficient model definition (as rules) and execution (as agents). However, rule based models cannot be simulated without quantitative parameters, introducing yet another layer of uncertainty. Consequently, it would be advantageous if models of signal transduction could be simulated and validated at the qualitative level. Here, we present a method for qualitative analysis of large-scale signalling networks. It is based on rxncon, the reaction-contingency language, a language for reconstruction of signal transduction networks. We developed a method to generate generic update rules for both the states and the reactions, the elementary building blocks in such a network, which can be used to map an arbitrary rxncon system on a unique bipartite Boolean model with a defined set of truth tables. Hence, each rxncon network can be converted into a corresponding executable model, providing a powerful tool for network validation. Furthermore, the rxncon network can also be compiled into a rule based model. Taken together, we equip rxncon 2.0 with a qualitative simulation tool, which can be used in network validation and model development.</p></abstract><counts><page-count count="29"/></counts><custom-meta-wrap>
    <custom-meta hwp:id="custom-meta-1">
      <meta-name>has-earlier-version</meta-name>
      <meta-value>yes</meta-value>
    </custom-meta>
  </custom-meta-wrap></article-meta></front><body><sec id="s1" hwp:id="sec-1"><title hwp:id="title-2">Introduction</title><p hwp:id="p-4">Systems biology aims towards the integrative analysis of large-scale biological systems up to whole cells. To realise this goal, we need to integrate knowledge into executable or computational models [<xref rid="c1" ref-type="bibr" hwp:id="xref-ref-1-1" hwp:rel-id="ref-1">1</xref>]. This process has been developed the furthest in the field of metabolic modelling, where the community routinely works with genome-scale models (GSMs). These models are defined at the level of biochemical reactions, cover the entire metabolic network of even complex cells, and can be simulated to predict system level functionality [<xref rid="c2" ref-type="bibr" hwp:id="xref-ref-2-1" hwp:rel-id="ref-2">2</xref>, <xref rid="c3" ref-type="bibr" hwp:id="xref-ref-3-1" hwp:rel-id="ref-3">3</xref>]. The methodology is well established and has rich toolboxes for network reconstruction, validation and simulation [<xref rid="c4" ref-type="bibr" hwp:id="xref-ref-4-1" hwp:rel-id="ref-4">4</xref>], and constitutes the paradigm of bottom-up modelling. However, these tools cannot be used for signal transduction networks, due to the difference between mass and information transfer networks [<xref rid="c5" ref-type="bibr" hwp:id="xref-ref-5-1" hwp:rel-id="ref-5">5</xref>]. The main challenge in information transfer networks is to deal with the internal state changes of the components. Typically, signalling components undergo multiple state changes, leading to a combinatorial complexity problem that increases very fast with network scope [<xref rid="c6" ref-type="bibr" hwp:id="xref-ref-6-1" hwp:rel-id="ref-6">6</xref>, <xref rid="c7" ref-type="bibr" hwp:id="xref-ref-7-1" hwp:rel-id="ref-7">7</xref>]. The combinatorial complexity and increase in the number of microstates within a signalling model, as well as the discrepancy in the available empirical data, increases with an increase in network size. This limits the size of signal transduction networks that can be simulated with reasonable computational costs. To overcome these issues, the community works on different strategies [<xref rid="c8" ref-type="bibr" hwp:id="xref-ref-8-1" hwp:rel-id="ref-8">8</xref>–<xref rid="c10" ref-type="bibr" hwp:id="xref-ref-10-1" hwp:rel-id="ref-10">10</xref>]. Of these strategies, rule based modelling holds the greatest promise for scalable quantitative mechanistic modelling.</p><p hwp:id="p-5">To build a quantitative model, information is needed at several levels. The model information can be divided into a qualitative and a quantitative layer [<xref rid="c2" ref-type="bibr" hwp:id="xref-ref-2-2" hwp:rel-id="ref-2">2</xref>]. The qualitative layer requires information on components, states, reactions and contingencies, which define the model topology and regulation (in case of a signal transduction model; metabolic models typically ignore internal states (e.g. enzyme regulation by phosphorylation), despite rising evidence of their importance [<xref rid="c11" ref-type="bibr" hwp:id="xref-ref-11-1" hwp:rel-id="ref-11">11</xref>]). To turn the model structure into a quantitative model, rate laws and parameters are required. Consequently, modelling large networks requires data integration at many levels. For each level of detail (Components-&gt;States-&gt;Reactions-&gt;Contingencies-&gt;Rate Laws-&gt;Parameters), more and more data is required. At the same time, generating this data becomes increasingly difficult, leaving us with the lowest confidence at the highest (quantitative) model resolution. Hence, it would be valuable to enable simulation of these systems already at the qualitative level.</p><p hwp:id="p-6">To enable simulation without parameters, the community developed several qualitative simulation methods. In particular, Boolean networks are commonly used. In these networks, model nodes represent e.g. biological molecules. The state of the nodes can either be TRUE or FALSE and this represents the activity of the molecules. The model states are updated in discrete steps, which provide a crude representation of time or at least causality. The changes in states over time are encoded in update rules that define how the state of one component at time <italic toggle="yes">t</italic>+1 depends on the state of the network at time <italic toggle="yes">t</italic>. These networks scale efficiently and can be executed for large networks. However, standard Boolean networks lack mechanistic detail and cannot distinguish between different active forms of a single component, which is highly problematic as many signalling components can be differentially activated against different targets (e.g. the cyclin dependent kinase). To address this, different groups developed mechanistic Boolean models [<xref rid="c12" ref-type="bibr" hwp:id="xref-ref-12-1" hwp:rel-id="ref-12">12</xref>–<xref ref-type="bibr" rid="c14" hwp:id="xref-ref-14-1" hwp:rel-id="ref-14">14</xref>], which can be used for a detailed description of signalling events through the combination of rule-based and site-specific logical modelling. These included a bipartite Boolean model formalism that described the network in terms of elemental reactions and state, which allowed it to retain the mechanistic information by distinguishing between the different downstream functions of components. This enables us to approximate the underlying dynamics of the reconstructed network in a qualitative manner.</p><p hwp:id="p-7">This bipartite Boolean modelling approach was based on rxncon, the reaction-contingency language. The rxncon language is tailored for the reconstruction of signal transduction networks [<xref ref-type="bibr" rid="c15" hwp:id="xref-ref-15-1" hwp:rel-id="ref-15">15</xref>]. As described in detail elsewhere [<xref ref-type="bibr" rid="c16" hwp:id="xref-ref-16-1" hwp:rel-id="ref-16">16</xref>], rxncon describes the network in terms of the mechanistic building blocks required for signalling: Elemental reaction that describe independent reaction in terms of changing elemental states, and their contingencies, the necessary molecular context of the reactions, expressed in terms of (combinations of) elemental states. The key feature is that a rxncon state is a macroscopic state. Except for the information on e.g. a phosphorylation, all other information is ignored; making the approach very similar to rule based modelling [<xref ref-type="bibr" rid="c17" hwp:id="xref-ref-17-1" hwp:rel-id="ref-17">17</xref>, <xref ref-type="bibr" rid="c18" hwp:id="xref-ref-18-1" hwp:rel-id="ref-18">18</xref>]. Hence, the network definition corresponds very closely to empirical data and largely avoids the combinatorial complexity problem. This makes rxncon highly scalable as well as composable, as reaction and contingency statements are independent of each other. With rxncon 2.0, the second generation rxncon language, the expressiveness and precision is now on level with a rule based modelling language, and the rxncon 2.0 network definition can be compiled into a rule based model (RBM) in the BNGL language (Romers et al., unpublished). However, the RBM requires parametrisation in terms of rate constants and initial amounts, quantities for which reliable values are scarce. Hence, it would be valuable to enable qualitative simulation of these networks.</p><p hwp:id="p-8">Here, we present a qualitative simulation method for rxncon 2.0. Based on the new syntax and semantics, we have created a new modelling formalism, only loosely related to the previous incarnation. This new formalism is based on two generic update rules for states and reactions, which can be used to map any rxncon network on a specific bipartite Boolean model with uniquely defined truth tables. We show that these models meaningfully predict system level function, and this, together with the unique mapping, provides a powerful validation tool: rxncon models can be directly compiled into models that can be executed without further optimisation at the system level. In the context of rule based model development, this would allow testing and optimisation of the qualitative model layer before entering the more expensive parametrisation and simulation cycles. In the context of genome-scale modelling, it will enable validation and simulation of large-scale, perhaps even genome-scale, signal transduction networks.</p></sec><sec id="s2" hwp:id="sec-2"><title hwp:id="title-3">Methods</title><sec id="s2a" hwp:id="sec-3"><title hwp:id="title-4">The rxncon language</title><p hwp:id="p-9">The rxncon language systematically separates the network information into reactions (what happens) and contingencies (under what conditions does it happen). The biological information is described on the molecular level reflecting the resolution of the empirical data. For this, we define elemental states (a single property of a molecule, e.g. modification), elemental reactions (indivisible reaction events that synthesise, degrade, produce or consume elemental states) and contingencies (contextual constraints on elemental reaction). The term elemental means that the resolution of a state cannot be defined more precisely. Hence two states of the same type are defined on the same resolution e.g. residue level and if the residue is the same in both states they are mutually exclusive from each other. However, global quantities e.g. the pH value inside a cell does not fit the elemental concept, but can be described using Inputs and Outputs, which defined the boundary of the mechanistic model with the surrounding. Hence, global variables can be connected to the elemental states and reactions in the reaction-contingency formalism. The syntax and semantics of rxncon 2.0, the second generation rxncon language, is described in detail elsewhere [<xref ref-type="bibr" rid="c16" hwp:id="xref-ref-16-2" hwp:rel-id="ref-16">16</xref>]. For the generation of the bipartite Boolean model, the following features are of particular importance:</p><list list-type="simple" hwp:id="list-1"><list-item hwp:id="list-item-1"><p hwp:id="p-10">– The skeleton rule, which is a property of an elemental reaction, describing the transition between elemental states.</p></list-item><list-item hwp:id="list-item-2"><p hwp:id="p-11">– The contingencies, holding the regulatory information.</p></list-item></list></sec><sec id="s2b" hwp:id="sec-4"><title hwp:id="title-5">The generic update rules</title><p hwp:id="p-12">The information of the skeleton rule and the contingencies are sufficient to build the complete bipartite Boolean model. The skeleton rules provide the reaction layer of the system and therefore the information about which elemental state (represented by a state target) is produced, consumed, synthesised or degraded by an elemental reaction (represented by a reaction target). The contingencies provide the information how elemental reactions are regulated – the regulatory layer. From this we can construct the update rules for state targets and the update rules for reaction targets.</p><p hwp:id="p-13">The generic reaction update rule consists of the components the reaction is based on and a Boolean combination of its contingencies. The regulatory layer does not include source states, hence, those are not included in the reaction target update rule.</p><p hwp:id="p-14">The generic state target update rule integrates the effect of all elemental reactions on an elemental state. In a system without degradation and synthesis the truth value of a state target depends either on the presence of a production reaction for it and the source states for that production reaction. Alternatively, the state maintains the same value if it is not consumed by any reaction (which should in turn also have all its source states present). The full generic update rules, including degradation and synthesis reactions can be found in <xref rid="figS1" ref-type="fig" hwp:id="xref-fig-7-1" hwp:rel-id="F7">Fig S1</xref>.</p><fig id="figS1" position="float" orientation="portrait" fig-type="figure" hwp:id="F7" hwp:rev-id="xref-fig-7-1"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIGS1</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F7</object-id><object-id pub-id-type="publisher-id">figS1</object-id><label>Figure S1:</label><caption hwp:id="caption-8"><title hwp:id="title-24">The processing of degradation reactions.</title><p hwp:id="p-46">Degradation reactions differ in their interpretation depending on if they are regulated or not. (A) shows two different ways to integrate degradation reactions into the system. The left way considers the case that the reaction is not regulated. In this case, all state targets containing the respective component are considered for degradation. If the degradation reaction target is regulated, the regulatory information has to be considered on top of the skeleton rules. In a first step, we are building the disjunctive normal form (DNF) of the contingencies. For each OR term within the solution a degradation reaction target is created and the respective regulatory information of the OR term is added to this reaction target. In a last step, interaction states have to be considered for the regulated as well as the not regulated degradation reaction targets. Since we have two different components in this state target type, degradation reactions will consume the state target but produce the unbound form of the binding partner of the degraded component. For this step, the degradation reaction target has to be divided in as many reaction targets as there are valid interaction state targets for that particular degradation reaction. (B) shows a simulation of the degradation depending on an interaction state. As soon as the interaction state is build the degradation reaction turns on and degrades the interaction state. During this process the not degraded component is released in its neutral unbound form.</p></caption><graphic xlink:href="107235_figS1" position="float" orientation="portrait" hwp:id="graphic-8"/></fig><p hwp:id="p-15">Degradation reactions play a special role, because they are supposed to remove specific state targets or entire components from the system, depending on their regulation. Therefore, we have to consider two different pathways for integrating them into the system. If we have no regulatory information on a degradation reaction target all state targets containing the respective component get degraded. If the degradation reaction target is regulated, the degradation itself will be targeted. Therefore, the regulatory information, which can be represented as a Boolean expression of regulatory states, has to be considered on top of the skeleton rules. This is done by building the disjunctive normal form (DNF), i.e. “OR of ANDs”, of the contingencies. For each OR term within the solution a degradation reaction target is created and the respective regulatory information of the OR term is added to this reaction target (shown in <xref ref-type="fig" rid="figS2" hwp:id="xref-fig-8-1" hwp:rel-id="F8">Figure S2A</xref>). Special attention has to be given to mutually exclusive state targets. If the degradation reaction is inhibited by a state target, then this state target is protected for degradation, but its mutually exclusive state targets can be degraded. The opposite holds for requirements. If a state is required for the degradation reaction target the state target gets degraded, but the mutually exclusive state targets are protected. Furthermore, depending on the state target type, degradation reaction targets can also produce certain states e.g. if an interaction state target is degraded, the binding partner get released back to the system (<xref ref-type="fig" rid="figS2" hwp:id="xref-fig-8-2" hwp:rel-id="F8">Figure S2B</xref>). For this step, the degradation reaction target has to be divided in as many reaction targets as there are valid interaction state targets for that particular degradation reaction. Taken together, due to the interpretation what degradation translates to within a Boolean system, the degradation reaction targets play a different, less straightforward, than all other reaction targets.</p><fig id="figS2" position="float" orientation="portrait" fig-type="figure" hwp:id="F8" hwp:rev-id="xref-fig-8-1 xref-fig-8-2"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIGS2</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F8</object-id><object-id pub-id-type="publisher-id">figS2</object-id><label>Figure S2:</label><caption hwp:id="caption-9"><title hwp:id="title-25">The generic update rules for multiple components and reactions.</title><p hwp:id="p-47">A reaction target can depend on multiple components. A component is defined as a Boolean combination of state targets sharing a specific component. State targets which cannot coexist on a single molecule level are combined by Boolean OR and state targets which can coexist are combined by Boolean AND (see legend). If a reaction depends on multiple components they are combined by Boolean AND, whereas the combination of contingency state targets depends on the reconstruction of the regulatory mechanism. Similarly, a state target can be influenced by more than one reaction of the same type, e.g. produced or consumed by different reactions. Therefore, reactions of the same type can be combined by Boolean OR if they have a positive impact on the truth value e.g. synthesis and production reactions, whereas reaction targets with a negative impact e.g. degradation and consumption reactions are combined by Boolean AND of their negation. Note that a consumption reaction depends on its source state, which can also be multiple ones. The negation of the Boolean AND combination will result in a Boolean OR combination of the negated elements.</p></caption><graphic xlink:href="107235_figS2" position="float" orientation="portrait" hwp:id="graphic-9"/></fig><p hwp:id="p-16">The “component terms” are part of the state and the reaction target update rule: e.g. a reaction target can only be active if its components are active and the regulatory constraints are fulfilled. The term for a component is defined as a certain Boolean combination of state targets that live on that particular component. We construct it by separating the states for a component into mutually exclusive groups, taking the OR within a group and the AND between groups. Certain components in the system carry no elemental states: for these we introduce additional state targets.</p></sec><sec id="s2c" hwp:id="sec-5"><title hwp:id="title-6">The model creation workflow (as implemented)</title><p hwp:id="p-17">The bipartite Boolean model is constructed from a rxncon system in seven steps. The first five steps are for collecting the information needed and the last two for constructing the update rules for state and reaction targets. Step one calculates all the components of the systems to get the information which component can be defined by elemental states and which not. Step two calculates the regulatory information of reaction targets using the DNF of their contingencies. In step three to five the calculation of the degradation reaction is handled. The components which are influenced by the degradation target are added, the contingency information are applied and interaction reactions are considered. In the last preparation step the information of synthesised components is added to the respective synthesis reaction. If this information is available the calculation of the update rules, according to the generic update rules for state and reaction targets, is straightforward. The system is initialised per default with all neutral state targets are TRUE and all other targets are FALSE.</p><p hwp:id="p-18">The bipartite Boolean model is exported into a BoolNet compatible file (*.boolnet). To fulfil naming restrictions of BoolNet and to keep the names unambiguous the exported names of reaction and state targets are abbreviated with <italic toggle="yes">R</italic> or <italic toggle="yes">S</italic> respectively followed by a consecutive numbering. Additionally, to the BoolNet file the rxncon export provides two additional csv files: one mapping file (ending with *_symbols.csv) mapping an abbreviation to its respective target and one file (ending with *_initial_vals.csv) with initial values for all targets of the system. Per default all neutral state targets and generic component targets are initialized as ON and all other targets as OFF.</p></sec><sec id="s2d" hwp:id="sec-6"><title hwp:id="title-7">Model simulation</title><p hwp:id="p-19">The simulation is done with the R CRAN package BoolNet [19]. This package provides methods for different kinds of simulation, analysis and visualisation of Boolean networks. The files needed for the simulation are the following: Bipartite Boolean network ends with ‘.boolnet’, the mapping of the abbreviations ends with ‘_symbols.csv’ and the file containing the initial conditions of the system ends with ‘_initial_vals.csv’. After reading those files in the functions of the BoolNet package can be used to simulate the bipartite Boolean model.</p><p hwp:id="p-20">Within a Boolean model, we expect the output to be responsive to the input. The sign of the dependence does not matter, and we can start with the input either on or off. We simulate the model until it reaches an attractor. If it is a point attractor, we use it as starting point for the next simulation but turn the Input signal into a truth value, activating the output target and simulate again until we reach another attractor. We iteratively change inputs and simulate to an attractor state until we reach an attractor we have already seen.</p></sec></sec><sec id="s3" hwp:id="sec-7"><title hwp:id="title-8">Results</title><sec id="s3a" hwp:id="sec-8"><title hwp:id="title-9">The expected behaviour of a small reaction circuit</title><p hwp:id="p-21">First, we defined the behaviour we expect from a generic reaction motif. For this purpose, we designed a minimal circuit consisting of two elemental states – one neutral (unphosphorylated) and one modified (phosphorylated) – that are targeted by up to four reactions: A phosphorylation reaction, a dephosphorylation reaction, a synthesis reaction and a degradation reaction (<xref rid="fig1" ref-type="fig" hwp:id="xref-fig-1-1" hwp:rel-id="F1">Fig 1A</xref>). Each of these reactions has a different effect on the two state nodes (<xref ref-type="table" rid="tbl1" hwp:id="xref-table-wrap-1-1" hwp:rel-id="T1">Table 1</xref>). Due to the crude notion of time in Boolean system, we decided to think of each truth table as a local equilibrium that only depended on the variables in the update rule. First, we considered the system in the absence of reactions. Here, we do not expect the states to change over time and consequently they remain as initiated (<xref rid="fig1" ref-type="fig" hwp:id="xref-fig-1-2" hwp:rel-id="F1">Fig 1B</xref>). Second, we added different combinations of phosphorylation and dephosphorylation reactions. If only the phosphorylation reaction is active, we expect the component to end up fully phosphorylated (P=TRUE, 0=FALSE). Similarly, with only the dephosphorylation reaction active, we would expect the component to be fully dephosphorylated (0=TRUE, P=FALSE). However, if both reactions are active, we would expect both forms of the component to be present at equilibrium (0=TRUE, P=TRUE) (<xref rid="fig2" ref-type="fig" hwp:id="xref-fig-2-1" hwp:rel-id="F2">Fig 2</xref>). In each of these three cases, this requires the component to be present (0=TRUE and/or P=TRUE), but it does not depend on which form is present (<xref rid="fig1" ref-type="fig" hwp:id="xref-fig-1-3" hwp:rel-id="F1">Fig 1C</xref>). Third, we added a degradation reaction to the system. In this case, we expect the component to be completely depleted from the system, and hence (0=FALSE, P=FALSE) regardless of phosphorylation, dephosphorylation, or initial states (<xref rid="fig1" ref-type="fig" hwp:id="xref-fig-1-4" hwp:rel-id="F1">Fig 1D</xref>). Fourth and finally, we added a synthesis to our system. With the same reasoning as for phosphorylation <italic toggle="yes">vs.</italic> dephosphorylation, we expect a state that is both synthesised and degraded to be present at equilibrium. Furthermore, we expect modified states of synthesised components to be true if their producing reactions are also active, even if these states are subject to degradation. Hence, if synthesis is active and phosphorylation is active, we expect both states to be TRUE even in the presence of degradation and/or dephosphorylation and regardless of initial conditions (0=TRUE, P=TRUE) (<xref rid="fig1" ref-type="fig" hwp:id="xref-fig-1-5" hwp:rel-id="F1">Fig 1E</xref>). In case of synthesis is active but not phosphorylation, there is no generation of the phosphorylated state and it is only stable in the absence of dephosphorylation and degradation. If any of these reactions are active, or if it is initialised as FALSE, it will be FALSE. Hence, we can fully define the expected truth values of states for any combination of active reactions, for both neutral and modified elemental states.</p><fig id="fig1" position="float" orientation="portrait" fig-type="figure" hwp:id="F1" hwp:rev-id="xref-fig-1-1 xref-fig-1-2 xref-fig-1-3 xref-fig-1-4 xref-fig-1-5 xref-fig-1-6 xref-fig-1-7 xref-fig-1-8"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIG1</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F1</object-id><object-id pub-id-type="publisher-id">fig1</object-id><label>Figure 1:</label><caption hwp:id="caption-1"><title hwp:id="title-10">Update expectations from a generic reaction motif.</title><p hwp:id="p-22">Here, we show a minimal circuit with maximal four reactions and two elemental states of a generic protein. We show the expected equilibrium behaviour after systematically turning reactions and the initial states of the two elemental states of the protein on or off. (A) The minimal circuit: A generic protein is synthesised, degraded, phosphorylated and dephosphorylated. (B) In a system where no reactions take place, the equilibrium states will remain the same as the initial states. (C) In a system without protein turnover but phosphorylation, the protein will be fully phosphorylated. The phosphorylated state is absent in a system with only dephosphorylation. Analogously, with dephosphorylation active, the protein will be fully dephosphorylated. With both reactions active, we expect both elemental states to be present at equilibrium (compare <xref ref-type="fig" rid="fig2" hwp:id="xref-fig-2-2" hwp:rel-id="F2">Fig 2</xref>). (D) In a system where degradation but not synthesis is active, neither of the two elemental states will be present (the protein is completely depleted) regardless of the (de)phosphorylation reactions and initial states. (E) In a system with protein synthesis and phosphorylation, both elemental states will be true, regardless of the presence of the other reactions and the initial values. Without phosphorylation, only the unmodified protein will be in the system. The exception is the case where degradation and phosphorylation are inactive but the phosphorylated protein is present initially. As no reactions affect the phosphorylated protein, it will remain in the system (compare panel B).</p></caption><graphic xlink:href="107235_fig1" position="float" orientation="portrait" hwp:id="graphic-1"/></fig><fig id="fig2" position="float" orientation="portrait" fig-type="figure" hwp:id="F2" hwp:rev-id="xref-fig-2-1 xref-fig-2-2"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIG2</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F2</object-id><object-id pub-id-type="publisher-id">fig2</object-id><label>Figure 2:</label><caption hwp:id="caption-2"><title hwp:id="title-11">Discretisation of rate equilibrium.</title><p hwp:id="p-23">The figure shows the comparison between the equilibrium of rates in a dynamic system and a qualitative approach. The inner graph shows the behaviour of a dynamic system with two different states; unphosphorylated (0) and phosphorylated (P), under two different ratios of phosphorylation to dephosphorylation (assuming first order kinetics): I) The rate constants are identical II) Phosphorylation is an order of magnitude faster. In both cases, we can observe that the concentration of one state (P) increases and the concentration of the other (0) decreases, but at equilibrium both states will be present. We note that the forward reaction is qualitatively dominant over the reverse reaction (from the perspective of each state). If a state is being produced by a reaction, the state will be true. We discretise the reaction system accordingly, assuming that both states will be true in a reaction cycle where both reactions are active.</p></caption><graphic xlink:href="107235_fig2" position="float" orientation="portrait" hwp:id="graphic-2"/></fig><table-wrap id="tbl1" position="float" orientation="portrait" hwp:id="T1" hwp:rev-id="xref-table-wrap-1-1 xref-table-wrap-1-2 xref-table-wrap-1-3 xref-table-wrap-1-4"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/TBL1</object-id><object-id pub-id-type="other" hwp:sub-type="slug">T1</object-id><object-id pub-id-type="publisher-id">tbl1</object-id><label>Table 1</label><caption hwp:id="caption-3"><p hwp:id="p-24">Reactions have different effect on states.</p></caption><graphic xlink:href="107235_tbl1" position="float" orientation="portrait" hwp:id="graphic-3"/></table-wrap></sec><sec id="s3b" hwp:id="sec-9"><title hwp:id="title-12">Generic update rules define a molecular bipartite Boolean model</title><p hwp:id="p-25">Next, we proceeded to define a semantic mapping from rxncon to a Boolean model that fulfils this behaviour. The objective of the Boolean model is to represent a rule based model without any free parameters that provides a systems-level (as opposed to molecular) description. We decided to keep the bipartite nature of the rxncon network with separate nodes for elemental reactions and elemental states. The update rules for these two set of nodes are also based on two distinct sets of edges: The truth value of elemental states depends on reactions, as discussed above, and the truth table of elemental reactions depends on contingencies, i.e. regulatory constraints on reactions. Together, reaction and state nodes, and transition and contingency edges suffice to describe the regulatory structure of the system. However, to turn this regulatory structure into a Boolean model, we need to make certain assumptions. In particular, we make three major assumptions: First, we assume that the truth value of a state derives from a local equilibrium motif, which allowed us to derive the truth tables above. Second, we assume that a state is TRUE if it abundant enough to be functionally important, and, inversely, that if it is TRUE it is functionally important. That, in combination with the equilibrium assumption discussed above, means that turning a state off requires inhibiting the reaction(s) creating it. Third, we assume that any intersection of elemental sets is TRUE as long as all the individual elemental states are TRUE: this allows us to translate contingencies that are defined on individual molecules into systems-level quantities. With these assumptions, we can build generic update rules for elemental reactions and states.</p><p hwp:id="p-26">To create the Boolean models, we translate the rxncon model into a set of reaction targets and a set of state targets. The state targets correspond to elemental states, i.e. bound state at specific domains, modification state at specific residues, or localisation to a specific compartment. These states can be neutral (0), referring to the native state and compartment, or they can be bound/modified/localised with/by/to specific components/modifications/compartments. In addition, we create generic component state targets for all components in the network that have no elemental state variables, to enable synthesis, degradation and modelling of kinases that carry no further structure. The reaction targets correspond to elemental reactions, although sometimes with additional nodes for degradation reactions as discussed in detail in the methods section. The reaction targets also hold the information needed to create the update rules: First, the effect they have on different states (Synthesise, Degrade, Produce, Consume; compare <xref ref-type="table" rid="tbl1" hwp:id="xref-table-wrap-1-2" hwp:rel-id="T1">Table 1</xref>). This information is extracted from the skeleton rule in the reaction type definition. Second, the regulatory constraints they are subject to, in the form of a Boolean expression of elemental states. The first formalises the reaction layer and the second formalises the contingency layer of the rxncon model. Together, they suffice to create the complete set of update rules.</p><p hwp:id="p-27">The reaction target updates reflect the regulatory layer of the rxncon model. It directly corresponds to the contingency list. In a system without synthesis and degradation, the truth value of a reaction is TRUE if all required elemental states are TRUE and all inhibitory elemental states are FALSE. However, Boolean models can only account for all-or-nothing effect; hence quantitative contingencies are either mapped on qualitative contingencies or ignored. Hence, the reaction updates are straightforward to build. Note that the truth value of reactions is independent of the source state availability. A reaction being TRUE does not mean that it will execute, this also requires the source state to be present which is handled in the state update. This division is due to both technical and conceptual reasons. First, the reaction target update is intended to capture the contingency layer, which does not include source state information (this belongs to the reaction layer). Second, it is necessary to avoid certain artefacts when we consider smoothing (see below). In a system with synthesis or degradation, we need to include the components in the update rule (see methods). In this general case, the reaction target is TRUE if all involved components are TRUE, all required elemental states are TRUE and all inhibitory elemental states are FALSE (<xref rid="fig3" ref-type="fig" hwp:id="xref-fig-3-1" hwp:rel-id="F3">Fig 3</xref>).</p><fig id="fig3" position="float" orientation="portrait" fig-type="figure" hwp:id="F3" hwp:rev-id="xref-fig-3-1 xref-fig-3-2 xref-fig-3-3"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIG3</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F3</object-id><object-id pub-id-type="publisher-id">fig3</object-id><label>Figure 3:</label><caption hwp:id="caption-4"><title hwp:id="title-13">The generic update rules.</title><p hwp:id="p-28">The figure shows the generic update rules of the bipartite Boolean Model for reaction targets and state targets. For simplicity, we add only one component and one reaction of each type. (A) shows a system without degradation and synthesis. The update rule for the reaction depends only on its contingencies. The Boolean expression of the contingency depends on the reconstruction. The state target update rule depends only on producing and consuming reactions and those on their source state targets. (B) Synthesis and degradation reactions have an influence on a component level on the system. To take this into account we add components to both update rules. A component is defined as a Boolean combination of state targets sharing a specific component. State targets which cannot coexist on a single molecule level are combined by Boolean OR and state targets which can coexist are combined by Boolean AND operators (see legend). Now, the update rule for a reaction target depends on a component and its contingencies. In the update rule for a state target we add a single component, synthesis and degradation reaction. Each of the state target update rules can be modified by smoothing. This is realised by replacing the source state target by the source state target OR the production of the respective source state target AND the source states needed to run the reaction AND its synthesis OR NOT its degradation. This ensures that the system will have the capacity of running the reaction now or a step ahead.</p></caption><graphic xlink:href="107235_fig3" position="float" orientation="portrait" hwp:id="graphic-4"/></fig><p hwp:id="p-29">The state target updates reflect the reaction layer of the rxncon model. It integrates the effect of all elemental reactions on each elemental state into a truth value, in accordance with the reasoning above. First, it depends on the active reactions, in a hierarchy that depends on the effect each reaction has from the perspective of the specific target (compare <xref ref-type="table" rid="tbl1" hwp:id="xref-table-wrap-1-3" hwp:rel-id="T1">table 1</xref>). Second, the effect of each reaction is conditional on the availability of their source state(s). That is, the reaction only has an effect if the reaction target is TRUE and all its source states, i.e. consumed states, are TRUE. In addition, a state target that is not subject to any reaction remains at its current truth value, i.e. it has a memory. To determine the truth value of a state target, the effect of the reactions is assembled with the following hierarchy: Synthesis &gt; Degradation &gt; Production &gt; Consumption, in accordance with <xref rid="fig1" ref-type="fig" hwp:id="xref-fig-1-6" hwp:rel-id="F1">Figure 1</xref>. In a system without synthesis and degradation, and with one producing and one consuming reaction, the state will be TRUE if the producing reaction is TRUE and all its source states are TRUE, or if the state is TRUE and either the consuming reaction is FALSE or one of its source states is FALSE (<xref rid="fig3" ref-type="fig" hwp:id="xref-fig-3-2" hwp:rel-id="F3">Fig 3</xref>). Adding a synthesis and degradation reaction has different effects on the update rules for a neutral and a modified state, as only neutral states are synthesised directly. With degradation TRUE but synthesis FALSE, both a neutral and modified state is FALSE. However, a neutral state is always true with a synthesis reaction TRUE, while a modified state needs both a synthesis reaction to be TRUE and a producing reaction to be active (i.e. TRUE and with all source states TRUE), as the state is not directly synthesised. In addition, all components in the state must be TRUE, as in the reaction updates. Hence, state updates are more complex than reaction updates, but knowledge of the role each reaction has on each state target suffices for assembly of complete update rules.</p><p hwp:id="p-30">Together, the reaction and state target updates completely define the bipartite Boolean model. To test if the update logic described above captures the expected behaviour, we implemented the model generation process (see methods) and used it to generate the 64 models corresponding to the minimal circuitry above (<xref rid="fig1" ref-type="fig" hwp:id="xref-fig-1-7" hwp:rel-id="F1">Fig 1A</xref>). The models were simulated using BoolNet [<xref ref-type="bibr" rid="c19" hwp:id="xref-ref-19-1" hwp:rel-id="ref-19">19</xref>], as described in detail in the methods. The attractor states are visualised in <xref rid="fig4" ref-type="fig" hwp:id="xref-fig-4-1" hwp:rel-id="F4">Figure 4</xref>. The model behaviours correspond to our expectations with one notable exception. In the absence of synthesis and degradation, but in the presence of both phosphorylation and dephosphorylation, the model displays an oscillatory behaviour when only one of the two states is initiated (<xref rid="fig4" ref-type="fig" hwp:id="xref-fig-4-2" hwp:rel-id="F4">Fig 4A</xref>). Closer inspection reveals that this is due to periodic source state depletion. The phosphorylation and dephosphorylation reactions are constitutive (no contingencies, no loss of components), and the oscillation due to the states are completely encoded in the state update rule. Indeed, as soon as a reaction executes, dependent on its source state, it depletes the source state pool. Hence, the reactions alternate in firing, triggering out-of-phase oscillation in the truth value of the states. Consistently, these oscillations disappear when both state are initiated or when the source state is repleted through synthesis. We consider these trivial oscillations highly undesirable in our systems-level description, but note that they would be appropriate for models of single molecules. This may be consistent with the rule based basis of the algorithm, but the trivial oscillations should be eliminated for the method to be useful for system level simulations. Nevertheless, the outcome is highly encouraging, as 62 out of 64 models matched the expected behaviour.</p></sec><sec id="s3c" hwp:id="sec-10"><title hwp:id="title-14">Source state smoothing eliminates the trivial oscillations</title><p hwp:id="p-31">Next, we adapted the bBM logic to capture the signal transduction network at the single cell level. To do this, we eliminated the trivial source state oscillations in reaction cycles. The basic assumption behind this goes back to the assumption of local equilibrium: In a reaction cycle with both forward and reverse reactions, both states will be present at equilibrium. To implement this, we adapted the state target updates by widening the window in which we checked for source state availability: A reaction now needs the source state to be present, or to be produced (<xref rid="fig3" ref-type="fig" hwp:id="xref-fig-3-3" hwp:rel-id="F3">Fig 3C</xref>). This leads to a situation where states that are mutually exclusive at the single molecule level can be present at the same time at the systems level. This can be justified by integrating over molecules or over time. If many molecules are present in the system, and if both reactions in the cycle are active, then both of them will be present in some molecules at any given time. Similarly, if a single molecule is cycling through two mutually exclusive states sufficiently fast, then, within the crude unit of a Boolean time-step, the molecule will be present in both states within the time window. The smoothing assumption only breaks down in the context of few molecules and low reaction rates, but in this case the reaction could also be considered to be functionally off. Having established the smoothing logic, we implemented it into the rxncon compiler tool (see methods) and recreated the 64 models with smoothing. We repeated the simulation and compared the results to the original simulation (<xref rid="fig4" ref-type="fig" hwp:id="xref-fig-4-3" hwp:rel-id="F4">Fig 4B</xref>). The oscillatory behaviour disappeared, but no other simulation results changed. Hence, the simulation results exactly match the behaviour we expect from a model of this reaction motif.</p><fig id="fig4" position="float" orientation="portrait" fig-type="figure" hwp:id="F4" hwp:rev-id="xref-fig-4-1 xref-fig-4-2 xref-fig-4-3"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIG4</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F4</object-id><object-id pub-id-type="publisher-id">fig4</object-id><label>Figure 4:</label><caption hwp:id="caption-5"><title hwp:id="title-15">The possible attractors of the generic reaction motif.</title><p hwp:id="p-32">The minimal reaction circuitry was implemented and simulated with each of the 16 possible reaction configurations from all four possible initial states. We compared the attractor state to the expectations ( <xref ref-type="fig" rid="fig1" hwp:id="xref-fig-1-8" hwp:rel-id="F1">Fig 1</xref>). (A) Using the basic update rules, we cannot reproduce the expected behaviour in two of the 64 simulations. When both phosphorylation and dephosphorylation reactions are active, and one but not both states are initiated as TRUE, then the two states do not stabilise as TRUE but oscillate out of phase between TRUE and FALSE (arrows). (B) Using the source state smoothed update rules, we can reproduce the expected behaviour in all 64 simulations. The trivial oscillations are gone, and both states now stabilise as TRUE under these conditions.</p></caption><graphic xlink:href="107235_fig4" position="float" orientation="portrait" hwp:id="graphic-5"/></fig></sec><sec id="s3d" hwp:id="sec-11"><title hwp:id="title-16">The update rules can be used as LEGO bricks to assemble a systems level model</title><p hwp:id="p-33">Next, we applied the bBM logic to simulate a linear pathway. We chose a simplified model of the HOG MAP kinase pathway from <italic toggle="yes">Saccharomyces cerevisiae</italic> (<xref rid="fig5" ref-type="fig" hwp:id="xref-fig-5-1" hwp:rel-id="F5">Fig 5</xref>; taken from [<xref ref-type="bibr" rid="c14" hwp:id="xref-ref-14-2" hwp:rel-id="ref-14">14</xref>]). We created a rxncon 2.0 model of this pathway (<xref ref-type="table" rid="tbl1" hwp:id="xref-table-wrap-1-4" hwp:rel-id="T1">Table S1</xref>), and used this to generate the bBM using the generic update rules with smoothing. Already this small model has 28 reaction and state targets, and hence 2<sup>28</sup> (∼10<sup>8</sup>) possible initial states. As this is too many for an exhaustive search, we decided to use a generic start state for all simulations: All neutral elemental states are TRUE, all generic component states (for components with no elemental states) are TRUE, and all other nodes are FALSE. From this highly artificial initial state, we let the model find its own natural “off-state” by executing it until an attractor is reached (<xref rid="fig5" ref-type="fig" hwp:id="xref-fig-5-2" hwp:rel-id="F5">Fig 5B</xref>). At this point, we change the input state and repeat to see the response of the pathway to the input, and repeat this process until the model returns to a state we have already seen. As can be seen from <xref rid="fig5" ref-type="fig" hwp:id="xref-fig-5-3" hwp:rel-id="F5">Figure 5B</xref>, the HOG pathway responds appropriately to turgor: It turns off the kinase cascade. For comparison, we repeated the simulation with the non-smoothed logic (<xref rid="fig5" ref-type="fig" hwp:id="xref-fig-5-4" hwp:rel-id="F5">Fig 5C</xref>), where we see the signal passing the network despite trivial oscillations. However, the system does not converge to point attractors, leading to more complex analysis and interpretation. There are three striking blocks in the heat-map: First, the initial neutral states never turn off. Second, there is a block of reactions that turn on directly, and stay on throughout the simulation. Third, there is a block that turns on and off in response to the signal. The third block contains the reactions and states that actually transmit the information. The second block contains constitutive reactions, which are either unregulated (e.g. dephosphorylation reactions), or at the level of source state availability (e.g. phosphotransfer from Sln1 to Ypd1). The first block contains all the neutral states. These remain true because the reactions that produce them are considered unregulated, which may be due to experimental bias as discussed below. Hence, the logic of the generic update rules is sufficient to convert a rxncon network into a functional bBM that accurately predicts system level function. It is highly non-trivial that generic update rules that were defined for isolated reactions suffice to define a complete model that functions at the systems level, with no further tweaking or parametrisation. Taken together, the generic update rules map any given rxncon network on a unique Boolean model that predicts systems level function.</p><fig id="fig5" position="float" orientation="portrait" fig-type="figure" hwp:id="F5" hwp:rev-id="xref-fig-5-1 xref-fig-5-2 xref-fig-5-3 xref-fig-5-4 xref-fig-5-5 xref-fig-5-6 xref-fig-5-7"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIG5</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F5</object-id><object-id pub-id-type="publisher-id">fig5</object-id><label>Figure 5:</label><caption hwp:id="caption-6"><title hwp:id="title-17">A bipartite Boolean model of the HOG pathway.</title><p hwp:id="p-34">(A) The regulatory graph shows the Sln1branch of the HOG pathway. In the absence of turgor, Sln1 stays unphosphorylated. As turgor increases, the autophosphorylation of Sln1 activates a phosphotransfer cascade converging at Ssk1. The phosphorylated form of Ssk1 turns off the downstream MAP kinase pathway leading to dephosphorylation of the downstream transcription factor Hot1. (B) Simulation of a linear version of the model using source state smoothing of the update rules. We use our default assumptions (I) on the initial state and simulate the model until we reach an attractor (first OFF trajectory). We activate the system by turning [Turgor] ON and simulate again (ON trajectory) until we reach an attractor state. From there, we set [Turgor] OFF again and simulate the model until we reach an attractor. We observe that the model responds as expected to the input. (C) Simulation of the linear model without smoothing. The signal goes through the pathway, but analysis is complicated by the trivial oscillations as the system no longer converges on point attractors.(D) We extended the HOG model with a feedback loop, where activation of the pathway leads to increased turgor (via Hot1-{P}). This is simplification of an adaptive response through increased glycerol production and retention, which increases turgor. We simulate this model form the initial OFF attractor (see panel B), and note that the system oscillates as expected. (E) Simulation of the cyclic HOG model without smoothing. While a higher-order oscillation is detectable, the original signal is all but completely lost under the trivial oscillations.</p></caption><graphic xlink:href="107235_fig5" position="float" orientation="portrait" hwp:id="graphic-6"/></fig></sec><sec id="s3e" hwp:id="sec-12"><title hwp:id="title-18">The bipartite Boolean logic correctly reproduces real oscillations</title><p hwp:id="p-35">The HOG pathway is a homeostatic pathway that maintains proper turgor pressure. The pathway output eventually leads to signal cessation through a physiological feedback loop [<xref ref-type="bibr" rid="c20" hwp:id="xref-ref-20-1" hwp:rel-id="ref-20">20</xref>]. To simulate this, we linked the most downstream component to the input that turns the pathway off (<xref rid="fig5" ref-type="fig" hwp:id="xref-fig-5-5" hwp:rel-id="F5">Fig 5A</xref>). We repeated the model creation and simulation, using the initial steady state of the linear model as starting condition. As shown in <xref rid="fig5" ref-type="fig" hwp:id="xref-fig-5-6" hwp:rel-id="F5">Figure 5D</xref>, the model now shows a periodic activation/deactivation behaviour similar to that when the input is changed manually. Hence, the bBM logic is fully capable of predicting biologically relevant oscillations. As comparison, we also simulated the cyclic HOG model without source state smoothing (<xref rid="fig5" ref-type="fig" hwp:id="xref-fig-5-7" hwp:rel-id="F5">Fig 5E</xref>). Here, the pathway signal is almost completely washed out by the trivial oscillations. The source state smoothing facilitates bBM analysis and clearly improves the interpretability of the simulation results. Taken together, the bBM logic generates Boolean models that can predict systems level function for both linear and cyclic systems.</p></sec><sec id="s3f" hwp:id="sec-13"><title hwp:id="title-19">The bipartite Boolean logic scales to large-scale systems</title><p hwp:id="p-36">Finally, we applied the method on the pheromone response pathway of baker’s yeast. We chose this pathway to benchmark the bBM method due to the existence of an excellently annotated, comprehensive and detailed RBM [<xref ref-type="bibr" rid="c21" hwp:id="xref-ref-21-1" hwp:rel-id="ref-21">21</xref>]. We previously translated this model to rxncon [<xref ref-type="bibr" rid="c15" hwp:id="xref-ref-15-2" hwp:rel-id="ref-15">15</xref>], making it readily available for analysis. The original RBM contains 229 rules with 200 parameters (166 unknown) that define how 20 components can assume over 200.000 distinct states (<ext-link l:rel="related" l:ref-type="uri" l:ref="http://yeastpheromonemodel.org/wiki/Extracting_the_model" ext-link-type="uri" xlink:href="http://yeastpheromonemodel.org/wiki/Extracting_the_model" hwp:id="ext-link-2">http://yeastpheromonemodel.org/wiki/Extracting_the_model</ext-link>). While this is one of the most carefully built and curated RBMs, it remains difficult to meaningfully simulate it as such. Hence, it constitutes an excellent benchmark target for the bBM method.</p><p hwp:id="p-37">We simulated the pheromone bBM using a standardised simulation workflow (see methods). The rxncon implementation of the yeast pheromone model contains 163 elemental reactions, corresponding to 103 elemental states and 190 contingencies (Table S2). In the translation, we added undefined catalysts as unknown components which increased the component number but otherwise did not affect the complexity of the model. We generated the bBM using the smoothed update rules, which produced a bipartite Boolean model 209 reaction targets (due to duplication of degradation reaction targets; see material and methods), 180 state targets (including component targets having no elemental states e.g. Ste7mRNA). With 389 state variables, the model is too large to use an exhaustive search of initial states (statespace = 2<sup>389</sup>; ca 10<sup>117</sup> distinct configurations), so we rely on the default initiation state (all neutral state targets are TRUE, all generic component targets TRUE, all other targets are FALSE). From this initiation state, we first let the model find its natural “off-state”, as explained for the HOG pathway above, before we iteratively switched the input to TRUE and FALSE (<xref rid="fig6" ref-type="fig" hwp:id="xref-fig-6-1" hwp:rel-id="F6">Fig 6</xref>). We found that the pathway did not behave as expected, as the statements in the RBM have different quantitative effects and this information is lost in the Boolean model. We thus turned a minimal set of quantitative contingencies (K+/K−) that were ignored in the model generation into qualitative contingencies (!/x). In total, we needed to change 3 of the 91 quantitative contingencies to explain information transfer, indicating that a simpler model would be able to explain the pathway functionality. The updated version of the model does respond to pheromone treatment as expected.</p><fig id="fig6" position="float" orientation="portrait" fig-type="figure" hwp:id="F6" hwp:rev-id="xref-fig-6-1"><object-id pub-id-type="other" hwp:sub-type="pisa">biorxiv;107235v1/FIG6</object-id><object-id pub-id-type="other" hwp:sub-type="slug">F6</object-id><object-id pub-id-type="publisher-id">fig6</object-id><label>Figure 6:</label><caption hwp:id="caption-7"><title hwp:id="title-20">Simulation of the yeast pheromone pathway.</title><p hwp:id="p-38">The simulation results of the pheromonemodel displayed without synthesis and degradation reaction, for clarity. We show the model behaviour upon stimulation with pheromone. Adding pheromone leads to the activation of a MAPK cascade with the phosphorylation of Far1, Dig1 and Ste11 as the most downstream targets that we consider in this model. Upon removal of pheromone, the system eventually goes back to the original state, except for the feedback phosphorylation which – in the original model – is only eliminated by degradation.</p></caption><graphic xlink:href="107235_fig6" position="float" orientation="portrait" hwp:id="graphic-7"/></fig><p hwp:id="p-39">Taken together, these results show that the bipartite Boolean logic is scalable, and can be used to predict behaviour of systems that are too large to be simulated by rule based modelling. Furthermore, it highlights the value of the bBM approach in network validation: The generic update rules map rxncon models on a unique bBM that can predict the system level functionality of that rxncon model.</p></sec></sec><sec id="s4" hwp:id="sec-14"><title hwp:id="title-21">Discussion</title><p hwp:id="p-40">Here, we present a qualitative simulation method for large-scale mechanistically detailed signal transduction networks. The formalism is based on Boolean logic and makes use of the BoolNet package for simulation. However, we present a completely new simulation logic. Based on detailed analysis of a simple reaction motif, and on a small set of standard assumptions, we define two generic update rules: one for reaction and one for state targets. These generic update rules map a bipartite rxncon network on a unique bipartite Boolean model with defined truth tables. The elemental reactions define the update rules for state targets, and the contingencies define the update rules for reaction targets. We show that these building blocks can be assembled like LEGO-bricks into a bipartite Boolean model that predicts system level function without further optimisation at the system level.</p><p hwp:id="p-41">The unique mapping from rxncon to an executable bBM that predicts system behaviour is highly non-trivial, and provides a powerful tool for network validation. Normally, it is relatively easy to build a Boolean model structure, but highly non-trivial to define truth tables that enable the model to reproduce the behaviour of the system. Here, we find that the regulatory structure encoded in the rxncon network already uniquely defines a Boolean model with a set truth table, and that this Boolean model meaningfully predicts system level behaviour. This has far-reaching implications: First, it provides a computationally cheap validation tool in the process of building rule based models. The second generation rxncon is an expressive and precise language in which to build rule based models [<xref ref-type="bibr" rid="c16" hwp:id="xref-ref-16-3" hwp:rel-id="ref-16">16</xref>]. However, in contrast to direct rule based model development, the rxncon network can also be used to generate a bBM. As the bBM can be simulated directly without parametrisation, it provides a tool to validate the model structure without prior parametrisation. Hence, it can be used to finalise developing the structural part of the rule based model before entering the more expensive parametrisation cycles. Second, the rxncon language can be used to build large-scale, perhaps even genome-scale, models of signal transduction. The unambiguous mapping on an executable model provides a validation tool for these networks, similar to what exists for metabolic networks [<xref rid="c4" ref-type="bibr" hwp:id="xref-ref-4-2" hwp:rel-id="ref-4">4</xref>, <xref rid="c5" ref-type="bibr" hwp:id="xref-ref-5-2" hwp:rel-id="ref-5">5</xref>]. Therefore, rxncon 2.0 can be used to create large-scale models of signal transduction, which can be directly validated with the bBM method presented here. The bBM formalises the molecular interactions at the microscopic system level into a model that can predict the pathway or network function at the macroscopic level (e.g. input-output relationships). Hence, the work presented here will contribute to a reconstruction workflow for large-scale signal transduction network.</p><p hwp:id="p-42">The bipartite Boolean modelling formalism here is a complete reinvention of the bBM published previously [<xref ref-type="bibr" rid="c14" hwp:id="xref-ref-14-3" hwp:rel-id="ref-14">14</xref>]. First, it is based on the second generation rxncon language, which has eliminated the shortcomings of the initial rxncon language and created a syntactically and semantically well-defined language [<xref ref-type="bibr" rid="c16" hwp:id="xref-ref-16-4" hwp:rel-id="ref-16">16</xref>]. In particular, rxncon 2.0 encodes the semantic meaning of reactions in the reaction type, which is of particular importance to mapping the rxncon reactions on the generic update rules. Moreover, it includes neutral states and enables states that are mutually exclusive at the single molecule to be present simultaneously at the systems level. That many of these neutral states appear unregulated in the models we analyse may have two reasons: First, there could be a constant pool of unmodified components in the cell, which is especially likely if there is a constant turnover (and hence synthesis, which per definition occurs in the neutral states). Second, it could reflect an experimental bias: At least in yeast, we know much more about the modifying reactions than about the reactions that reverse the modification (e.g. phosphorylation vs dephosphorylation, [<xref ref-type="bibr" rid="c15" hwp:id="xref-ref-15-3" hwp:rel-id="ref-15">15</xref>]). In addition to the change in the rxncon language itself, we have engineered the update rules from scratch. This has led to a number of important differences: First, the state updates mirror the reaction layer, including the dependence on source states for reactions. Second, synthesis and degradation of components are now mapped on elemental states, and degradation now functions both at the level of partial degradation (e.g. a ubiquitylated form of a protein is degraded, but the non-ubiquitylated pools remain protected) and at the level of complete degradation (all states and reactions involving a protein turn off). Third, the component states are not independent model entities, but a test for the presence for each residue or domain: If all mutually exclusive states at a single site or domain are FALSE, then the component has been completely degraded. Comparing the difference between the two formalisms, it is surprising that the original simulation method worked in so many cases [<xref ref-type="bibr" rid="c14" hwp:id="xref-ref-14-4" hwp:rel-id="ref-14">14</xref>, <xref ref-type="bibr" rid="c22" hwp:id="xref-ref-22-1" hwp:rel-id="ref-22">22</xref>, <xref ref-type="bibr" rid="c23" hwp:id="xref-ref-23-1" hwp:rel-id="ref-23">23</xref>]. Except a few issues around degradation (components degraded, but states/reactions remained true), the formalism worked well despite the bias towards modified states (neutral states were implicit) and the fact that modified and neutral states could not coexist even at the systems level. This may again be due to experimental bias: We simply know much more about the function of modifications. However, it may also be that the original rxncon language and bBM logic already was a useful approximation, describing the key features of the system. In either case, rxncon 2.0 and the new bBM logic provide a syntactically and semantically sounder foundation for large-scale network reconstruction, validation and simulation.</p><p hwp:id="p-43">These tools enable a scale-shift in signal transduction modelling. Hitherto, signal transduction models have been large-scale or mechanistically detailed, but not both. There are good reasons for this, as it is difficult to scale these models up. In particular, the microstate description – as exemplified by SBGN-PD diagrams - has catastrophic scaling due the combinatorial complexity of complexes and modifications [<xref rid="c6" ref-type="bibr" hwp:id="xref-ref-6-2" hwp:rel-id="ref-6">6</xref>]. Indeed, the large-scale efforts made in this format, by e.g. the Reactome team, who maps human signal transduction in the SBGN-PD format, have to be broken down into smaller models that are individually of much smaller scale [<xref ref-type="bibr" rid="c24" hwp:id="xref-ref-24-1" hwp:rel-id="ref-24">24</xref>]. These problems are largely alleviated in rule based modelling languages, which have been defined to address the combinatorial complexity [<xref ref-type="bibr" rid="c17" hwp:id="xref-ref-17-2" hwp:rel-id="ref-17">17</xref>, <xref ref-type="bibr" rid="c18" hwp:id="xref-ref-18-2" hwp:rel-id="ref-18">18</xref>]. The rule based approach supports efficient model definition (since the rules only contain the relevant centre and context and ignore the rest of the internal state of the reactants) and efficient model execution (as agent based models; [<xref ref-type="bibr" rid="c25" hwp:id="xref-ref-25-1" hwp:rel-id="ref-25">25</xref>]). However, updates and extensions can have very non-local impact on the set of rules. Hence, it will be more difficult to maintain and extend a rule-based model as the scope increases. In contrast, the rxncon language makes use of independent statements, where additions and revision only have local effect in that particular reaction, the state(s) it change, and the contingencies that directly use them [<xref ref-type="bibr" rid="c16" hwp:id="xref-ref-16-5" hwp:rel-id="ref-16">16</xref>]. Hence, the rxncon language enables large-, possibly genome-, scale signal transduction networks. These networks can be used to create the corresponding rule based networks, but those models still require parametrisation – which will remain infeasible at the genome-scale for the foreseeable future. Here, we present a method to simulate such networks without the need for parametrisation. The method is qualitative only, but even metabolic modelling – clearly the state-of-the-art in genome-scale modelling – is limited to qualitative or semi-quantitative methods at the genome scale. Taken together, the method we present here has the potential to enable simulation of genome-scale models of signal transduction. Together with the rxncon 2.0 language, it offers the possibility to build, validate and simulate genome-scale models of signal transduction networks – that can be turned into rule based models as soon as the quantitative knowledge makes it meaningful.</p><p hwp:id="p-44">These tools enable a scale-shift in signal transduction modelling. Hitherto, signal transduction models have been large-scale or mechanistically detailed, but not both. There are good reasons for this, as it is difficult to scale these models up. In particular, the microstate description – as exemplified by SBGN-PD diagrams - has catastrophic scaling due the combinatorial complexity of complexes and modifications [<xref rid="c6" ref-type="bibr" hwp:id="xref-ref-6-3" hwp:rel-id="ref-6">6</xref>]. Indeed, the large-scale efforts made in this format, by e.g. the Reactome team, who maps human signal transduction in the SBGN-PD format, have to be broken down into smaller models that are individually of much smaller scale [<xref ref-type="bibr" rid="c24" hwp:id="xref-ref-24-2" hwp:rel-id="ref-24">24</xref>]. These problems are largely alleviated in rule based modelling languages, which have been defined to address the combinatorial complexity [<xref ref-type="bibr" rid="c17" hwp:id="xref-ref-17-3" hwp:rel-id="ref-17">17</xref>, <xref ref-type="bibr" rid="c18" hwp:id="xref-ref-18-3" hwp:rel-id="ref-18">18</xref>]. The rule based approach supports efficient model definition (since the rules only contain the relevant centre and context and ignore the rest of the internal state of the reactants) and efficient model execution (as agent based models; <xref ref-type="bibr" rid="c25" hwp:id="xref-ref-25-2" hwp:rel-id="ref-25">25</xref>). However, updates and extensions can have very non-local impact on the set of rules. Hence, it will be more difficult to maintain and extend a rule-based model as the scope increases. In contrast, the rxncon language makes use of independent statements, where additions and revision only have local effect in that particular reaction, the state(s) it change, and the contingencies that directly use them [<xref ref-type="bibr" rid="c16" hwp:id="xref-ref-16-6" hwp:rel-id="ref-16">16</xref>]. Hence, the rxncon language enables large-, possibly genome-, scale signal transduction networks. These networks can be used to create the corresponding rule based networks, but those models still require parametrisation – which will remain infeasible at the genome-scale for the foreseeable future. Here, we present a method to simulate such networks without the need for parametrisation. The method is qualitative only, but even metabolic modelling – clearly the state-of-the-art in genome-scale modelling – is limited to qualitative or semi-quantitative methods at the genome scale. Taken together, the method we present here has the potential to enable simulation of genome-scale models of signal transduction. Together with the rxncon 2.0 language, it offers the possibility to build, validate and simulate genome-scale models of signal transduction networks – that can be turned into rule based models as soon as the quantitative knowledge makes it meaningful.</p></sec></body><back><ack hwp:id="ack-1"><title hwp:id="title-22">Acknowledgements</title><p hwp:id="p-45">This work was supported by the German Federal Ministry of Education and Research via e:Bio Cellemental (FKZ0316193, to MK).</p></ack><ref-list hwp:id="ref-list-1"><title hwp:id="title-26">References</title><ref id="c1" hwp:id="ref-1" hwp:rev-id="xref-ref-1-1"><label>1.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.1" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-1"><string-name name-style="western" hwp:sortable="Fisher J."><surname>Fisher</surname>, <given-names>J.</given-names></string-name> and <string-name name-style="western" hwp:sortable="Henzinger T.A."><surname>Henzinger</surname> <given-names>T.A.</given-names></string-name>, <article-title hwp:id="article-title-2">Executable cell biology</article-title> <source hwp:id="source-1">Nat Biotechnol</source> <year>2007</year> <volume>25</volume> <issue>11</issue> <fpage>1239</fpage>–<lpage>49</lpage>.</citation></ref><ref id="c2" hwp:id="ref-2" hwp:rev-id="xref-ref-2-1 xref-ref-2-2"><label>2.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.2" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-2"><string-name name-style="western" hwp:sortable="Herrgard M.J."><surname>Herrgard</surname>, <given-names>M.J.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-3">A consensus yeast metabolic network reconstruction obtained from a community approach to systems biology</article-title>. <source hwp:id="source-2">Nat Biotechnol</source>, <year>2008</year>. <volume>26</volume>(<issue>10</issue>): p.<fpage>1155</fpage>–<lpage>60</lpage>.</citation></ref><ref id="c3" hwp:id="ref-3" hwp:rev-id="xref-ref-3-1"><label>3.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.3" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-3"><string-name name-style="western" hwp:sortable="Thiele I."><surname>Thiele</surname>, <given-names>I.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-4">A community-driven global reconstruction of human metabolism</article-title>. <source hwp:id="source-3">Nat Biotechnol</source>, <year>2013</year>. <volume>31</volume>(<issue>5</issue>): p.<fpage>419</fpage>–<lpage>25</lpage>.</citation></ref><ref id="c4" hwp:id="ref-4" hwp:rev-id="xref-ref-4-1 xref-ref-4-2"><label>4.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.4" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-4"><string-name name-style="western" hwp:sortable="Thiele I."><surname>Thiele</surname>, <given-names>I.</given-names></string-name> and <string-name name-style="western" hwp:sortable="Palsson B.O."><surname>Palsson</surname> <given-names>B.O.</given-names></string-name>, <article-title hwp:id="article-title-5">A protocol for generating a high-quality genome-scale metabolic reconstruction</article-title> <source hwp:id="source-4">Nat Protoc</source> <year>2010</year> <volume>5</volume> <issue>1</issue> <fpage>93</fpage>–<lpage>121</lpage>.</citation></ref><ref id="c5" hwp:id="ref-5" hwp:rev-id="xref-ref-5-1 xref-ref-5-2"><label>5.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.5" ref:linkable="no" ref:use-reference-as-is="yes" hwp:id="citation-5"><string-name name-style="western" hwp:sortable="Münzner U."><surname>Münzner</surname>, <given-names>U.</given-names></string-name>, <etal>et al.</etal>, <source hwp:id="source-5">Towards genome-scale models of signal transduction networks</source>. accepted.</citation></ref><ref id="c6" hwp:id="ref-6" hwp:rev-id="xref-ref-6-1 xref-ref-6-2 xref-ref-6-3"><label>6.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.6" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-6"><string-name name-style="western" hwp:sortable="Hlavacek W.S."><surname>Hlavacek</surname>, <given-names>W.S.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-6">The complexity of complexes in signal transduction</article-title>. <source hwp:id="source-6">Biotechnol Bioeng</source>, <year>2003</year>. <volume>84</volume>(<issue>7</issue>): p.<fpage>783</fpage>–<lpage>94</lpage>.</citation></ref><ref id="c7" hwp:id="ref-7" hwp:rev-id="xref-ref-7-1"><label>7.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.7" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-7"><string-name name-style="western" hwp:sortable="Faeder J.R."><surname>Faeder</surname>, <given-names>J.R.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-7">Combinatorial complexity and dynamical restriction of network flows in signal transduction</article-title>. <source hwp:id="source-7">Syst Biol (Stevenage)</source>, <year>2005</year>. <volume>2</volume>(<issue>1</issue>): p.<fpage>5</fpage>–<lpage>15</lpage>.</citation></ref><ref id="c8" hwp:id="ref-8" hwp:rev-id="xref-ref-8-1"><label>8.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.8" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-8"><string-name name-style="western" hwp:sortable="Faeder J.R."><surname>Faeder</surname>, <given-names>J.R.</given-names></string-name>,<string-name name-style="western" hwp:sortable="Blinov M.L."><surname>Blinov</surname> <given-names>M.L.</given-names></string-name>, and <string-name name-style="western" hwp:sortable="Hlavacek W.S."><surname>Hlavacek</surname> <given-names>W.S.</given-names></string-name>, <article-title hwp:id="article-title-8">Rule-based modeling of biochemical systems with BioNetGen</article-title> <source hwp:id="source-8">Methods Mol Biol</source> <year>2009</year> <volume>500</volume> <fpage>113</fpage>–<lpage>67</lpage>.</citation></ref><ref id="c9" hwp:id="ref-9"><label>9.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.9" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-9"><string-name name-style="western" hwp:sortable="Borisov N.M."><surname>Borisov</surname>, <given-names>N.M.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-9">Domain-oriented reduction of rule-based network models</article-title>. <source hwp:id="source-9">IET Syst Biol</source>, <year>2008</year>. <volume>2</volume>(<issue>5</issue>): p.<fpage>342</fpage>–<lpage>51</lpage>.</citation></ref><ref id="c10" hwp:id="ref-10" hwp:rev-id="xref-ref-10-1"><label>10.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.10" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-10"><string-name name-style="western" hwp:sortable="Samaga R."><surname>Samaga</surname>, <given-names>R.</given-names></string-name> and <string-name name-style="western" hwp:sortable="Klamt S."><surname>Klamt</surname> <given-names>S.</given-names></string-name>, <article-title hwp:id="article-title-10">Modeling approaches for qualitative and semi-quantitative analysis of cellular signaling networks</article-title> <source hwp:id="source-10">Cell Commun Signal</source> <year>2013</year>.<volume>11</volume> <issue>1</issue> <fpage>43</fpage>.</citation></ref><ref id="c11" hwp:id="ref-11" hwp:rev-id="xref-ref-11-1"><label>11.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.11" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-11"><string-name name-style="western" hwp:sortable="Oliveira A.P."><surname>Oliveira</surname>, <given-names>A.P.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-11">Regulation of yeast central metabolism by enzyme phosphorylation</article-title>. <source hwp:id="source-11">Mol Syst Biol</source>, <year>2012</year>. <volume>8</volume>: p.;<fpage>623</fpage>.</citation></ref><ref id="c12" hwp:id="ref-12" hwp:rev-id="xref-ref-12-1"><label>12.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.12" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-12"><string-name name-style="western" hwp:sortable="Handorf T."><surname>Handorf</surname>, <given-names>T.</given-names></string-name> and<string-name name-style="western" hwp:sortable="Klipp E."><surname>Klipp</surname> <given-names>E.</given-names></string-name>, <article-title hwp:id="article-title-12">Modeling mechanistic biological networks: an advanced Boolean approach</article-title> <source hwp:id="source-12">Bioinformatics</source> <year>2012</year> <volume>28</volume> <issue>4</issue> <fpage>557</fpage>–<lpage>63</lpage>.</citation></ref><ref id="c13" hwp:id="ref-13"><label>13.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.13" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-13"><string-name name-style="western" hwp:sortable="Kolczyk K."><surname>Kolczyk</surname>, <given-names>K.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-13">The Process-Interaction-Model: a common representation of rule-based and logical models allows studying signal transduction on different levels of detail</article-title>. <source hwp:id="source-13">BMC Bioinformatics</source>, <year>2012</year>. <volume>13</volume>: p.<fpage>251</fpage>.</citation></ref><ref id="c14" hwp:id="ref-14" hwp:rev-id="xref-ref-14-1 xref-ref-14-2 xref-ref-14-3 xref-ref-14-4"><label>14.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.14" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-14"><string-name name-style="western" hwp:sortable="Flottmann M."><surname>Flottmann</surname>, <given-names>M.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-14">Reaction-contingency based bipartite Boolean modelling</article-title>. <source hwp:id="source-14">BMC Syst Biol</source>, <year>2013</year>. <volume>7</volume>: p.<fpage>58</fpage>.</citation></ref><ref id="c15" hwp:id="ref-15" hwp:rev-id="xref-ref-15-1 xref-ref-15-2 xref-ref-15-3"><label>15.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.15" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-15"><string-name name-style="western" hwp:sortable="Tiger C.F."><surname>Tiger</surname>, <given-names>C.F.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-15">A framework for mapping, visualisation and automatic model creation of signal-transduction networks</article-title>. <source hwp:id="source-15">Mol Syst Biol</source>, <year>2012</year>. <volume>8</volume>: p.<fpage>578</fpage>.</citation></ref><ref id="c16" hwp:id="ref-16" hwp:rev-id="xref-ref-16-1 xref-ref-16-2 xref-ref-16-3 xref-ref-16-4 xref-ref-16-5 xref-ref-16-6"><label>16.</label><citation publication-type="other" citation-type="journal" ref:id="107235v1.16" ref:linkable="no" ref:use-reference-as-is="yes" hwp:id="citation-16"><string-name name-style="western" hwp:sortable="Romers J."><surname>Romers</surname>, <given-names>J.</given-names></string-name> and<string-name name-style="western" hwp:sortable="Krantz M."><surname>Krantz</surname> <given-names>M.</given-names></string-name>, <source hwp:id="source-16">rxncon 2.0: a language for executable molecular systems biology</source>. in preparation.</citation></ref><ref id="c17" hwp:id="ref-17" hwp:rev-id="xref-ref-17-1 xref-ref-17-2 xref-ref-17-3"><label>17.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.17" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-17"><string-name name-style="western" hwp:sortable="Blinov M.L."><surname>Blinov</surname>, <given-names>M.L.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-16">BioNetGen: software for rule-based modeling of signal transduction based on the interactions of molecular domains</article-title>. <source hwp:id="source-17">Bioinformatics</source>, <year>2004</year>. <volume>20</volume>(<issue>17</issue>): p.<fpage>3289</fpage>–<lpage>91</lpage>.</citation></ref><ref id="c18" hwp:id="ref-18" hwp:rev-id="xref-ref-18-1 xref-ref-18-2 xref-ref-18-3"><label>18.</label><citation publication-type="book" citation-type="book" ref:id="107235v1.18" ref:linkable="no" ref:use-reference-as-is="yes" hwp:id="citation-18"><string-name name-style="western" hwp:sortable="Danos V."><surname>Danos</surname>, <given-names>V.</given-names></string-name>,<etal>et al.</etal>, <source hwp:id="source-18">Rule-Based Modelling of Cellular Signalling, in CONCUR 2007 – Concurrency Theory: 18th International Conference, CONCUR 2007, Lisbon, Portugal, September 3-8, 2007. Proceedings, L. Caires and V.T. Vasconcelos, Editors. 2007</source>, <publisher-name>Springer Berlin Heidelberg</publisher-name>: <publisher-loc>Berlin, Heidelberg</publisher-loc>. p.;<fpage>17</fpage>–<lpage>41</lpage>.</citation></ref><ref id="c19" hwp:id="ref-19" hwp:rev-id="xref-ref-19-1"><label>19.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.19" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-19"><string-name name-style="western" hwp:sortable="Mussel C."><surname>Mussel</surname>, <given-names>C.</given-names></string-name>,<string-name name-style="western" hwp:sortable="Hopfensitz M."><surname>Hopfensitz</surname> <given-names>M.</given-names></string-name>, and <string-name name-style="western" hwp:sortable="Kestler H.A."><surname>Kestler</surname> <given-names>H.A.</given-names></string-name>, <article-title hwp:id="article-title-17">BoolNet–an R package for generation, reconstruction and analysis of Boolean networks</article-title> <source hwp:id="source-19">Bioinformatics</source> <year>2010</year> <volume>26</volume> <issue>10</issue>:p.<fpage>1378</fpage>–<lpage>80</lpage>.</citation></ref><ref id="c20" hwp:id="ref-20" hwp:rev-id="xref-ref-20-1"><label>20.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.20" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-20"><string-name name-style="western" hwp:sortable="Klipp E."><surname>Klipp</surname>, <given-names>E.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-18">Integrative model of the response of yeast to osmotic shock</article-title>. <source hwp:id="source-20">Nat Biotechnol</source>, <year>2005</year>. <volume>23</volume>(<issue>8</issue>): p.<fpage>975</fpage>–<lpage>82</lpage>.</citation></ref><ref id="c21" hwp:id="ref-21" hwp:rev-id="xref-ref-21-1"><label>21.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.21" ref:linkable="no" ref:use-reference-as-is="yes" hwp:id="citation-21"><string-name name-style="western" hwp:sortable="Thomson T."><surname>Thomson</surname>, <given-names>T.</given-names></string-name> <source hwp:id="source-21">Yeast Pheromone Model</source>. Available from: <ext-link l:rel="related" l:ref-type="uri" l:ref="http://yeastpheromonemodel.org" ext-link-type="uri" xlink:href="http://yeastpheromonemodel.org" hwp:id="ext-link-3">http://yeastpheromonemodel.org</ext-link>.</citation></ref><ref id="c22" hwp:id="ref-22" hwp:rev-id="xref-ref-22-1"><label>22.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.22" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-22"><string-name name-style="western" hwp:sortable="Mori T."><surname>Mori</surname>, <given-names>T.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-19">Stochastic simulation of Boolean rxncon models: towards quantitative analysis of large signaling networks</article-title>. <source hwp:id="source-22">BMC Syst Biol</source>, <year>2015</year>. <volume>9</volume>: p.<fpage>45</fpage>.</citation></ref><ref id="c23" hwp:id="ref-23" hwp:rev-id="xref-ref-23-1"><label>23.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.23" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-23"><string-name name-style="western" hwp:sortable="Lubitz T."><surname>Lubitz</surname>, <given-names>T.</given-names></string-name>, <etal>et al.</etal>, <article-title hwp:id="article-title-20">Network reconstruction and validation of the Snf1/AMPK pathway in baker’s yeast based on a comprehensive literature review</article-title>. <source hwp:id="source-23">Npj Systems Biology And Applications</source>, <year>2015</year>. <volume>1</volume>: p.<fpage>15007</fpage>.</citation></ref><ref id="c24" hwp:id="ref-24" hwp:rev-id="xref-ref-24-1 xref-ref-24-2"><label>24.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.24" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-24"><string-name name-style="western" hwp:sortable="Robertson M."><surname>Robertson</surname>, <given-names>M.</given-names></string-name>, <article-title hwp:id="article-title-21">Reactome: clear view of a starry sky</article-title>. <source hwp:id="source-24">Drug Discov Today</source>, <year>2004</year>. <volume>9</volume>(<issue>16</issue>): p.<fpage>684</fpage>–<lpage>5</lpage>.</citation></ref><ref id="c25" hwp:id="ref-25" hwp:rev-id="xref-ref-25-1 xref-ref-25-2"><label>25.</label><citation publication-type="journal" citation-type="journal" ref:id="107235v1.25" ref:linkable="yes" ref:use-reference-as-is="yes" hwp:id="citation-25"><string-name name-style="western" hwp:sortable="Sneddon M.W."><surname>Sneddon</surname>, <given-names>M.W.</given-names></string-name>, <string-name name-style="western" hwp:sortable="Faeder J.R."><surname>Faeder</surname> <given-names>J.R.</given-names></string-name>, and <string-name name-style="western" hwp:sortable="Emonet T."><surname>Emonet</surname> <given-names>T.</given-names></string-name>, <article-title hwp:id="article-title-22">Efficient modeling, simulation and coarse-graining of biological complexity with NFsim</article-title> <source hwp:id="source-25">Nat Methods</source> <year>2011</year> <volume>8</volume> <issue>2</issue> <fpage>177</fpage>–<lpage>83</lpage>.</citation></ref></ref-list></back></article>
